File ai_issue_test.py
content
import openai
from openai import AsyncOpenAI

from github_tickets.myissue import MyIssue


ISSUE_PROMPT = """
Rate this Github Issue on how much it is like a support ticket
10 meaning it is very much like a support ticket and 0 meaning it is not like a support ticket at all.
In a support ticket, there is a question or a problem that needs to be solved.
From a Customer or a User.
In the answer an agent working for the company provides a solution or an answer.
Answer only with a number from 0 to 10.
The issue to rate is this one:
"""


class IssueAI:
    def __init__(self):
        self.model = AsyncOpenAI()

    async def rate_issue(self, issue: MyIssue) -> float:
        prompt = await self.model.chat.completions.create(
            messages=[
                {"role": "system", "content": f"{ISSUE_PROMPT}"},
                {"role": "user", "content":
                    f"Title: {issue.title}\n"
                    f"Question: {issue.question_body[:200]}\n"
                    f"Answer: {issue.first_answer.body[:200]}\n"
                 },
            ],
            model="gpt-4o-mini"
        )
        return int(prompt.choices[0].message.content)

    async def is_ticket_like(self, issue: MyIssue) -> bool:
        rate = await self.rate_issue(issue)
        return rate >= 8



File all_issues.json
content
[
  {
    "title": "Terminal suggest: File extension boosts should include exe for Windows",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/225265",
    "author_name": "Tyriar",
    "question_body": "Repro:\r\n\r\n1. Create a folder with an .exe file and a .aaa file\r\n2. Type into terminal `.\\<folder_name>\\`, \ud83d\udc1b the exe file should be at the top\r\n\r\n![image](https://github.com/user-attachments/assets/abf0b561-985f-4a32-acd9-ed60b4080907)\r\n\r\n---\r\n\r\nhttps://github.com/microsoft/vscode/blob/25006fe8b1ed416f2e9f5a799310b39694b2e9c3/src/vs/workbench/services/suggest/browser/simpleCompletionModel.ts#L229-L260",
    "labels": [
      "bug",
      "terminal-suggest"
    ],
    "comments": 1,
    "issue_creation_time": "2024-08-09T16:37:30",
    "first_answer_author": "Tyriar",
    "first_answer_body": "Verify above repro, also verify in a folder that contains a **.ps1, .exe, .cmd and .bat** that they appear in that exact order\r\n\r\n![image](https://github.com/user-attachments/assets/6f396bb6-cc4d-44c0-96ad-ee195009b388)\r\n",
    "first_answer_creation_time": "2024-08-09T16:50:03",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Completing yarn.cmd from \"yarn\" should run the command",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/224485",
    "author_name": "Tyriar",
    "question_body": "Repro:\r\n\r\n1. Windows/pwsh\r\n2. Enable suggest\r\n3. Type `yarn`, you should see yarn.<somethign> as the top result\r\n4. Press enter, \ud83d\udc1b the completion is entered but it should also be run due to the `runOnEnter` default\r\n\r\n![Recording 2024-08-01 at 08 08 28](https://github.com/user-attachments/assets/08a3b1dd-2e16-449c-ba0a-145b8c313420)\r\n",
    "labels": [
      "bug",
      "unreleased",
      "terminal-suggest"
    ],
    "comments": 1,
    "issue_creation_time": "2024-08-01T15:09:40",
    "first_answer_author": "vs-code-engineering[bot]",
    "first_answer_body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE -->\n\t\t\tIssue marked as unreleased but unable to locate closing commit in issue timeline. You can manually reference a commit by commenting `\\closedWith someCommitSha`, or directly add the `insiders-released` label if you know this has already been releaased",
    "first_answer_creation_time": "2024-08-02T06:56:50",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Terminal suggest: Completions differ for args depending on when they are requested",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/224419",
    "author_name": "Tyriar",
    "question_body": "Repro:\r\n\r\n- pwsh\r\n- suggest enabled\r\n- type `git cl`, suggestions show including `clean`, `clone` and `citool`\r\n    <img width=\"164\" alt=\"Screenshot 2024-07-31 at 10 56 43\u202fAM\" src=\"https://github.com/user-attachments/assets/97890e89-0101-42b4-8233-cf9dc1e3eb2d\">\r\n- press escape\r\n- press ctrl+space, \ud83d\udc1b suggestions should be the same but now don't include `citool`\r\n    <img width=\"118\" alt=\"Screenshot 2024-07-31 at 10 56 51\u202fAM\" src=\"https://github.com/user-attachments/assets/43202209-f9e8-4124-968f-f4439b177cd2\">\r\n",
    "labels": [
      "bug",
      "terminal-suggest"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-31T17:57:20",
    "first_answer_author": "vs-code-engineering[bot]",
    "first_answer_body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE -->\n\t\t\tIssue marked as unreleased but unable to locate closing commit in issue timeline. You can manually reference a commit by commenting `\\closedWith someCommitSha`, or directly add the `insiders-released` label if you know this has already been releaased",
    "first_answer_creation_time": "2024-07-31T23:27:30",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Terminal suggest: Typing `-` in `cherry-` dismisses matching git suggestions",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/223883",
    "author_name": "Tyriar",
    "question_body": "- Windows/pwsh\r\n- Suggest enabled\r\n- Type `git cherry`, you should see completions for cherry-pick\r\n- Type `-`, \ud83d\udc1b the suggest widget hides\r\n\r\n![Recording 2024-07-26 at 06 15 31](https://github.com/user-attachments/assets/e9c7b867-d6a8-43c2-8560-e4b9c123556f)\r\n",
    "labels": [
      "bug",
      "terminal-suggest"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-26T13:16:42",
    "first_answer_author": "vs-code-engineering[bot]",
    "first_answer_body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE -->\n\t\t\tIssue marked as unreleased but unable to locate closing commit in issue timeline. You can manually reference a commit by commenting `\\closedWith someCommitSha`, or directly add the `insiders-released` label if you know this has already been releaased",
    "first_answer_creation_time": "2024-07-31T23:28:02",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Unsure about when to expect suggestions to automatically appear",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/223420",
    "author_name": "andreamah",
    "question_body": "Testing #223130\n\nI notice that sometimes, I need to trigger the suggest widget manually (ctrl+space). For example, I have` git add .\\.vscode\\notebooks\\` typed, and I need to ctrl+space to see the filenames.",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "terminal-suggest"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-23T22:55:02",
    "first_answer_author": "Tyriar",
    "first_answer_body": "Can repro. This isn't meant to be possible as completions should be requested again after the `\\` is typed:\r\n\r\n![image](https://github.com/user-attachments/assets/9d18e808-ce1a-40f6-934c-5547cca7075f)\r\n",
    "first_answer_creation_time": "2024-07-24T13:42:31",
    "was_closed_after_first_comment": true
  },
  {
    "title": "NVDA reads REPL as 'replace'",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/223350",
    "author_name": "andreamah",
    "question_body": "Testing #222238\n\nNot sure whether this is something in your control, but I noticed that NVDA reads REPL as replace when it's reading this:\n\n![Image](https://github.com/user-attachments/assets/79efa574-894e-44a8-b15f-e693c2eadde4)\n\nMight be a bit confusing. ",
    "labels": [
      "bug",
      "verified",
      "accessibility",
      "polish",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-23T16:34:59",
    "first_answer_author": "meganrogge",
    "first_answer_body": "Strange, but yeah, I can work around this by removing the acronym. \n\nNote to self and testers: this appears in both the debug console and debug view's accessibility help dialogs.",
    "first_answer_creation_time": "2024-07-23T20:39:53",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Handling of cells outside of viewport",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/223344",
    "author_name": "kieferrm",
    "question_body": "Testing #223152\n\n1) select two cells\n2) scroll the lower cell (cell 2) out of the viewport\n3) cmd+/ \n4) scroll cell 2 partially into the viewport -> only cell 1 has been commented\n5) cmd+/ -> cell 1 has been uncommented, cell 2 has been commented\n\nAfter step 3 I'd expect both cells to be commented and after step 5 both to be uncommented",
    "labels": [
      "bug",
      "notebook-commands"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-23T16:11:51",
    "first_answer_author": "Yoyokrazy",
    "first_answer_body": "Need to move the toggle comments action off of the editor command. Case is simpler overall since we are not operating on cursors or a specific selection. \r\n\r\nRelying on `editor.executeCommands()` is the limitation, as we don't have editors outside of the viewport. We can construct these edits in a similar way to a `LineCommentCommand` and simply apply them to the model, allowing us to apply to cells outside of the viewport",
    "first_answer_creation_time": "2024-07-25T22:34:56",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Settings URL handling - \"Open Current File as Release Notes\" command not working",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/223291",
    "author_name": "lszomoru",
    "question_body": "Testing #223027\n\n* Created a new Markdown file - test.md\n* Added the release notes sample to the file and saved it\n* Invoked the \"Open Current File as Release Notes\" command and it failed\n      ![Image](https://github.com/user-attachments/assets/3daa0820-1363-4dc6-ada8-07fdab1ff87f)\n\nNot seeing anything in the developer tools console nor in the various output channel logs.",
    "labels": [
      "bug",
      "verified",
      "release-notes",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-23T10:49:12",
    "first_answer_author": "alexr00",
    "first_answer_body": "I think that the document can't start with a header like that. To unblock testing, you can modify one of the existing release notes to include something similar to the example.",
    "first_answer_creation_time": "2024-07-23T11:57:12",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Breakpoints stuck under line numbers",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/221478",
    "author_name": "lramos15",
    "question_body": "I notice on the latest insiders now when I start and stop debugging the breakpoints are ending up below the line numbers instead of the gutter\n\n\n\n![Image](https://github.com/user-attachments/assets/7d8c4836-b50c-4464-9ba2-9c85bac44861)\n\n",
    "labels": [
      "bug",
      "verified",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-11T15:36:15",
    "first_answer_author": "connor4312",
    "first_answer_body": "@justschen this CSS rule applies to all glyph margin widgets, maybe you want to scope it more specifically for the lightbulb widget?\r\n\r\nhttps://github.com/microsoft/vscode/blob/31f831310c643ae03c4b84124b5a427d0bed0483/src/vs/editor/contrib/codeAction/browser/lightBulbWidget.css#L48-L53\r\n\r\nThis is overriding what was the [default styling](https://github.com/microsoft/vscode/blob/31f831310c643ae03c4b84124b5a427d0bed0483/src/vs/editor/browser/viewParts/glyphMargin/glyphMargin.css#L11-L20) for glyph margin widgets.",
    "first_answer_creation_time": "2024-07-11T15:53:35",
    "was_closed_after_first_comment": true
  },
  {
    "title": "VS Code 1.91 does not respect SourceControl.count",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/221450",
    "author_name": "Viknet",
    "question_body": "\nType: <b>Bug</b>\n\nStarting with version 1.91.0, the count badge on the Source Control icon no longer takes into account the `SourceControl.count` value and instead counts all SourceControlResourceGroup.\n\nSteps to reproduce:\n1. Set `git.countBadge` to \"tracked\"\n2. Create new untracked file in Git repository\n\nVS Code version: Code 1.91.0 (Universal) (ea1445cc7016315d0f5728f8e8b12a45dc0a7286, 2024-07-01T18:54:18.541Z)\nOS version: Darwin arm64 23.5.0\nModes:\n\n<details>\n<summary>System Info</summary>\n\n|Item|Value|\n|---|---|\n|CPUs|Apple M1 Pro (10 x 2400)|\n|GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled|\n|Load (avg)|2, 4, 4|\n|Memory (System)|32.00GB (1.32GB free)|\n|Process Argv|--enable-proposed-api jeanp413.open-remote-ssh --crash-reporter-id 481d6038-57fa-4033-9fd6-30428eae7833|\n|Screen Reader|no|\n|VM|0%|\n</details>Extensions: none\n<!-- generated by issue reporter -->",
    "labels": [
      "bug",
      "verified",
      "git"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-11T08:13:37",
    "first_answer_author": "Viknet",
    "first_answer_body": "It is not fixed in 1.91.1\r\n\r\nUPD: I see, it is fixed in insiders build 1.92.0.\r\nThank you!\r\n\r\n<img width=\"845\" alt=\"Screenshot 2024-07-22 at 13 56 23\" src=\"https://github.com/user-attachments/assets/7dda35ef-fc10-4a83-b7df-a147d3303bcd\">\r\n\r\n<details>\r\n  <summary>About</summary>\r\nVersion: 1.91.1 (Universal)\r\nCommit: f1e16e1e6214d7c44d078b1f0607b2388f29d729\r\nDate: 2024-07-09T22:07:54.982Z\r\nElectron: 29.4.0\r\nElectronBuildId: 9728852\r\nChromium: 122.0.6261.156\r\nNode.js: 20.9.0\r\nV8: 12.2.281.27-electron.0\r\nOS: Darwin arm64 23.5.0\r\n</details>",
    "first_answer_creation_time": "2024-07-22T11:00:16",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Bold text is streamed with asterisks and changed to bold font later + thinking icon flickers as it is turning",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/217946",
    "author_name": "aiday-mar",
    "question_body": "Testing #217639\r\n\r\nI created a new notebook with the `/newNotebook` command. As the response is streaming in, you see bold text streamed in with asterisks in front, when the closing asterisks are found, the corresponding text is changed to bold text. I am wondering if this can somehow be changed so that we directly stream in bold text on encountering asterisks?\r\n\r\nAfter the text is streamed in, there is a turning circular icon that appear that has the associated text `thinking`. The icon flickers as it is turning. The icon movement is not smooth.\r\n\r\nhttps://github.com/microsoft/vscode/assets/61460952/832d4bf5-ed42-462f-9cce-16f62f9f9f52\r\n\r\nThe log in the Window output is appended here.\r\n\r\n[testing4.docx](https://github.com/user-attachments/files/15969923/testing4.docx)\r\n",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "chat"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-25T10:55:55",
    "first_answer_author": "roblourens",
    "first_answer_body": "Problem 1: we fix up markdown lists that use `-` and numbers, but not `*` \ud83d\ude20 \n\nProblem 2: the intent is sending duplicate progress events: https://github.com/microsoft/vscode-copilot/issues/6482",
    "first_answer_creation_time": "2024-06-26T18:03:13",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Undo triggers strange ghost text suggestion",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/216434",
    "author_name": "joaomoreno",
    "question_body": "1. Open https://github.com/microsoft/vscode/blob/a8e00a00ddd047fd5346408b434bcc67956754ee/src/vs/base/node/unc.js#L29\r\n2. Select `Set`, replace with `Map`\r\n3. Undo\r\n\r\n\ud83d\udc1b Ghost text suggestion pops up strangely spreading the letters of `Set` within the suggestion.\r\n\r\nhttps://github.com/user-attachments/assets/d95f3d93-b2db-40a2-8159-a1bef0b1829d\r\n\r\n",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "inline-completions"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-18T09:51:40",
    "first_answer_author": "hediet",
    "first_answer_body": "To verify:\r\n* [Open this playground](https://microsoft.github.io/monaco-editor/playground.html?source=v0.50.0-dev-20240620&compareWith=v0.51.0-dev-20240621#XQAAAAKhFQAAAAAAAABBqQkHQ5NjdMjwa-jY7SIQ9S7DNlzs5W-mwj0fe1ZCDRFc9ws9XQE0SJE1jc2VKxhaLFIw9vEWSxW3yscxjlADRgmSaumWUF-TBOsVJ4S4FwfCDQb5-2uUHXTVAefbVSd9IzaZ_vv9VR9KugsKicUBqzt3JtKN8DfDx5R0r3ur2s54RBykaL4piZfz98N2xRf8gz92yhPCtslOlXZhOEcMeAyC_9QkQRuyxDUWy2d9tCOcmfEt3MxdHBoUe53CzTleB4ALPojvlvGzVvX8ODhXjkl4ORiXsyaxzwS8AnxPm8blXyeCOiVYuODdTlQKHw0j01cCDOwMyQYBJucqHoA62MYy1qI3pfW1uxhZrpR2IUVj54lYetQyzSo4tS9nFYQTUitI9f5QBOA3maen1QvbvMdqtla3xtk8zWgBZsOmf-d8T1qGD7kxtzPfeNnndn_1CUQolZm56o1j3kUnM8fQ7Hs6rJRW6QLg7sEUGvNagBidQYCxIOFqRxdNi5mar9E-SHTMxKZBO4oeoJGv4Tue_GY--92_e3FKD4sbGKB8kDWRi9Oz1f1DaapHE_ZZr70rVqcUfv2H1NE5__2Uo6Pbw7dieThDq7BJeSb4JuThS74HmDvzic1PG9v-NJTckAh8fzhkpP-uW9E3vRwURawkj5wZ3hVUNKJNwggeFVTnLOVBWZWqjeCkZ59dBXzrp0uJS56GA0SCR6Hnzc0Bh71Qg5qQ_1jXWYSTX78wntbH3bxdL8jtlzse7YHIv4PYxamNhk9833qHMl0REs5pMGXZq8LTs-iapNTx3UOmK6Y_g-QERG7oWnHbbahQu_ieQuwRt-aQ3I45pkt1uuL60QUyOxR4N1gYMinjwd0T40DqwlQjxVnhHVp3q6WGD5jRNf_1ewGCN9rH8uE3N_sfWQNOLabaIYAvGNBGPeU5G08N0i-M067MCJly4LWMUPoMQ3sGCqv905AXQdpCu_oRbxx_LW5V-MpFxjLABYpktT7AgXtqkxgjIU1OAesR0LdeuZdZcF8knyuHOLorpDFsk0v9pqdGUsphmTi9bXMWROEIAT5YIDn8f3ZcMM-QiHF5TXh_vF585a4FbDpN7mAXy9sJFSeew1F0eO-IWQqEQEn0fpCIHR17cBP_U9d5VefthgZ55DO3UtS4Pj3wfr2KuqpOlrlX4hazhwIfeDLRjw0_eLkte-zIbsR99_ZdxAXMYYUhawZ3ocTIYGqlyafjHhw-a8xjr_TV36UyK0NW7M-X1XIhh8AdUGrPhdF-P-secKCrMQLzfsrLhzTDHAUWLiLP272O9jxe7IWaxh-IIdTFFhT9dbWG01xrJPKytkVsJpGJ_heJ0zPiLKq-W8qVXMNjA40CXRjhKpcmI_aOFXTJ4EysnRALyN7r3LvE7vEcTsOmX_X0qsyox6saZLnfyG7v7V054x3Pq2wAIQuAo8cgOSJkEzI1IqTc_4mWEug2Irh4H2Hd4CI7xVWUtEv8dKMdUYt828S7cEwwoOqVfB0-nhzokmy5xsddiakjHKqkh_i_x_2FzYgIAG0qvwny4g9DSqEZ27bPaiX5OIJHwGsaxTLXBzcocRY8-j8R-QK7iJ4ptvD_jQTIoYCiRq46wRpD8tJ-4RKI7_oHscQffzy7R9rKEhfWDbCKKIi0wKt7vIxumimofQCv55ZpLdfp9QmcUWy_39COj9r0UZqT3N1s7RCByDxwAe2cAEBzlBh0LaKksUFHDdCi59wCEN54k1KSWMgUWqcswb4QD5e8-J-FFr2HbgBIYnJ0Y7rdXZ9efLfM-yo377MnDevrHcW5MhTqS3bUX3Ym9TkQplZLQYIs3TpkJVi5tmD_irNx2czYaOO22kgnFv--TzIWFZTgjk00klpF5KQ-A1eMc5QsrIi_dpwK6HGQC71ZeClYJrHE__ILwrtENVEvhxnhDrf1Keu4gbyj_1L9cypWwA6SUPxsG8L8dpBxSL8FkKUUKqW9sWlCYe6TwwgNQD4mZxfloHtY5sGp_z_zkiwegMI3CmkCOFOClEEKpfXdUprByBS8mPqPADJbWDkmRKTB3-_sEj_URqOehdoEMUq4GN_jHvvj3PKUw-TTl-OyVUBt_iEQOul1Q57r7Mb9o7K7uPLgWEljolSySj164yg3Ux3HyzJU3gUw6oD6XQ4JOgmvd7YFW1QFYFQkb-5AmOMDExgRXe9nfeG2_9s93osQUfpOcewVW54o29EYXV7hgUK_Rn0HOdsNS_3JaS1YYxDlnlNx3k72ygvxPqocvGq9UYKEcPe3Xao80vFum7CdVyK5D3uEkzLEj2u4QywXEruUbcdj__ysyn5p6o1m4NjoHVxewAlsJj0q3ytlL5XTzaKLmFGpDqnJG8QAF6XSwVlXfHJ0yFnXn2HCPzIYI_lm1ZgZBpAnlpfHAYWzyQEb5Hy07oYNi6rbVmFl8UoIKSKcjKF9-HxFKpW_jPq7QlLFJyk2NTnISThZ4XVFnVg8dmFLH4BvP7yNUp-TczpFn__tfKiF)\r\n* Double click on \"Set\" and type \"Map\", then undo.\r\n* Verify this is weird in the top editor and fixed in the bottom editor.",
    "first_answer_creation_time": "2024-06-20T09:39:22",
    "was_closed_after_first_comment": true
  },
  {
    "title": "accessibility signals are broken ",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/214798",
    "author_name": "meganrogge",
    "question_body": "Also, when `debouncePositionChanges` is `false`, there's still a delay per `accessibility.signalOptions.experimental.delays.*` which there should not be. \r\n\r\nThose should only apply when that is `true`.",
    "labels": [
      "bug",
      "important",
      "verified",
      "accessibility",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-10T16:12:43",
    "first_answer_author": "amunger",
    "first_answer_body": "tested a few audio queues and they seem to be working. Let me know if there was something more specific to verify.",
    "first_answer_creation_time": "2024-06-26T18:02:25",
    "was_closed_after_first_comment": true
  },
  {
    "title": "not specifying `maxResults` on `findTextInFiles`->`textSearchProvider` will use `MAX_INT` for `maxResults`",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/214189",
    "author_name": "andreamah",
    "question_body": "repro steps:\r\n1. create an extension that implements `vscode.TextSearchProvider`.\r\n2. Make a call for `findTextInFiles` via a command or something in your extension. DON'T set a value for the `maxResults` option.\r\n3. Run your extension. Set a breakpoint in `provideTextSearchResults`.\r\n5. In the debugger, notice that `maxResults` is `9007199254740991`. Ideally, we have a better default maxResults (probably the default for textSearch- 20 000)",
    "labels": [
      "bug",
      "api",
      "verified",
      "search",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-04T00:01:34",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- AUTHOR_VERIFICATION_REQUEST -->\nThis bug has been fixed in the latest release of [VS Code Insiders](https://code.visualstudio.com/insiders/)!\n\n@andreamah, you can help us out by commenting `/verified` if things are now working as expected.\n\nIf things still don't seem right, please ensure you're on version 0354163c1c66b950b0762364f5b4cd37937b624a of Insiders (today's or later - you can use `Help: About` in the command palette to check), and leave a comment letting us know what isn't working as expected.\n\nHappy Coding!",
    "first_answer_creation_time": "2024-06-26T19:09:17",
    "was_closed_after_first_comment": true
  },
  {
    "title": "\"Build server\" failed: Unable to verify integrity of downloaded node.js binary because no SHA256 checksum was found!",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213764",
    "author_name": "roblourens",
    "question_body": "https://dev.azure.com/monacotools/Monaco/_build/results?buildId=275552&view=logs&j=4801dce2-64f3-53d6-b366-d49a1977c639&t=12ed9f3f-1438-5538-b0b2-7a9cf536f94d\r\n\r\n```\r\n[21:33:25] Starting 'vscode-reh-win32-x64-min-ci'...\r\n[21:33:25] Starting node ...\r\n[21:33:25] Downloading node.js 20.11.1 win32 x64 from Microsoft/vscode-node...\r\n[21:33:25] Unable to verify integrity of downloaded node.js binary because no SHA256 checksum was found!\r\n[21:39:05] 'vscode-reh-win32-x64-min-ci' errored after 5.67 min\r\n[21:39:05] AbortError: This operation was aborted\r\n    at new DOMException (node:internal/per_context/domexception:53:5)\r\n    at AbortController.abort (node:internal/abort_controller:392:18)\r\n    at Timeout._onTimeout (D:\\a\\_work\\1\\s\\build\\lib\\fetch.js:44:53)\r\n    at listOnTimeout (node:internal/timers:573:17)\r\n    at process.processTimers (node:internal/timers:514:7)\r\nerror Command failed with exit code 1.\r\n```",
    "labels": [
      "bug",
      "verified",
      "vscode-build",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-29T03:43:16",
    "first_answer_author": "deepak1556",
    "first_answer_body": "Abort was from a network timeout, re-run should be fine for this case. However, the following is an error which has been present for a while unnoticed\r\n\r\n> Unable to verify integrity of downloaded node.js binary because no SHA256 checksum was found!\r\n\r\nI will use this issue to address it.",
    "first_answer_creation_time": "2024-05-29T04:18:43",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Missing documentation on signalOptions settings UI",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213670",
    "author_name": "chrmarti",
    "question_body": "Testing #213344\n\nThere no documentation on signalOptions:\n![Image](https://github.com/microsoft/vscode/assets/9205389/f173c9b1-1bc8-4c33-80e8-70e48b3b7a47)\n\nThere is some documentation on the leaf properties in the JSON, but it is unclear what `\"general\"` refers to.",
    "labels": [
      "bug",
      "verified",
      "accessibility",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-28T13:47:30",
    "first_answer_author": "connor4312",
    "first_answer_body": "I think the request was to have an overall description for the setting, as right now there's nothing until a user starts to complete properties in the settings.json\r\n\r\n<img width=\"636\" alt=\"image\" src=\"https://github.com/microsoft/vscode/assets/2230985/62bde016-0801-47a1-9f68-d2f60ac616b2\">\r\n",
    "first_answer_creation_time": "2024-05-30T22:16:49",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Uncaught TypeError: Cannot read properties of undefined (reading 'activeElement')",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213649",
    "author_name": "jrieken",
    "question_body": "Testing #213597\r\n\r\n* open issue report on web\r\n* go the extension flow, select a extension\r\n* click into the title input field\r\n* :bug: the console shows the error below \ud83d\udc47 \r\n\r\n```\r\nUncaught TypeError: Cannot read properties of undefined (reading 'activeElement')\r\n    at ot.m (workbench.web.main.js:135:43591)\r\n    at new ot (workbench.web.main.js:135:43760)\r\n    at xe (workbench.web.main.js:135:44211)\r\n    at b.ib (workbench.web.main.js:2406:7508)\r\n    at workbench.web.main.js:2406:5805\r\n```",
    "labels": [
      "bug",
      "verified",
      "issue-reporter"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-28T10:11:54",
    "first_answer_author": "justschen",
    "first_answer_body": "@jrieken can you check this now? I don't see anything anymore and i believe it's fixed with the new DOM checks that just got merged to fix https://github.com/microsoft/vscode/issues/213645 ",
    "first_answer_creation_time": "2024-05-29T23:05:01",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Ending the active session gives undefined activeStackItem even if there is another session",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213646",
    "author_name": "sandy081",
    "question_body": "Testing #213603\n\nHere is the extension code listening to activeStackItem\n\n```ts\ncontext.subscriptions.push(\n        vscode.debug.onDidChangeActiveStackItem(session => {\n            console.log('Active debug stack item changed: ', vscode.debug.activeStackItem);\n        })\n    );\n```\n\nSteps\n\n- Open a workspace with two python files\n- Install Python Extension\n- Open file 1 with content `print ('Hello File 1')`. Keep a break point on this line and start debugging this file. As expected break point hits and the debugging extension logs this stackItem.\n- Open file 2 with content `print ('Hello File 2')`. Keep a break point on this line and start debugging this file. As expected break point hits and the debugging extension logs this stackItem.\n- Resume the second session to continue.\n\n\ud83d\udc1b Extension logs `undefined` first for `activeStackItem` and after it logs the stack item of first session\n\n",
    "labels": [
      "bug",
      "debug"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-28T10:01:36",
    "first_answer_author": "connor4312",
    "first_answer_body": "Thanks for the bug. This actually represents the view state accurately at the moment: we focus the session, not a thread, and this is not represented in the API. I'll see if consumers run into a case where they need this info, but unless I hear something from consumers I plan to leave as-is.",
    "first_answer_creation_time": "2024-05-30T20:59:33",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Cannot use 'in' operator to search for 'command' in undefined",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213363",
    "author_name": "VSCodeTriageBot",
    "question_body": "```javascript\nTypeError: Cannot use 'in' operator to search for 'command' in undefined\nat d.value in out/vs/workbench/workbench.desktop.main.js:1876:13267\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.fire in src/vs/base/common/event.ts:1187:9\nat d.value in src/vs/platform/quickinput/browser/quickInput.ts:930:35\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.z in src/vs/base/common/event.ts:1167:9\nat s.fire in src/vs/base/common/event.ts:1191:9\nat <anonymous> in src/vs/base/common/event.ts:127:84\nat d.value in src/vs/base/common/event.ts:178:85\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.z in src/vs/base/common/event.ts:1167:9\nat s.fire in src/vs/base/common/event.ts:1191:9\nat j.filter in src/vs/platform/quickinput/browser/quickInputTree.ts:1522:41\nat r.Mb in src/vs/platform/quickinput/browser/quickInput.ts:562:36\nat d.value in src/vs/platform/quickinput/browser/quickInput.ts:828:11\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.fire in src/vs/base/common/event.ts:1187:9\nat f.Z in src/vs/base/browser/ui/inputbox/inputBox.ts:537:21\nat HTMLInputElement.<anonymous> in src/vs/base/browser/ui/inputbox/inputBox.ts:199:39\n```\n[Go to Errors Site](https://errors.code.visualstudio.com/card?ch=dc96b837cf6bb4af9cd736aa3af08cf8279f7685&bH=143e7881-6564-68d1-f5f9-6626b876f6ee)",
    "labels": [
      "bug",
      "error-telemetry",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-24T07:49:31",
    "first_answer_author": "TylerLeonhardt",
    "first_answer_body": "Looked through all references of `'command' in ...` this is the only one that is suspicious:\r\n\r\nhttps://github.com/microsoft/vscode/blob/dc96b837cf6bb4af9cd736aa3af08cf8279f7685/src/vs/workbench/contrib/terminal/browser/terminalRunRecentQuickPick.ts#L272\r\n\r\n* it's in a quick pick\r\n* it's not handling `undefined` if `activeItems` is empty (which is possible)\r\n\r\nEDIT: Easy repro steps:\r\n* Open `Run Recent Command`\r\n* `SHIFT+TAB` to have focus leave the list\r\n* Dev tools says the above error",
    "first_answer_creation_time": "2024-06-03T01:08:42",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Creating/Removing cells is broken",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/212600",
    "author_name": "ulugbekna",
    "question_body": "Cannot create new cells or remove them (I don't have repro steps; it usually stops working after first time creating a new cell)\n\n\n\nhttps://github.com/microsoft/vscode/assets/16353531/f9c08dd1-d64d-45f0-88c9-e6970b1bb604\n\n\n\nVersion: 1.90.0-insider\nCommit: 29aeab1cbb350107a7bd5962b5e7efe745e0a3ec\nDate: 2024-05-13T05:59:57.400Z\nElectron: 29.3.1\nElectronBuildId: 9464424\nChromium: 122.0.6261.156\nNode.js: 20.9.0\nV8: 12.2.281.27-electron.0\nOS: Darwin arm64 23.4.0\n",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "notebook-commands"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-13T12:16:41",
    "first_answer_author": "amunger",
    "first_answer_body": "repro:\r\n\r\n1. create an empty cell in a notebook and execute it\r\n2. create a new code cell, clicking `+ code` or using keybindings a/b\r\n:bug: no new cell is added, existing cell's editor is focused",
    "first_answer_creation_time": "2024-05-13T16:24:38",
    "was_closed_after_first_comment": true
  },
  {
    "title": "indicate number of replies before comment in accessible view",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210504",
    "author_name": "meganrogge",
    "question_body": "1. enable screen reader mode\r\n2. focus a GHPR comment which has a few replies\r\n3. So that screen reader users know what to expect, IE what is available to go to, we should indicate the number of replies before the comment, as it could be lengthy. In the below, the number of replies occurs after the comment. \ud83d\udc1b \r\n\r\n![Screenshot 2024-04-16 at 1 12 42\u202fPM](https://github.com/microsoft/vscode/assets/29464607/29bb1130-d989-45fd-9305-5c23b0af7528)\r\n\r\n",
    "labels": [
      "bug",
      "verified",
      "accessibility",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-04-16T20:13:47",
    "first_answer_author": "meganrogge",
    "first_answer_body": "@jooyoungseo, it would be awesome if you'd test the comments accessible view in today's or tomorrow's insider's and let us know if the order of anything should be changed.",
    "first_answer_creation_time": "2024-04-16T20:49:33",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Auto indent on paste is incorrect in strings",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209418",
    "author_name": "alexdima",
    "question_body": "* Use the following TS code:\r\n```ts\r\ntest('should run folder', async ({ runUITest }) => {\r\n  const { page } = await runUITest({\r\n    'a/folder-b/folder-c/inC.test.ts': `\r\n      import { test, expect } from '@playwright/test';\r\n      test('passes', () => {});\r\n    `,\r\n    'a/folder-b/in-b.test.ts': `\r\n      import { test, expect } from '@playwright/test';\r\n      test('passes', () => {});\r\n    `,\r\n    'a/in-a.test.ts': `\r\n      import { test, expect } from '@playwright/test';\r\n      test('passes', () => {});\r\n    `,\r\n  });\r\n\r\n  await page.getByText('folder-b').hover();\r\n  await page.getByRole('listitem').filter({ hasText: 'folder-b' }).getByTitle('Run').click();\r\n\r\n  await expect.poll(dumpTestTree(page)).toContain(`\r\n    \u25bc \u2705 folder-b <=\r\n      \u25ba \u2705 folder-c\r\n      \u25ba \u2705 in-b.test.ts\r\n    \u25bc \u25ef in-a.test.ts\r\n        \u25ef passes\r\n  `);\r\n});\r\n```\r\n* select `\u25bc`\r\n* copy it\r\n* paste on top of itself\r\n* observe that the line unindents\r\n* I suggest we try to skip auto-indenting inside multiline strings\r\n\r\nhttps://github.com/microsoft/vscode/assets/5047891/cde07310-7879-4f1a-9c76-1e65f917300e\r\n\r\n\r\n\r\n\r\n```\r\nVersion: 1.84.0 (Universal)\r\nCommit: d037ac076cee195194f93ce6fe2bdfe2969cc82d\r\nDate: 2023-11-01T11:30:19.406Z\r\nElectron: 25.9.2\r\nElectronBuildId: 24603566\r\nChromium: 114.0.5735.289\r\nNode.js: 18.15.0\r\nV8: 11.4.183.29-electron.0\r\nOS: Darwin arm64 23.4.0\r\n```",
    "labels": [
      "bug",
      "verified",
      "editor-autoindent",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-04-03T08:46:30",
    "first_answer_author": "aiday-mar",
    "first_answer_body": "I assume you mean we should skip indentation in multi line strings in all cases, not just on pasting. Meaning that on typing enter for example, we should ignore indentation of previous lines when inside of a multi line string?",
    "first_answer_creation_time": "2024-04-18T07:58:08",
    "was_closed_after_first_comment": true
  },
  {
    "title": "`ctrlCmd+up` in terminal chat input focuses chat response list",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208927",
    "author_name": "meganrogge",
    "question_body": "reported by @Tyriar \n\n1. open terminal chat, run something\n2. `ctrlCmd+up` in the input\n3. \ud83d\udc1b chat response list focused",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "terminal-chat"
    ],
    "comments": 1,
    "issue_creation_time": "2024-03-27T16:53:22",
    "first_answer_author": "meganrogge",
    "first_answer_body": "This is happening because in the chat widget, when focus is on the input, `ctrlCmd+up` focuses the chat list. \r\n\r\nhttps://github.com/microsoft/vscode/blob/d42fad27b278543b0ac92de06b217a67ede40dcc/src/vs/workbench/contrib/chat/browser/actions/chatActions.ts#L208-L231",
    "first_answer_creation_time": "2024-03-28T17:58:30",
    "was_closed_after_first_comment": true
  },
  {
    "title": "cmd+down quick tree shortcut doesn't always show the focused item",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208696",
    "author_name": "roblourens",
    "question_body": "Testing #208477\r\n\r\n<img width=\"963\" alt=\"image\" src=\"https://github.com/microsoft/vscode/assets/323878/4874fa31-ec8c-43c7-a2fb-ea8b2159362e\">\r\n\r\n\r\nHere, I pressed cmd+down and it selected the first item under `tsx.tx`, but only reveled the title element before it. I think it should also show the item that is selected, it helps me keep my place.",
    "labels": [
      "bug",
      "verified",
      "quick-pick",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-03-25T17:32:18",
    "first_answer_author": "TylerLeonhardt",
    "first_answer_body": "Verification:\r\n* Open Quick Search\r\n* type something like `hi`\r\n* scroll so that just the file name (separator) is the last visible item\r\n* hit cmd/alt+down until focus is given to the item right under that separator\r\n\r\nEnsure it is revealed to you.",
    "first_answer_creation_time": "2024-03-27T20:55:40",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Scroll lock does not indicate in floating windows",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/207817",
    "author_name": "bpasero",
    "question_body": "I think the indicator should show in all opened windows and for that you need to add it to all windows. I would monkey-see, monkey-do what we do for the accessibility status indicator:\r\n\r\nhttps://github.com/microsoft/vscode/blob/b22f435d4848fa8f5ef3f1c89cf56f68d7ce6049/src/vs/workbench/contrib/accessibility/browser/accessibilityStatus.ts#L45\r\n\r\nSpecifically:\r\n\r\nhttps://github.com/microsoft/vscode/blob/b22f435d4848fa8f5ef3f1c89cf56f68d7ce6049/src/vs/workbench/contrib/accessibility/browser/accessibilityStatus.ts#L94-L97",
    "labels": [
      "bug",
      "verified",
      "workbench-status",
      "insiders-released",
      "workbench-auxwindow"
    ],
    "comments": 1,
    "issue_creation_time": "2024-03-15T09:49:35",
    "first_answer_author": "benibenj",
    "first_answer_body": "I now show it on all windows. Used the same approach as `ScreenReaderModeStatusEntry`. However, it would be great to not have to do it this way. In principle the main Status Bar Service could provide an option to add an entry across all windows. I think this could be possible as the main service creates the aux ones and hence can track them...",
    "first_answer_creation_time": "2024-03-15T10:38:51",
    "was_closed_after_first_comment": true
  },
  {
    "title": "WARN [markdown-language-features]: Couldn't find message for key",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/207804",
    "author_name": "bpasero",
    "question_body": "In insiders:\r\n\r\n```\r\nWARN [markdown-language-features]: Couldn't find message for key configuration.markdown.editor.drop.enabled.always.\r\nlog.ts:429  WARN [markdown-language-features]: Couldn't find message for key configuration.markdown.editor.drop.enabled.smart.\r\nlog.ts:429  WARN [markdown-language-features]: Couldn't find message for key configuration.markdown.editor.drop.enabled.never.\r\nlog.ts:429  WARN [markdown-language-features]: Couldn't find message for key configuration.markdown.editor.filePaste.enabled.always.\r\nlog.ts:429  WARN [markdown-language-features]: Couldn't find message for key configuration.markdown.editor.filePaste.enabled.smart.\r\nlog.ts:429  WARN [markdown-language-features]: Couldn't find message for key configuration.markdown.editor.filePaste.enabled.never.\r\n```",
    "labels": [
      "bug",
      "verified",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-03-15T07:23:42",
    "first_answer_author": "731315163",
    "first_answer_body": "Yes, I also encountered this problem, and when I remotely connected to the server using Remote SSH, the Python plugin did not provide syntax suggestions.",
    "first_answer_creation_time": "2024-03-18T13:00:49",
    "was_closed_after_first_comment": true
  },
  {
    "title": "cannot access 'session' before initialization",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/207640",
    "author_name": "meganrogge",
    "question_body": "```\nvoiceChatActions.ts:468 Uncaught ReferenceError: Cannot access 'session' before initialization\n    at voiceChatActions.ts:468:3\n    at async.ts:527:3\n```\n\nI see this when starting the panel chat voice action in dev tools. \n\nAn easy way to know when this reproduces is to enable the `chatResponsePending` audio cue, which then plays forever. ",
    "labels": [
      "bug",
      "verified",
      "author-verification-requested",
      "insiders-released",
      "workbench-voice"
    ],
    "comments": 1,
    "issue_creation_time": "2024-03-13T21:21:01",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- AUTHOR_VERIFICATION_REQUEST -->\nThis bug has been fixed in the latest release of [VS Code Insiders](https://code.visualstudio.com/insiders/)!\n\n@meganrogge, you can help us out by commenting `/verified` if things are now working as expected.\n\nIf things still don't seem right, please ensure you're on version be210b3a60c7d60030c1d3d92da00d008edf6ab9 of Insiders (today's or later - you can use `Help: About` in the command palette to check), and leave a comment letting us know what isn't working as expected.\n\nHappy Coding!",
    "first_answer_creation_time": "2024-03-15T12:03:18",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Terminal chat: Consider polishing the presentation in the single code block case special/common case",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/207605",
    "author_name": "Tyriar",
    "question_body": "Feedback from @TylerLeonhardt: This looks weird how there's a border around the suggestion, should we polish this to remove padding and the border?\r\n\r\n![image](https://github.com/microsoft/vscode/assets/2193314/60998d5e-7ef5-404a-980f-7e452861189f)\r\n",
    "labels": [
      "bug",
      "*out-of-scope",
      "terminal-chat"
    ],
    "comments": 1,
    "issue_creation_time": "2024-03-13T16:34:32",
    "first_answer_author": "Tyriar",
    "first_answer_body": "I tried this where the line height of the editor was reduced and border changed to transparent:\r\n\r\n![image](https://github.com/microsoft/vscode/assets/2193314/bd06273a-b975-4237-8e93-8921e8af0876)\r\n\r\nI don't think the look is good enough to justify making it inconsistent all other code blocks.",
    "first_answer_creation_time": "2024-03-19T15:47:05",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Comments filter wording feedback",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/206756",
    "author_name": "bpasero",
    "question_body": "I find the comments filter dropdown unexpected. I would not expect labels to change:\r\n\r\n![image](https://github.com/microsoft/vscode/assets/900690/0a9c79d1-ac91-4287-9a77-2a7f1bf2275d)\r\n\r\n![image](https://github.com/microsoft/vscode/assets/900690/b88818da-e845-4cc3-90cc-f47cd88351f4)\r\n\r\n\r\n\r\nCompare with timeline filter:\r\n\r\n![image](https://github.com/microsoft/vscode/assets/900690/0981197e-c735-4778-bea8-9257af7fa410)\r\n",
    "labels": [
      "bug",
      "verified",
      "comments",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-03-04T05:15:18",
    "first_answer_author": "bpasero",
    "first_answer_body": "I am not sure about \"Show <xy>\". I would have expected \"[ ] Resolved Comments\" and \"[ ] Unresolved Comments\". The fact that they show or not is given by the checkmark.\r\n\r\n@hbons for UI",
    "first_answer_creation_time": "2024-03-04T11:34:01",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Default panel sizing is wrong",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/206296",
    "author_name": "samdenty",
    "question_body": "On this line https://github.com/microsoft/vscode/blob/57ea32b56fa30fe897d3e0f6fa0421117c221146/src/vs/workbench/browser/layout.ts#L2614\r\n\r\nit checks to `bottom` string, but because the value in the stateCache is unknown typescript doesn't consider it an error.\r\n\r\nThe actual type is a `Position` enum, which is a number so the check `=== 'bottom'` should be changed otherwise it's defaulting to the width sizing (when it should be height) which is wrong",
    "labels": [
      "bug",
      "verified",
      "layout",
      "author-verification-requested",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-26T21:29:02",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- AUTHOR_VERIFICATION_REQUEST -->\nThis bug has been fixed in the latest release of [VS Code Insiders](https://code.visualstudio.com/insiders/)!\n\n@samdenty, you can help us out by commenting `/verified` if things are now working as expected.\n\nIf things still don't seem right, please ensure you're on version cc1f5e3acfad98ed519befc1ebfd199777d135f4 of Insiders (today's or later - you can use `Help: About` in the command palette to check), and leave a comment letting us know what isn't working as expected.\n\nHappy Coding!",
    "first_answer_creation_time": "2024-03-07T10:26:30",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Aggressive caching with Open Current File as Release Notes",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/205675",
    "author_name": "deepak1556",
    "question_body": "Testing #205565\r\n\r\n* Add a codesetting block\r\n* Run \"Developer: Open Current File as Release Notes\"\r\n* Make changes to the codesetting block\r\n* Run \"Developer: Open Current File as Release Notes\" and old value still shows up\r\n\r\n\r\n*Workaround:* Switching profiles to force new user data.\r\n",
    "labels": [
      "bug",
      "verified",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-20T14:00:56",
    "first_answer_author": "justschen",
    "first_answer_body": "+1 on this\r\n\r\nAny change is not reflected when I hit `Open Current File as Relase Notes`. Reloading vs code also fixes. ",
    "first_answer_creation_time": "2024-02-20T23:23:06",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Hover interrupts when typing in explorer",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/205672",
    "author_name": "roblourens",
    "question_body": "- Right click a folder in the explorer, pick \"new file\"\n- Start typing the name of the new file\n- The hover widget appears on the folder, since my cursor was left on top of it, covering what I'm typing\n\nThis shouldn't appear when I am typing/interacting with some other part of the screen",
    "labels": [
      "bug",
      "verified",
      "workbench-hover",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-20T13:40:30",
    "first_answer_author": "bpasero",
    "first_answer_body": "Yeah I also noticed this when I had my mouse over the explorer but then opened quick open and started to type, the hover would appear over the explorer still after a while.",
    "first_answer_creation_time": "2024-02-22T06:21:34",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Often the hover shows up instantly, even with long delay",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/205658",
    "author_name": "bpasero",
    "question_body": "Configure `workbench.hover.delay` to a very large value so that you know the hover appears only after long delay. Hover across the workbench and notice how often the hover will appear almost instantly in some cases. I have not yet figured out the pattern.\r\n\r\nProof:\r\n\r\n![Recording 2024-02-20 at 12 19 00](https://github.com/microsoft/vscode/assets/900690/c9f3e4f7-ef5b-4994-b1c3-7be0d4b4d677)\r\n",
    "labels": [
      "bug",
      "verified",
      "workbench-hover",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-20T11:19:17",
    "first_answer_author": "benibenj",
    "first_answer_body": "It seems like `onDidHideHover` is being called even when the hover has never been shown due to it's high delay. This then resets the clock and causes the second element in the toolbar to immediately show when hovered over.",
    "first_answer_creation_time": "2024-02-20T12:32:42",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Git extension API for `commit` follows action button ",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/205358",
    "author_name": "alexr00",
    "question_body": "The git extension API for commit appears to be following what the action button does. Example:\r\n1. The last git SCM view thing I did was use the action button to Commit & Push\r\n2. Now an extension uses the git extension API to `commit`\r\n3. It tries to commit and push.",
    "labels": [
      "bug",
      "verified",
      "git",
      "author-verification-requested",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-16T11:30:19",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- AUTHOR_VERIFICATION_REQUEST -->\nThis bug has been fixed in the latest release of [VS Code Insiders](https://code.visualstudio.com/insiders/)!\n\n@alexr00, you can help us out by commenting `/verified` if things are now working as expected.\n\nIf things still don't seem right, please ensure you're on version 00124e9e5830e3efc897db71c781899f8a676295 of Insiders (today's or later - you can use `Help: About` in the command palette to check), and leave a comment letting us know what isn't working as expected.\n\nHappy Coding!",
    "first_answer_creation_time": "2024-02-16T18:57:18",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Deleting a notebook cell, clicking the bottom of the notebook and undo does not work",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/205028",
    "author_name": "Tyriar",
    "question_body": "Repro:\r\n\r\n1. Create 3 cells\r\n2. Delete the middle one\r\n3. Click the empty space at the bottom of the notebook\r\n4. Press undo \ud83d\udc1b it doesn't work, clicking in between cells does work though",
    "labels": [
      "bug",
      "verified",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-12T19:11:51",
    "first_answer_author": "Yoyokrazy",
    "first_answer_body": "Specifically, undo only works when focused on a cell container. Focus within a cell (code or markdown) editor and in the notebook editor both do not handle the undo.",
    "first_answer_creation_time": "2024-02-12T19:17:48",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Branch quick pick should list exact match first",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/204733",
    "author_name": "mjbvz",
    "question_body": "\nType: <b>Bug</b>\n\n1. In a repo with a branch: `abc/main` and `main`, where you have recently switched to `abc/main`\n2. Open the branch selector and type `main`\n\n**expected**\nThe exact branch name match is listed first\n\n**actual**\n![Image](https://github.com/microsoft/vscode/assets/12821956/c8394a17-36d6-462b-aca0-34f35de14482)\n\n\n\nVS Code version: Code - Insiders 1.87.0-insider (Universal) (9db1b0571e119289a2264971bdac75793965e063, 2024-02-07T05:48:09.043Z)\nOS version: Darwin arm64 23.3.0\nModes:\n\n<details>\n<summary>System Info</summary>\n\n|Item|Value|\n|---|---|\n|CPUs|Apple M2 Max (12 x 24)|\n|GPU Status|2d_canvas: unavailable_software<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: disabled_software<br>multiple_raster_threads: enabled_on<br>opengl: disabled_off<br>rasterization: disabled_software<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: disabled_software<br>video_encode: disabled_software<br>webgl: unavailable_software<br>webgl2: unavailable_software<br>webgpu: unavailable_software|\n|Load (avg)|4, 4, 4|\n|Memory (System)|64.00GB (1.01GB free)|\n|Process Argv|--crash-reporter-id 0fffb5da-9cd7-46fd-9e7f-a1564e8c5fda|\n|Screen Reader|no|\n|VM|0%|\n</details>\n<!-- generated by issue reporter -->",
    "labels": [
      "bug",
      "verified"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-08T15:45:56",
    "first_answer_author": "TylerLeonhardt",
    "first_answer_body": "This appears to be fixed:\n![Image](https://github.com/microsoft/vscode/assets/2644648/2962eda1-4f4e-4d00-b30a-f206b38d5014)\n\nI think this is from the branch picker using `sortByLabel: false`. Gonna assign to Lad since I didn't do anything here.",
    "first_answer_creation_time": "2024-02-16T21:05:55",
    "was_closed_after_first_comment": true
  },
  {
    "title": "\"Move to file\" looses focus",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/204606",
    "author_name": "jrieken",
    "question_body": "* have a typescript file\r\n* select some code\r\n* from the lightbulb select the \"Move to file\" refactoring\r\n* :bug: QP opens but editors stays in (or moves back to) the editor",
    "labels": [
      "bug",
      "verified"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-07T13:51:12",
    "first_answer_author": "TylerLeonhardt",
    "first_answer_body": "I `vscode-bisect` and then `git-bisect` down to:\nhttps://github.com/microsoft/vscode/commit/4e67ba102b8adf31171195d9810b7e18f8e0975d \n\n\nmaybe the lightbulb hide, puts focus back in the editor ... or something getting disposed does that.\nleaving assignment to @justschen ",
    "first_answer_creation_time": "2024-02-16T22:38:40",
    "was_closed_after_first_comment": true
  },
  {
    "title": "URL link detection can mess up when there is a unix-like path within the link's query parameters",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/204195",
    "author_name": "Tyriar",
    "question_body": "```sh\r\necho \"https://www.github.com/?abc=/foo/bar&another=1\"\r\n```\r\n\r\nWhen hovering the middle part:\r\n\r\n<img width=\"401\" alt=\"Screenshot 2024-02-02 at 13 07 58\" src=\"https://github.com/microsoft/vscode/assets/2193314/b597c6ec-2f03-4ba4-95ca-107e4f0c15b9\">\r\n\r\nWhen hovering the start or end:\r\n\r\n<img width=\"399\" alt=\"Screenshot 2024-02-02 at 13 08 09\" src=\"https://github.com/microsoft/vscode/assets/2193314/72bc72e0-9d39-45cc-82d3-9d750f85cf5c\">\r\n",
    "labels": [
      "bug",
      "verified",
      "terminal-links",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-02T21:08:40",
    "first_answer_author": "Tyriar",
    "first_answer_body": "Relevant logs:\r\n\r\n```\r\n2024-02-02 13:15:29.998 [trace] [8a731b7] terminalMultiLineLinkDetector#detect text [\"\u276f echo \\\"https://www.github.com/?abc=/foo/bar&another=1\\\"\"]\r\n2024-02-02 13:15:29.998 [trace] [8a731b7] terminalLocalLinkDetector#detect text [\"\u276f echo \\\"https://www.github.com/?abc=/foo/bar&another=1\\\"\"]\r\n2024-02-02 13:15:29.998 [trace] [8a731b7] terminalLocalLinkDetector#detect parsedLinks [[{\"path\":{\"index\":14,\"text\":\"//www.github.com/\"}},{\"path\":{\"index\":31,\"text\":\"?abc=/foo/bar\"}}]]\r\n2024-02-02 13:15:29.999 [trace] [8a731b7] terminalLocalLinkDetector#detect linkCandidates [[\"//www.github.com/\"]]\r\n2024-02-02 13:15:29.999 [trace] [8a731b7] terminalUriLinkDetector#detect computedLinks [[{\"range\":{\"startLineNumber\":1,\"startColumn\":9,\"endLineNumber\":1,\"endColumn\":55},\"url\":\"https://www.github.com/?abc=/foo/bar&another=1\"}]]\r\n```",
    "first_answer_creation_time": "2024-02-02T21:16:55",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Markdown preview not rendering in notebooks",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/204020",
    "author_name": "amunger",
    "question_body": "Steps to Reproduce:\r\n\r\n1. Create an interactive window\r\n2. Run a markdown cell\r\n\r\n```\r\n# %% [markdown]\r\n# # Markdown\r\n```\r\n\r\n:bug: invisible cell is added",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "notebook-markdown"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-01T19:41:39",
    "first_answer_author": "mjbvz",
    "first_answer_body": "I see the following error in the logs:\n\n```\nnotebookWebviewPreloads.js:3 Uncaught (in promise) ReferenceError: t is not defined\n    at new he (notebookWebviewPreloads.js:3:29317)\n    at Object.g (notebookWebviewPreloads.js:3:26761)\n    at Object.ensureMarkupCell (notebookWebviewPreloads.js:3:27088)\n    at notebookWebviewPreloads.js:3:17672\n```",
    "first_answer_creation_time": "2024-02-01T19:46:23",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Build: CLI jobs can't be retried sometimes",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/203871",
    "author_name": "joaomoreno",
    "question_body": "There are cases in which CLI jobs will fail after having published certain artifacts, for misc reasons. In this specific case, the entire pipeline was cancelled after the `CLILinuxGnuARM` job [had published](https://dev.azure.com/monacotools/Monaco/_build/results?buildId=254400&view=logs&j=c73ef358-0dd7-5529-c2fa-4ddc54fac97c&t=4c9ebf24-921a-5eca-132c-363c39f2fc11&s=a2720dec-461a-5b3d-f007-6e0de7b924c4) the `vscode_cli_linux_arm64_cli` artifact. Upon re-running failing jobs, the same job started to [fail on that publish step](https://dev.azure.com/monacotools/Monaco/_build/results?buildId=254400&view=logs&j=d50e285b-caa7-5e64-8bdc-6b751441dcc1&t=20c86de6-3178-57d0-3ea1-7f7d4d418623) since it can't republish the same artifact.\r\n\r\nI recognize the issue since we hit the same before in all other jobs, where we made the decision to keep all _statically named_ artifact publishing [close together](https://dev.azure.com/monacotools/Monaco/_build/results?buildId=254386&view=logs&j=963754b8-394e-5caf-de5d-2790b068caec&t=81c4857c-1565-5f10-675a-78a0149bee49) towards the end of each job. I propose we do the same for the CLI jobs. It doesn't entirely solve the problem, but certainly mitigates it to the point of irrelevancy.",
    "labels": [
      "bug",
      "verified",
      "vscode-build",
      "engineering",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-01-31T10:00:12",
    "first_answer_author": "alexr00",
    "first_answer_body": "Verified by looking through our builds and determining that none of them failed for this reason since this fix went in.",
    "first_answer_creation_time": "2024-02-22T14:38:21",
    "was_closed_after_first_comment": true
  },
  {
    "title": "ChatAgentContentReference needs to support https URIs",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/203822",
    "author_name": "roblourens",
    "question_body": "Places in the Chat Agent API that support URI references really only work with file URIs currently. https URIs should also get rendered and linked nicely.",
    "labels": [
      "bug",
      "api",
      "verified",
      "insiders-released",
      "panel-chat"
    ],
    "comments": 1,
    "issue_creation_time": "2024-01-30T17:47:25",
    "first_answer_author": "eleanorjboyd",
    "first_answer_body": "<img width=\"520\" alt=\"image\" src=\"https://github.com/microsoft/vscode/assets/26030610/d186c704-185c-4e7b-aa9a-ef0ed823234c\">\r\n\r\nIs entering a link in chat and having it become clickable the desired outcome? Want to confirm this is the right spot to test external URLs",
    "first_answer_creation_time": "2024-02-21T17:17:38",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Propagate watch state changes when default profiles change",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/203497",
    "author_name": "connor4312",
    "question_body": "If default profiles are added/removed, we should cancel or create watch requests as necessary. This probably doesn't happen today (validation necessary)",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "testing"
    ],
    "comments": 1,
    "issue_creation_time": "2024-01-25T23:06:00",
    "first_answer_author": "connor4312",
    "first_answer_body": "- Start with the selfhost test provider https://github.com/microsoft/vscode-selfhost-test-provider\r\n- Add a command (or just a timeout) that adds a second \"run\" profile later https://github.com/microsoft/vscode-selfhost-test-provider/blob/c318bd91f3644f8a23053c5f9105a8c6c4a1e35e/src/extension.ts#L146-L153. Make sure the `isDefault` parameter is true.\r\n- Start watching tests by clicking the \ud83d\udc41\ufe0f icon, then add your second profile.\r\n- Verify the runHandler gets called for the second profile as it's added https://github.com/microsoft/vscode-selfhost-test-provider/blob/c318bd91f3644f8a23053c5f9105a8c6c4a1e35e/src/extension.ts#L104",
    "first_answer_creation_time": "2024-02-23T20:52:17",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Debug session doesn't stop when I reload the Extension Development window",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/203472",
    "author_name": "roblourens",
    "question_body": "- Start debugging extension\r\n- Reload the Extension Development Host window\r\n- Close the window\r\n- The original vscode window stays in debug mode, and clicking stop doesn't do anything, until I reload it\r\n\r\n[vscode-debugadapter-63b8e595.json.gz](https://github.com/microsoft/vscode/files/14056208/vscode-debugadapter-63b8e595.json.gz)\r\n",
    "labels": [
      "bug",
      "debug",
      "verified",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-01-25T17:56:51",
    "first_answer_author": "connor4312",
    "first_answer_body": "I don't hit this very consistently even with the instructions. However, each time I close the window I see the \"Invalid debug adapter\" error pop up. Wonder if that's related...",
    "first_answer_creation_time": "2024-01-30T23:58:57",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Quick chat - icon positioning",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/203299",
    "author_name": "lszomoru",
    "question_body": "Testing #203012\r\n\r\nI really like this new mode. One thing that I noticed at least while I was testing was that the \"listening indicator\" appeared below the code selection, but when the recording completed, inline chat appeared above the code selection. I think that it would be nice if both UI elements would use the same anchor location. ",
    "labels": [
      "bug",
      "verified",
      "polish",
      "insiders-released",
      "inline-chat"
    ],
    "comments": 1,
    "issue_creation_time": "2024-01-24T09:45:45",
    "first_answer_author": "jrieken",
    "first_answer_body": "> One thing that I noticed at least while I was testing was that the \"listening indicator\" appeared below the code selection\r\n\r\nToday the indicator appears at the active end of the selection (where the cursor is) and it positions itself so that it doesn't cover the selection. This might be too much and we can simply use the selection start and always show above that.",
    "first_answer_creation_time": "2024-01-24T10:27:50",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Terminal speech: mic icon does not appear when no line above prompt",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/202707",
    "author_name": "bpasero",
    "question_body": "It seems that the mic icon requires at least one line above the prompt to show:\r\n\r\n![image](https://github.com/microsoft/vscode/assets/900690/6d52eaff-aa47-4eff-997e-b5c47838e3be)\r\n\r\nIt does not appear for me in the above case.",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "workbench-voice"
    ],
    "comments": 1,
    "issue_creation_time": "2024-01-18T08:23:13",
    "first_answer_author": "meganrogge",
    "first_answer_body": "Thanks for the issue. Should be an easy fix and in this case the mic will have to go on the cursor line ",
    "first_answer_creation_time": "2024-01-18T15:15:45",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Paused inline chat resumes with wrong \"diff\"",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/202164",
    "author_name": "jrieken",
    "question_body": "* open the same file in two editor columns\r\n* start inline chat\r\n* get AI changes\r\n* in column A switch to another file\r\n* in column B makes changes to the original file (w/o overlap of the AI chnages)\r\n* in column A switch back\r\n* the UI suggests that all edits (yours and AIs) are AI edits",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "inline-chat"
    ],
    "comments": 1,
    "issue_creation_time": "2024-01-10T14:59:04",
    "first_answer_author": "eleanorjboyd",
    "first_answer_body": "really appreciate that after this step \"in column B makes changes to the original file (w/o overlap of the AI chnages)\" I accidentally saved the file and it jumped me to the other editor with the AI suggestion and required them to be resolved before I could finish saving. Great flow for that complicated edge case!!",
    "first_answer_creation_time": "2024-01-25T18:10:44",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Terminal toolbar disappears when terminal in panel is focused and terminal editor is open",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/200897",
    "author_name": "joyceerhl",
    "question_body": "1. Open terminal panel\r\n2. Open a second terminal in the panel\r\n3. Move the second terminal to the editor area\r\n4. Focus the terminal in the panel area \r\n5. Click the + to create another terminal in the panel area\r\n6. Click the trash icon to kill that terminal \r\n7. :bug: the terminal tab area remains momentarily open and then disappears; the icons to e.g. kill terminal for the remaining terminal in the panel area do not come back until you switch to and from a different view in the panel or resize the window\r\n\r\nExpected icons:\r\n<img width=\"164\" alt=\"image\" src=\"https://github.com/microsoft/vscode/assets/30305945/3cb5953c-f5e7-4862-8030-f8aa715f31a1\">\r\n\r\nActual icons: \r\n<img width=\"770\" alt=\"image\" src=\"https://github.com/microsoft/vscode/assets/30305945/b29f21e9-2bd7-421b-95fc-db5b0ed8803a\">\r\n",
    "labels": [
      "bug",
      "verified",
      "terminal",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2023-12-14T22:09:35",
    "first_answer_author": "Tyriar",
    "first_answer_body": "Dragging a 2nd terminal out of the panel isn't hiding tabs properly. This should only happen if the cursor is over the tabs:\r\n\r\n![image](https://github.com/microsoft/vscode/assets/2193314/6960231a-acef-4841-be28-b0ade064cf4f)\r\n\r\nI think it's because the mouse leave event never ends up being handled because the drag is",
    "first_answer_creation_time": "2023-12-15T14:57:21",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Unable to save performance profile from devtools",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/200668",
    "author_name": "deepak1556",
    "question_body": "What we know so far:\r\n\r\n- Devtools uses filesystem api to save traces via `window.showSaveFilePicker` since 114 https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/4381791\r\n- Issue does not repro with Electron fiddle when page being traced is `file:` scheme, repros for all other privileged schemes `https:`, custom standard protocol",
    "labels": [
      "bug",
      "verified",
      "regression",
      "insiders-released",
      "chrome-devtools",
      "electron-27-update"
    ],
    "comments": 1,
    "issue_creation_time": "2023-12-12T17:24:26",
    "first_answer_author": "deepak1556",
    "first_answer_body": "> Issue does not repro with Electron fiddle when page being traced is file: scheme, repros for all other privileged schemes https:, custom standard protocol\r\n\r\nNot specifically to do with privileged schemes, issue happens when trace symbol names are resolved which happens for non file schemes. More context in upstream PR.",
    "first_answer_creation_time": "2023-12-13T10:29:31",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Cannot copy/paste files anymore between folders",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/200581",
    "author_name": "bpasero",
    "question_body": "I am trying to `Cmd+C` a file in the one root folder and `Cmd+V` into another root folder and nothing happens anymore. Is this known?\r\n\r\nI am using multi-root folder setup.\r\n\r\n![Recording 2023-12-11 at 20 04 26](https://github.com/microsoft/vscode/assets/900690/fa0de413-715c-4f88-ae15-a1feb7872ff8)\r\n",
    "labels": [
      "bug",
      "verified",
      "file-explorer",
      "candidate",
      "workbench-dnd",
      "regression",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2023-12-11T19:03:19",
    "first_answer_author": "aliphys",
    "first_answer_body": "I can replicate this issue in VS Code 1.85.1.\r\n\r\nCannot copy-paste with both remote folders over SSH as well as local folders. Tried both drag-drop as well as `Ctrl+c` and `Ctrl+v`.\r\n\r\n```\r\nVersion: 1.85.1 (system setup)\r\nCommit: 0ee08df0cf4527e40edc9aa28f4b5bd38bbff2b2\r\nDate: 2023-12-13T09:49:37.021Z\r\nElectron: 25.9.7\r\nElectronBuildId: 25551756\r\nChromium: 114.0.5735.289\r\nNode.js: 18.15.0\r\nV8: 11.4.183.29-electron.0\r\nOS: Windows_NT x64 10.0.22631\r\n```",
    "first_answer_creation_time": "2023-12-14T14:39:12",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Add a separate button for clean Terminal",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/200510",
    "author_name": "yisibl",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nVS Code has always been able to clear Terminal only by binding shortcuts or shortcut menus. When debugging server logs, we will often need to clear the logs, and Chrome DevTools provides a separate button for that as well.\r\n\r\nI can submit a PR for this.\r\n\r\n![image](https://github.com/microsoft/vscode/assets/2784308/f86caf3d-40db-4ca2-a084-b05ddd24910e)\r\n\r\n![image](https://github.com/microsoft/vscode/assets/2784308/3b061f15-6efa-44dc-95ad-b0436880b6ab)\r\n\r\n",
    "labels": [
      "bug",
      "verified",
      "terminal",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2023-12-11T03:20:35",
    "first_answer_author": "Tyriar",
    "first_answer_body": "This is actually already a feature but recently regressed. Clear Terminal is in the overflow `...` menu, and in the next release you'll be able to right click to show it in the panel again:\r\n\r\n![image](https://github.com/microsoft/vscode/assets/2193314/115a76e8-1319-4a83-be40-211dc3ff29ae)\r\n",
    "first_answer_creation_time": "2023-12-12T12:15:28",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Cannot read properties of undefined (reading 'querySelector')",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/200409",
    "author_name": "joyceerhl",
    "question_body": "```\r\n2023-12-08 12:41:58.988 [error] Cannot read properties of undefined (reading 'querySelector'): TypeError: Cannot read properties of undefined (reading 'querySelector')\r\n    at b.n (vscode-file://vscode-app/c:/Users/huer/AppData/Local/Programs/Microsoft%20VS%20Code%20Insiders/resources/app/out/vs/workbench/workbench.desktop.main.js:2633:11438)\r\n    at b.xtermReady (vscode-file://vscode-app/c:/Users/huer/AppData/Local/Programs/Microsoft%20VS%20Code%20Insiders/resources/app/out/vs/workbench/workbench.desktop.main.js:2633:11201)\r\n    at vscode-file://vscode-app/c:/Users/huer/AppData/Local/Programs/Microsoft%20VS%20Code%20Insiders/resources/app/out/vs/workbench/workbench.desktop.main.js:2622:56902\r\n```",
    "labels": [
      "bug",
      "verified",
      "terminal",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2023-12-08T21:42:53",
    "first_answer_author": "bpasero",
    "first_answer_body": "I am still seeing this in my insiders:\r\n\r\n```\r\nERR Cannot read properties of undefined (reading 'querySelector'): TypeError: Cannot read properties of undefined (reading 'querySelector')\r\n    at b.n (vscode-file://vscode-app/Applications/Visual%20Studio%20Code%20-%20Insiders.app/Contents/Resources/app/out/vs/workbench/workbench.desktop.main.js:2633:11406)\r\n    at b.xtermReady (vscode-file://vscode-app/Applications/Visual%20Studio%20Code%20-%20Insiders.app/Contents/Resources/app/out/vs/workbench/workbench.desktop.main.js:2633:11169)\r\n    at vscode-file://vscode-app/Applications/Visual%20Studio%20Code%20-%20Insiders.app/Contents/Resources/app/out/vs/workbench/workbench.desktop.main.js:2622:52706\r\n```\r\n\r\nVersion: \r\n\r\n```\r\nVersion: 1.86.0-insider\r\nCommit: 9621add46007f7a1ab37d1fce9bcdcecca62aeb0\r\nDate: 2023-12-20T05:47:39.317Z\r\nElectron: 27.1.3\r\nElectronBuildId: 25612240\r\nChromium: 118.0.5993.159\r\nNode.js: 18.17.1\r\nV8: 11.8.172.18-electron.0\r\nOS: Darwin arm64 23.1.0\r\n```",
    "first_answer_creation_time": "2023-12-20T07:19:58",
    "was_closed_after_first_comment": true
  },
  {
    "title": "TerminalInstance memory leak",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/200400",
    "author_name": "Tyriar",
    "question_body": "Repro:\r\n\r\n1. Open Code - OSS\r\n2. Close all terminals\r\n3. Reload\r\n4. Open devtools\r\n5. Go to memory and take a heap snapshot\r\n6. Open a terminal\r\n7. Close the terminal\r\n8. Go to memory and take a heap snapshot\r\n9. Compare the two heap snapshots, you should not see `TerminalInstance`",
    "labels": [
      "bug",
      "verified",
      "verification-found",
      "perf"
    ],
    "comments": 1,
    "issue_creation_time": "2023-12-08T19:52:45",
    "first_answer_author": "mjbvz",
    "first_answer_body": "On Mac, I'm still seeing a terminal instances after running `kill all terminals`\n\n![Image](https://github.com/microsoft/vscode/assets/12821956/a69e4e87-0879-4db7-bd54-729700ba4a26)\n\n\nRepeating the process I then see two `TerminalInstance` \n\n\n----\n\nPossibly needs a missing register here:\n\nhttps://github.com/microsoft/vscode/blob/2b07f0f22a83c62c243bfd85b8e70d46c3d99676/src/vs/workbench/api/browser/mainThreadTerminalService.ts#L239",
    "first_answer_creation_time": "2024-01-24T21:50:29",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Unlucky default color for sparkle lightbulb",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/199748",
    "author_name": "jrieken",
    "question_body": "* Use \"Github Light Theme\" from `GitHub.github-vscode-theme`\r\n* the sparkle lightbulb seems to be the same color as the editor background\r\n\r\n<img width=\"212\" alt=\"Screenshot 2023-12-01 at 10 42 28\" src=\"https://github.com/microsoft/vscode/assets/1794099/81322602-dc00-44e8-a32c-628c8945cf18\">\r\n",
    "labels": [
      "bug",
      "verified",
      "editor-code-actions",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2023-12-01T10:19:20",
    "first_answer_author": "aiday-mar",
    "first_answer_body": "I can decrease the value of the lightening factor. This will however mean that the sparkles will be darker on other light themes.",
    "first_answer_creation_time": "2023-12-01T11:49:48",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Chat code vulnerability annotations briefly show while codeblock is being rendered",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/199718",
    "author_name": "roblourens",
    "question_body": "- In chat, make a request that returns an annotated codeblock\r\n- While the response is doing progressive rendering, see that it briefly shows the markup we add for annotations: `<vscode_annotation ...`\r\n\r\nThis is a little annoying, but it generally goes by very quickly so I will fix it later",
    "labels": [
      "bug",
      "*out-of-scope",
      "panel-chat"
    ],
    "comments": 1,
    "issue_creation_time": "2023-12-01T00:24:08",
    "first_answer_author": "vs-code-engineering[bot]",
    "first_answer_body": "We closed this issue because we [don't plan to address it](https://aka.ms/vscode-out-of-scope) in the foreseeable future. If you disagree and feel that this issue is crucial: we are happy to listen and to reconsider.\n\nIf you wonder what we are up to, please see our [roadmap](https://aka.ms/vscoderoadmap) and [issue reporting guidelines](https://aka.ms/vscodeissuereporting).\n\nThanks for your understanding, and happy coding!",
    "first_answer_creation_time": "2024-08-01T21:18:44",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Ctrl+enter doesn't work when a codeblock is visible in chat",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/199692",
    "author_name": "joyceerhl",
    "question_body": "1. Have a response in panel chat that contains a codeblock\r\n2. Try to submit a new query to `@workspace` using Ctrl+enter\r\n3. :bug: nothing happens\r\n\r\n```\r\n2023-11-30 09:40:34.954 [info] [KeybindingService]: | Resolving ctrl+Enter\r\n2023-11-30 09:40:34.954 [info] [KeybindingService]: \\ From 24 keybinding entries, matched workbench.action.chat.insertCodeBlock, when: hasChatProvider && inChat, source: built-in.\r\n2023-11-30 09:40:34.954 [info] [KeybindingService]: + Invoking command workbench.action.chat.insertCodeBlock.\r\n2023-11-30 09:40:35.141 [info] [KeybindingService]: + Ignoring single modifier ctrl due to it being pressed together with other keys.\r\n\r\n```",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "panel-chat"
    ],
    "comments": 1,
    "issue_creation_time": "2023-11-30T17:42:47",
    "first_answer_author": "roblourens",
    "first_answer_body": "Seems like the context key is not specific enough, leads to a collision just on windows cc @meganrogge \r\n\r\nI probably need a new InChatCodeBlock context key",
    "first_answer_creation_time": "2023-11-30T19:19:30",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Inline chat opens in output view",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/199662",
    "author_name": "aeschli",
    "question_body": "- open the `Extension Host` log in the output view\r\n- press Ctrl + I. :bug: Inline chat opens in the output view. It's not possible to enter a question.\r\n\r\nShould not open in the output view.",
    "labels": [
      "bug",
      "verified",
      "verification-steps-needed",
      "insiders-released",
      "inline-chat"
    ],
    "comments": 1,
    "issue_creation_time": "2023-11-30T13:35:41",
    "first_answer_author": "eleanorjboyd",
    "first_answer_body": "Tried this and it now does nothing when I press ctrl + I. This is the expected behavior now right?",
    "first_answer_creation_time": "2023-11-30T21:54:14",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Terminal showCommandGuide is quite slow for really large outputs",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/199593",
    "author_name": "Tyriar",
    "question_body": "Repro:\r\n\r\nRun `ls -Recurse` in a large repo with a high `terminal.integrated.scrollback` set, hover and leave the terminal. This example was with ~38k lines of output:\r\n\r\n![image](https://github.com/microsoft/vscode/assets/2193314/64628e2c-d18c-45cb-b577-9b864c4f1a83)\r\n",
    "labels": [
      "bug",
      "verified",
      "perf",
      "insiders-released",
      "terminal-shell-integration"
    ],
    "comments": 1,
    "issue_creation_time": "2023-11-29T19:46:13",
    "first_answer_author": "FlightControl-User",
    "first_answer_body": "I have the same issue, it is slowing down the compilation heavily and it sticks. I mean, a large scrollback buffer really slows down the whole system and the vscode editor itself.",
    "first_answer_creation_time": "2023-12-18T07:16:56",
    "was_closed_after_first_comment": true
  },
  {
    "title": "don't close task terminal if terminal process fails",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/224418",
    "author_name": "meganrogge",
    "question_body": "request from @connor4312 \"A user would probably want to see what error happened, but normally still follow the close behavior to avoid having it around when the task succeeds.\"",
    "labels": [
      "feature-request",
      "tasks",
      "insiders-released"
    ],
    "comments": 4,
    "issue_creation_time": "2024-07-31T17:55:43",
    "first_answer_author": "vs-code-engineering[bot]",
    "first_answer_body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE -->\n\t\t\tIssue marked as unreleased but unable to locate closing commit in issue timeline. You can manually reference a commit by commenting `\\closedWith someCommitSha`, or directly add the `insiders-released` label if you know this has already been releaased",
    "first_answer_creation_time": "2024-08-02T06:56:55",
    "was_closed_after_first_comment": false
  },
  {
    "title": "indicate that a variable was added to watch and its value",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/223960",
    "author_name": "meganrogge",
    "question_body": "cc @jooyoungseo\n\nWhen a user invokes the command `Add Variable to Watch`, there's no indication that it has succeeded. We should also indicate its value. ",
    "labels": [
      "feature-request",
      "debug",
      "accessibility",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-26T19:25:30",
    "first_answer_author": "vs-code-engineering[bot]",
    "first_answer_body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE -->\n\t\t\tIssue marked as unreleased but unable to locate closing commit in issue timeline. You can manually reference a commit by commenting `\\closedWith someCommitSha`, or directly add the `insiders-released` label if you know this has already been releaased",
    "first_answer_creation_time": "2024-08-02T06:57:16",
    "was_closed_after_first_comment": true
  },
  {
    "title": "debugging help dialog is missing some info",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/223959",
    "author_name": "meganrogge",
    "question_body": "In the run and debug dialog, we should include:\n\n- stop debugging\n- restart debugging\n- add variable to watch\n\nIn the debug console dialog, we should include:\n\n- clear console (and a keybinding for this, as tab navigation is tedious)\n\nIn the debug console dialog, we should remove:\n- the debugging specific commands, directing people to the run and debug view's help dialog for more info\n\nIn the editor dialog, we should add:\n- add variable to watch",
    "labels": [
      "feature-request",
      "accessibility"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-26T19:23:52",
    "first_answer_author": "vs-code-engineering[bot]",
    "first_answer_body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE -->\n\t\t\tIssue marked as unreleased but unable to locate closing commit in issue timeline. You can manually reference a commit by commenting `\\closedWith someCommitSha`, or directly add the `insiders-released` label if you know this has already been releaased",
    "first_answer_creation_time": "2024-07-31T23:27:52",
    "was_closed_after_first_comment": true
  },
  {
    "title": "inconsistent suggestions",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/223414",
    "author_name": "andreamah",
    "question_body": "Testing #223130\n\n1. in a folder that has ./.vscode, type `cd ./c` in the terminal\n2. it fuzzy matches `.vscode`\n3. add a slash, then remove it\n4. there is no longer any suggestion for `.vscode`\n\nhttps://github.com/user-attachments/assets/c37962e7-24ab-48ad-a914-4132949de0dc\n\n",
    "labels": [
      "feature-request",
      "unreleased",
      "terminal-suggest"
    ],
    "comments": 2,
    "issue_creation_time": "2024-07-23T22:37:21",
    "first_answer_author": "Tyriar",
    "first_answer_body": "This happens because ctrl+space will request _tab completions_ at the position, vscode then fuzzy filters them. Tab completions at `./c` will only show files starting with `c`.\r\n\r\nOne possible way around this is to complete from the first character of the argument, but I suspect some complications around finding the right position based on context. Like when navigating directories we want completions from the latest `/` or `\\`",
    "first_answer_creation_time": "2024-07-24T13:33:17",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Navigating to directories requires extra keypresses",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/223406",
    "author_name": "sbatten",
    "question_body": "Testing #223130\r\n\r\nI'm not sure if I want this to be the behavior, but the description of `Suggest: Run on Enter` leads me to expect that if I type `cd test` where `test` is a subdirectory and press `Enter`, it will automatically `cd` into `test`. But since the entry always has the extra stuff around it(`.\\test\\`), it requires an extra `Enter`",
    "labels": [
      "feature-request",
      "*out-of-scope",
      "terminal-suggest"
    ],
    "comments": 2,
    "issue_creation_time": "2024-07-23T21:48:06",
    "first_answer_author": "Tyriar",
    "first_answer_body": "Directories are handled specially to support quickly navigating between directories, run on enter doesn't play nice with this as it's not possible to complete the exact match since completions are requested when you type the last `\\`. Maybe there should be another setting that drives the special directory behavior only after you add a `\\` \ud83e\udd14 ",
    "first_answer_creation_time": "2024-07-24T13:36:42",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Test Issue",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/222245",
    "author_name": "bhavyaus",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\n<!-- Please search existing issues to avoid creating duplicates. -->\n\n<!-- Describe the feature you'd like. -->\n",
    "labels": [
      "feature-request"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-19T22:06:23",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-07-19T22:08:39",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Disallow contributing configuration defaults for launch",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/219977",
    "author_name": "sandy081",
    "question_body": "We should disallow contributing configuration defaults for launch\n\nAt present, extensions can contribute default value for `launch` using `configurationDefaults` contribution point. Even though user can customise it in user settings, this is not real Setting. This is just a user launch configuration. If multiple extensions contribute default values of `launch` then this can lead to unexpected behaviour. There is also a performance impact that this is pulling the complete launch schema when opening package.json.\n\nCC @connor4312 @aeschli \n",
    "labels": [
      "feature-request",
      "config",
      "on-testplan",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-04T15:04:04",
    "first_answer_author": "sandy081",
    "first_answer_body": "Provided a metadata property for configuration to define if the setting should allow contributing configuration defaults or not\n\n```\n\t/**\n\t * Disallow extensions to contribute configuration default value for this setting.\n\t */\n\tdisallowConfigurationDefault?: boolean;\n``` \n\nAnd adopted `launch` to use this.",
    "first_answer_creation_time": "2024-07-04T15:06:15",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Profiles Editor: align with form layout/settings UI",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/218162",
    "author_name": "daviddossett",
    "question_body": "Testing #217139\r\n\r\nRelated to other feedback I've given, here's a quick sketch of what I think gets us more aligned with things like the settings UI. Ideally we could even reuse the basic settings UI under the hood, but I don't know how portable it is off the top of my head. This isn't totally thought through but hopefully conveys the general idea I had in mind.\r\n\r\nMain talking points:\r\n- Name and icon inputs are clearly labeled and have their own rows\r\n- Descriptions are added where needed\r\n- Actions are consolidated on the list item for each profile\r\n- Form actions are moved to the bottom\r\n- Table gets a name/description\r\n\r\n![CleanShot 2024-06-25 at 11 06 49@2x](https://github.com/microsoft/vscode/assets/25163139/17cdc67d-e323-4f66-936a-cd4dac45d7bb)\r\n",
    "labels": [
      "feature-request",
      "ux",
      "on-testplan",
      "user-profiles"
    ],
    "comments": 2,
    "issue_creation_time": "2024-06-25T18:08:06",
    "first_answer_author": "sandy081",
    "first_answer_body": "Thanks for the feedback. I like it is aligned with Settings UI and will incorporate these changes in the next milestone.",
    "first_answer_creation_time": "2024-06-27T07:50:38",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Add a quick way to toggle configured read-only files to be writeable",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/216491",
    "author_name": "alexr00",
    "question_body": "The current read-only message has a link that will take you to settings, but all I ever want to do is immediately toggle the file.",
    "labels": [
      "feature-request",
      "verified",
      "verification-needed",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-18T14:01:55",
    "first_answer_author": "alexr00",
    "first_answer_body": "To verify: \r\n- Open your clone of the this repo\r\n- Open a file from the `node_modules` folder\r\n- Try to edit the file\r\n- Verify that the read-only message offers a one-click way to make the file writeable. ",
    "first_answer_creation_time": "2024-06-18T14:02:47",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Make editor hover accessible to screen reader users",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/215445",
    "author_name": "aiday-mar",
    "question_body": "This issue is about making the hover accessible to screen reader users. Work has already been done in the following issue (https://github.com/microsoft/vscode/issues/207592) to add the accessible view/help for the hover. Currently only markdown content is displayed within the hover when the focus is on a markdown hover sub-part. The accessible view/help should show the content of any hover sub-part (for example it should show the diagnostics too). \r\n\r\nThere are some ongoing discussions about whether it is possible to make the hover accessible without the use of a hover accessible view/help, with simple aria-labels and roles.",
    "labels": [
      "feature-request",
      "accessibility",
      "editor-hover"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-13T14:23:29",
    "first_answer_author": "aiday-mar",
    "first_answer_body": "A pr was recently merged in order to polish the accessible view/help, to present editor hover information in an accessible way.",
    "first_answer_creation_time": "2024-06-27T12:06:04",
    "was_closed_after_first_comment": true
  },
  {
    "title": "make search behavior of `@builtin XYZ` the same as `XYZ @builtin` in extensions view",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/214821",
    "author_name": "yg-i",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nCurrently, if I search `@builtin markdown` I find the real builtin markdown extensions. But if I search `markdown @builtin` I see many non-built-in, not even installed extensions. Not sure if this is intended, but I think the alternative behavior I'm proposing in the title of this issue better conforms to user expectations\r\n\r\n![image](https://github.com/microsoft/vscode/assets/148152939/d0cc32db-7e86-4870-bfe9-5f9a5d7337e3)\r\n\r\n![image](https://github.com/microsoft/vscode/assets/148152939/4d6bd75b-b27b-47ac-9f0d-3a29b44c67b8)\r\n",
    "labels": [
      "feature-request",
      "extensions"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-10T22:17:52",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-07-09T10:30:04",
    "was_closed_after_first_comment": true
  },
  {
    "title": "include terminal chat in panel chat intro",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213965",
    "author_name": "meganrogge",
    "question_body": "The editor's inline chat is referenced for discoverability in the panel chat's intro. We should do something similar for terminal chat.\r\n\r\n![Screenshot 2024-05-30 at 3 55 32\u202fPM](https://github.com/microsoft/vscode/assets/29464607/060f51c3-bcf5-4b9d-8188-3fb3cf6d39b2)\r\n",
    "labels": [
      "feature-request",
      "terminal-chat"
    ],
    "comments": 4,
    "issue_creation_time": "2024-05-31T05:21:45",
    "first_answer_author": "Tyriar",
    "first_answer_body": "We want this wording to be very concise, I'm not sure we want to mention terminal (or notebooks) here as it's still just inline chat which is already called out.",
    "first_answer_creation_time": "2024-05-31T14:23:06",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Allow to pass language mode for `workbench.action.editor.changeLanguageMode` action",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213688",
    "author_name": "dimateos",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nSometimes I want to quickly change the languange mode of an unsaved document to `.log`.\r\nWould love to be able to pass an argument to ``workbench.action.editor.changeLanguageMode`` e.g.:\r\n\r\n    {\r\n        \"key\": \"shift+alt+w shift+alt+l\",\r\n        \"command\": \"workbench.action.editor.changeLanguageMode\",\r\n        \"args\": \"log\"\r\n    },\r\n\r\nBest regards!",
    "labels": [
      "feature-request",
      "verified",
      "languages-basic",
      "insiders-released"
    ],
    "comments": 4,
    "issue_creation_time": "2024-05-28T15:19:51",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-29T17:25:29",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Support a remote specific `files.dialog.defaultPath` setting",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213426",
    "author_name": "olegkorshunov",
    "question_body": "              As the message tries to explain, this setting in your local user-level settings.json will have no effect on the remote WSL workspace you currently have open. You need to set it at the remote workspace level. The Settings Editor tabs can help you do this.\r\n\r\nAlso, please edit the title of this issue so it summaries your new problem instead of just repeating the comment from @alexr00 in your original issue.\r\n\r\n_Originally posted by @gjsjohnmurray in https://github.com/microsoft/vscode/issues/213345#issuecomment-2128577946_\r\n\r\nSorry, I opened issue in 3rd time :-) you right that `\"this setting in your local user-level settings.json will have no effect on the remote WSL workspace you currently have open\"`, and as I understand, this parameter worked only for local, and not for WSL, perhaps there is an alternative parameter \u201cFiles.dialog.default Path\u201d for WSL?\r\n\r\n\r\n![image](https://github.com/microsoft/vscode/assets/44620818/33021e29-9c67-4cad-9cee-f370fddeef46)\r\n\r\n            ",
    "labels": [
      "feature-request",
      "remote",
      "simple-file-dialog"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-24T21:12:17",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-25T08:15:32",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Add accessible view for debug console",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213413",
    "author_name": "meganrogge",
    "question_body": "Requested by @jooyoungeo\r\n\r\nThis would just be a flat view of the whole debug console's contents similar to the terminal accessible view",
    "labels": [
      "feature-request",
      "debug",
      "accessibility",
      "on-testplan",
      "on-release-notes",
      "insiders-released"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-24T19:36:13",
    "first_answer_author": "meganrogge",
    "first_answer_body": "@jooyoungseo, I just tested the current experience. I can see why in some cases, you want to inspect content in the accessible view. \n\nHowever, I worry that dumping the fully expanded content into the accessible view would be confusing and difficult to navigate. \n\nCan you please provide an example of an object that is currently problematic to interact with in the debug console?\n",
    "first_answer_creation_time": "2024-07-09T21:12:53",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Grouping open files.",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213129",
    "author_name": "Portash-Yurij",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nGrouping open files.\r\nAdd the ability to group open files. Make groups of open files, by projects. Gives the ability to group files by projects (tasks).\r\n![Screenshot_28](https://github.com/microsoft/vscode/assets/102723117/a0aa6c57-ec7c-4da8-9c66-1052ee451f27)\r\n",
    "labels": [
      "feature-request",
      "open-editors"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-21T07:56:51",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-21T15:13:33",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Provide option to show both latest Git tag and current branch name in Status Bar",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213090",
    "author_name": "ripcord",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nIt would be handy to have the option to configure the Status Bar to show both the current branch and latest Git tag for an open Git repo.",
    "labels": [
      "feature-request",
      "git"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-20T18:51:54",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-21T19:20:01",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Allow multiple folders and multiple files (nested or not)",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/213008",
    "author_name": "Calkines",
    "question_body": "Hello, I know that already exist a feature to create multiple nested folders. But there isn't a feature to create not nested multiple folders. It would be great to have it.\r\n\r\n\r\nFor example:\r\n\r\nWhen click \"New Folder\"\r\nEnter: \"{folder1/{folder2,folder3,folder4}\"....\r\nIt will create a tree of Folders folder1>folder2,folder3,folder4 (at same level).\r\nIdk if how we could invest in this, but combine this with multiple files creation sounds good too. e.g. In that way:\r\nEnter: \"{folder1/{folder2[file1.js,file2.js],folder3[file1.js],folder4}\"....\r\nit will create folders: folder1>folder2,folder3,folder4, and inside folder2, two js files, and one file to folder3.\r\n\r\nWe talked about a releated subject in #30744, but isn't the same ideia.",
    "labels": [
      "feature-request",
      "file-explorer"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-18T14:46:00",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-21T20:40:24",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Feature request: Git Commit Active File",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/212905",
    "author_name": "haba713",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nImplement a VS Code equivalent functionality for `git commit pathspec` where `pathspec` is the open and active file in VS Code. The command name could be for example \"Git: Commit Active File\".\r\n\r\n`man git-commit`:\r\n> When pathspec is given on the command line, commit the contents of the files that match the pathspec **without recording the changes already added to the index**.\r\n\r\nRunning the command should save the file with a confirmation and open a dialog for entering the commit message.\r\n\r\nOf course the command should add the file to the index (`git add pathspec`) if it isn't already there.",
    "labels": [
      "feature-request",
      "git"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-16T15:25:04",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-25T08:07:00",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Support expand level of outline",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/212567",
    "author_name": "roachsinai",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nFor setting `Outline: Collapse Items` on current latest VSCode version, there are only two choices:\r\n\r\n+ alwaysExpand\r\n+ alwaysCollapse\r\n\r\nIf alwaysCollapse means expand level 0, alwaysExpand means expand level -1 (like python), support specific expand level in 0 to -1 is expected.\r\n\r\nThanks in advace!\r\n\r\n#188207\r\n",
    "labels": [
      "feature-request",
      "outline"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-13T03:09:32",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-13T07:42:23",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Git icons to find them easilly ",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/212486",
    "author_name": "madprops",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nI usually have 5+ git repos open on the sidebar and it can be a bit hard to find what I want. It's not really hard but if it was able to add some color or icon to mark repos it might be easier to find them. Something like color -> yellow, etc would place a yellow circle left to the name.",
    "labels": [
      "feature-request",
      "scm"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-11T05:10:24",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-26T16:18:03",
    "was_closed_after_first_comment": false
  },
  {
    "title": "FEATURE REQUEST: In menu `edit` - `undo` and `redo` commands write which one command will be proceed if do this action (like `undo paste`, `redo format`)",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/212336",
    "author_name": "psnet",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nIn menu `edit` - `undo` and `redo` commands write which one command will be proceed if do this action (like `undo paste`, `redo format`)\r\n\r\nExample:\r\n![\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f](https://github.com/microsoft/vscode/assets/1023918/2f4383ce-2e1d-4103-8ac7-343e54e4b567)",
    "labels": [
      "feature-request",
      "undo-redo"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-09T08:24:40",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-10T14:32:45",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Make layout in side panels allowed to code tab",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/212131",
    "author_name": "egorgam",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nHello! I think it may be good feature if VSCode interface will allow to pin code tabs in left/right/bottom panels like in JetBrains Fleet or Zed redactor.",
    "labels": [
      "feature-request",
      "workbench-editors",
      "layout"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-06T21:51:04",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-07T08:57:17",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Please allow deleting selected text in terminal using backspace like its in jetbrain ide and warp ide",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/212123",
    "author_name": "itsamrit",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nPlease allow deleting selected text in terminal using backspace like its in jetbrain ide and warp ide\r\n```[tasklist]\r\n### Tasks\r\n```\r\n\r\n```[tasklist]\r\n### Tasks\r\n```\r\n",
    "labels": [
      "feature-request",
      "terminal"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-06T20:29:45",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-06T21:26:47",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Cannot hover over hover widget in panel chat code block",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/212101",
    "author_name": "ulugbekna",
    "question_body": "Repro: \n\n1. Ask copilot for a code block with a symbol that can be hovered over, eg \"typescript array map example\"\n2. Hover over map -- hover widget appears, but I can't hover over it (not the case with ordinary editor) \n\nhttps://github.com/microsoft/vscode/assets/16353531/f298f4f7-324e-42a2-bef8-eefd2fa6f1de\n\nVersion: 1.90.0-insider\nCommit: ccba2fc85c14bedeef5a72b7ebc0bde9b0e91948\nDate: 2024-05-06T08:08:03.248Z\nElectron: 28.2.8\nElectronBuildId: 27744544\nChromium: 120.0.6099.291\nNode.js: 18.18.2\nV8: 12.0.267.19-electron.0\nOS: Darwin arm64 23.4.0\n\n",
    "labels": [
      "feature-request",
      "editor-hover",
      "on-testplan"
    ],
    "comments": 2,
    "issue_creation_time": "2024-05-06T15:41:33",
    "first_answer_author": "mjbvz",
    "first_answer_body": "This seems to happen for any editor that uses `overflowWidgetsDomNode`. You can see the same behavior inside the notebook diff editor for example. After setting `overflowWidgetsDomNode`, the editor doesn't seem to get the `mousemove` event when the mouse moves over the hover content widget. Without `overflowWidgetsDomNode`, the editor does\n\n@alexdima @hediet  Do you have any ideas on how we might fix this?\n\n",
    "first_answer_creation_time": "2024-05-06T18:56:16",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Custom Labels: Support `profilename` variable",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/211916",
    "author_name": "tjx666",
    "question_body": "```jsonc\r\n\"workbench.editor.customLabels.patterns\": {\r\n    \"**/Code/User/profiles/-18e21e8d/settings.json\": \"Settings - Work\",\r\n    \"**/Code/User/profiles/-96a0e1f/settings.json\": \"Settings - FE\"\r\n},\r\n```\r\n\r\ncan be simplify wirted to:\r\n\r\n```\r\n```jsonc\r\n\"workbench.editor.customLabels.patterns\": {\r\n    \"**/Code/User/profiles/*/settings.json\": \"Settings - ${profilename}\",\r\n```\r\n\r\n```\r\n",
    "labels": [
      "feature-request"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-03T09:28:07",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-06T10:48:05",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Add option in source control view to copy filename",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/211909",
    "author_name": "CWempe",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nIn the explorer view there is an option to copy the path or filename.\r\n\r\n![image](https://github.com/microsoft/vscode/assets/1270359/c419e8f6-ca1f-4c18-bd23-fbc35f05e411)\r\n\r\nI would love to have this option in the source control view as well.\r\n\r\n![image](https://github.com/microsoft/vscode/assets/1270359/969b3b14-6cd4-4d09-82b7-5f1014d98861)\r\n\r\nI often include the file name in the commit message and therefore need to type the filename manually for now.\r\n",
    "labels": [
      "feature-request",
      "scm"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-03T07:38:00",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-03T08:24:42",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Multi-Root Workspaces Folder Glob",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/211872",
    "author_name": "jameshearttech",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nDefine multi-root workspace folders using globs. For example, top level root contains sub-directories like apps, libs, packages. Each of those sub-directories contains workspaces like app1, app2, lib1, lib2, package1, and package2.\r\n\r\n.code-workspace\r\n\r\n```json\r\n{\r\n    \"folders\": [\r\n        {\r\n            \"path\": \"apps/*\"\r\n        },\r\n        {\r\n            \"path\": \"libs/*\"\r\n        },\r\n        {\r\n            \"path\": \"packages/*\"\r\n        }\r\n    ]\r\n}\r\n```",
    "labels": [
      "feature-request",
      "workbench-multiroot"
    ],
    "comments": 4,
    "issue_creation_time": "2024-05-02T19:17:27",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-03T06:24:33",
    "was_closed_after_first_comment": false
  },
  {
    "title": "`Expand to Original` Feature",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/211764",
    "author_name": "Bistard",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nCan we introduce a new feature for the `collapse all` icon in the file tree: I call it `expand to original`. Once after I click `collapse all`, the icon will change to something like:\r\n![image](https://github.com/microsoft/vscode/assets/38385498/0c8fa0a1-6dc9-4b1c-b9e6-3a809c2ca5b9)\r\n\r\nThe very next time I click the icon again, it will expand to my original file tree state. My friends and I REALLY WANT IT!!",
    "labels": [
      "feature-request",
      "file-explorer"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-01T06:03:13",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-01T18:12:30",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Register VSCode for restart on Windows when \"Automatically save my restartable apps and restart them when I sign back in\" in enabled",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/211583",
    "author_name": "soredake",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nRegister VSCode for restart on Windows when \"Automatically save my restartable apps and restart them when I sign back in\" in enabled:\r\n![image](https://github.com/microsoft/vscode/assets/5204968/f02a6e05-fb15-4928-8dbd-bb868e2fa2f3)\r\n\r\nhttps://learn.microsoft.com/en-us/windows/win32/recovery/registering-for-application-restart?redirectedfrom=MSDN",
    "labels": [
      "feature-request",
      "workbench-os-integration"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-28T19:20:41",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-29T18:00:51",
    "was_closed_after_first_comment": false
  },
  {
    "title": "View lots and large amounts of files should be a bit easier.",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/211463",
    "author_name": "SkybuckFlying",
    "question_body": "1. First of all \"expand all\" and \"collapse all\" should be available for the file explorer.\r\n2. Second:\r\n\r\nPressing the down arrow or up arrow on the keyboard should:\r\n2.1 Navigate up or down in the file explorer.\r\n2.2 Automatically open the file under the cursor in the file explorer.\r\n2.3 Automatically close the previous file.\r\n\r\nThis would allow to:\r\n\r\n1. Expand the file tree all at once, single click \"expand all\".\r\n2. Allow browsing of source code files with arrow keys only, and prevents many clicks and many spacebar presses.",
    "labels": [
      "feature-request",
      "file-explorer"
    ],
    "comments": 4,
    "issue_creation_time": "2024-04-26T15:11:30",
    "first_answer_author": "lramos15",
    "first_answer_body": "Please do not compound feature requests as it makes it difficult to track. We have a feature request for pretty much all of these already. ",
    "first_answer_creation_time": "2024-04-26T16:38:41",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Autofit intellisense",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210538",
    "author_name": "BerndHme",
    "question_body": "Type: <b>Feature Request</b>\r\n\r\nMake intellisense autofit to the information it wants to display.\r\n\r\n![image](https://github.com/microsoft/vscode/assets/132269491/7384a7e7-4862-415f-ac47-059c7c43c3f2)\r\n\r\n\r\nVS Code version: Code 1.88.1 (e170252f762678dec6ca2cc69aba1570769a5d39, 2024-04-10T17:41:02.734Z)\r\nOS version: Windows_NT x64 10.0.22631\r\nModes:\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "labels": [
      "feature-request",
      "suggest"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-17T08:22:06",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-17T23:00:15",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Elide middle in explorer and outline",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210514",
    "author_name": "nclarius",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nWhen there are several files in the explorer or symbols in the outline with a long name starting with a common prefix, the name gets elided on the right and it is not (easily) possible to distinguish them unless hovered:\r\n\r\n![image](https://github.com/microsoft/vscode/assets/13196860/ba52c4ee-9154-4076-85fa-57c321b2cd78)\r\n\r\n![image](https://github.com/microsoft/vscode/assets/13196860/b90cc0d9-edc3-40fb-b31b-dc4c1ba6357b)\r\n\r\nIt would be more helpful if instead the names were elided in the middle so that the beginning and the end of the name are visible, since typically the end is more unique:  \r\n\r\n```\r\norg.kde.Solid.P...tnessControl.xml\r\norg.kde.Solid.P...ButtonEvents.xml\r\norg.kde.Solid.P...PowerProfile.xml\r\n```\r\n\r\nEither globally or configurable.\r\n\r\nFor symbol names it might make sense to (optionally) drop the class prefix, depending on language support:  \r\n```\r\nhandlePropertiesChanged (void ...)\r\ncurrentTemperature int() const\r\ntargetTemperature int() const\r\n```\r\n",
    "labels": [
      "feature-request",
      "outline"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-16T22:02:21",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-16T23:37:07",
    "was_closed_after_first_comment": false
  },
  {
    "title": "support link providers in the debug console",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210428",
    "author_name": "DetachHead",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nsee https://github.com/microsoft/vscode/issues/157500#issuecomment-2052000349\r\n\r\n> The debug console is not a terminal, so terminal link providers were never meant to work there. A universal link provider API would be nice...",
    "labels": [
      "feature-request",
      "debug"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-16T00:02:19",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-23T22:24:54",
    "was_closed_after_first_comment": false
  },
  {
    "title": "[file explorer] Invisible character warning",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210421",
    "author_name": "Its-Just-Nans",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nI would like to have a distinction when a file contains a space or an invisible character\r\n\r\nHere in the images below, one the folder is `workflows ` (with a trailing space)\r\n\r\n![image](https://github.com/microsoft/vscode/assets/56606507/e7c4c559-b319-4a5d-b972-0e6bdaa65b08)\r\n",
    "labels": [
      "feature-request",
      "file-explorer"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-15T20:45:55",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-22T20:31:16",
    "was_closed_after_first_comment": false
  },
  {
    "title": "[Feature request] Workspace-level problems, and support in `problemMatchers`",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210356",
    "author_name": "NSExceptional",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nI am requesting essentially the same functionality as #155673, but I'm hoping I can get the required upvotes to get this in the backlog. I can even help contribute this feature myself if someone can point me in the right direction. I tried digging around in `problemMatcher.ts` myself but I got lost very quickly.\r\n\r\nMy approach would be to enable passing `\"file\": -1` in the problem matcher to indicate there will be no file/location/line for a given problem. I think I can manage that on my own, but I don't know where to begin updating the problems pane UI to support this. What file is that in? ",
    "labels": [
      "feature-request",
      "tasks"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-14T20:48:30",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-15T15:12:37",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Add a setting to prevent automatic setting sync",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210352",
    "author_name": "adriancuadrado",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nI'd like to have a setting that would allow me to sync settings only when I run `Settings Sync: Sync Now` explicitly from the command palette.",
    "labels": [
      "feature-request",
      "settings-sync"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-14T17:30:07",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-18T16:36:00",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Feature request for integrated terminal: Add support for OSC 52 ANSI to allow clipboard synchronization.",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210302",
    "author_name": "BaldStrong",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nhttps://github.com/microsoft/vscode/issues/122083#issue-866642125\r\nAccording to this issue, I found that xterm.js has already supported the feature, I hope vscode can evaluate the need.\r\nRef:\r\n- https://github.com/xtermjs/xterm.js/issues/3260\r\n- https://github.com/aymanbagabas/xterm.js/commit/db5bfc75251c0646018123a801903e3fcdb1ddee",
    "labels": [
      "feature-request",
      "*duplicate",
      "terminal-input"
    ],
    "comments": 2,
    "issue_creation_time": "2024-04-13T15:05:31",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-15T15:20:14",
    "was_closed_after_first_comment": false
  },
  {
    "title": "nuget",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210298",
    "author_name": "JavierMarcuzzi",
    "question_body": "Type: <b>Feature Request</b>\r\n\r\nIt would be nice to have an option to install packages from NuGet, however, it would be much more useful to detect obsolete packages and be able to update them.\r\n\r\nVS Code version: Code 1.88.1 (Universal) (e170252f762678dec6ca2cc69aba1570769a5d39, 2024-04-10T17:42:52.765Z)\r\nOS version: Darwin arm64 23.4.0\r\nModes:\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "labels": [
      "feature-request",
      "*caused-by-extension"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-13T13:41:07",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-13T14:59:51",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Creating a floating window from a terminal",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210237",
    "author_name": "Jamu2800",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nI wanted to make the terminal a floating window.\r\nHowever, this operation requires that the terminal be displayed once as a tab and then dragged off-screen, as shown in the video below.\r\nI want to display a floating window by dragging it off-screen directly from the terminal.\r\n\r\n\r\nhttps://github.com/microsoft/vscode/assets/74401057/0759dbd2-7110-480d-af91-d62dd1a17f89\r\n\r\n\r\n\r\nI have read the source code myself, but have no idea what is going on, so please help.\r\nThanks for reading!\r\nI'm using a translation tool, so sorry if there's any weird wording.",
    "labels": [
      "feature-request",
      "terminal-tabs"
    ],
    "comments": 2,
    "issue_creation_time": "2024-04-12T13:34:17",
    "first_answer_author": "ArturoDent",
    "first_answer_body": "For dragging: probably a duplicate of https://github.com/microsoft/vscode/issues/193267.\r\n\r\nAnd related: https://github.com/microsoft/vscode/issues/34442\r\n\r\nBut see https://stackoverflow.com/a/68273093/836330 there is a command:\r\n\r\n// Move Terminal into New Window\r\nworkbench.action.terminal.moveIntoNewWindow\r\n\r\nas of v1.86.",
    "first_answer_creation_time": "2024-04-14T20:47:25",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Custom Labels: improve `${extname}` when file includes multiple extensions",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210166",
    "author_name": "kylepg",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\n### Workbench \u203a Editor \u203a Custom Labels: Patterns\r\n\r\nCurrently, `${filename}` only drops everything after the  _last_ `.`, but it would be nice if you could drop everything after the _first_ `.` when needed.\r\n\r\nFor example, I would like `foo.blade.php` to be displayed as `foo` rather than `foo.blade`.\r\n",
    "labels": [
      "feature-request",
      "verified",
      "verification-needed",
      "insiders-released",
      "workbench-custom-labels"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-11T13:55:25",
    "first_answer_author": "benibenj",
    "first_answer_body": "One option could be to have `${filename}` only include the name until the first `.` and `${extname}` could include everything after. \r\nSo for `foo.blade.php`:\r\n- `${filename}`: `foo`\r\n- `${extname}`: `blade.php`\r\n\r\nAnother option could be to have `${filename}` only include the name until the first `.` and `${extname}` include only the last extension. This would still allow users to add rules to cover the cases with the double extensions and I would assume users do not have many different combinations of double extensions that they work with so it wouldn't be to cumbersome to add.\r\nSo for `foo.blade.php`:\r\n- `${filename}`: `foo`\r\n- `${extname}`: `php`",
    "first_answer_creation_time": "2024-04-12T07:41:55",
    "was_closed_after_first_comment": false
  },
  {
    "title": "[Explorer] Exclusive expanding of menus",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210147",
    "author_name": "martinsolberg",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nThe option to activate \"exclusive expand\" of the menus in Explorer (Folders, Open Editors, Timeline, Outline). \r\nE.g. when one menu is expanded, all others are collapsed.",
    "labels": [
      "feature-request",
      "menus"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-11T08:20:51",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-11T15:49:08",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Need easy turn off intelisense, checking functions, interaction in documents, eg. by simple icon on progress-bar.",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210085",
    "author_name": "ManPython",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nRight now exist often situation where intelisense, checking functions, etc. and words/vars are underlines, exist many other alerts regarding code and doing interaction between code document and VSC. Sometimes are documents where is many errors, alerts and doing problems for VS or OS (both working hard), indicating some notifications to solve problems, etc.. In short.. to much interactions.\r\n\r\n**By this want suggest easy turn off interaction in documents, eg. by simple icon on progress-bar.**",
    "labels": [
      "feature-request",
      "editor-symbols"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-10T17:18:29",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-11T06:46:02",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Different colors for the line highligther of debugger",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/210060",
    "author_name": "TSonono",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nThere are scenarios where you might be running two debuggers simultaneously that are exercising the same code. When the two debuggers are at the area of the code, it would be useful to have the highlighter in different colors for the respective debugging session instead of both being yellow.\r\n\r\nExample:\r\n\r\n![image](https://github.com/microsoft/vscode/assets/47821555/9b3a77bb-7f8a-4d47-b195-94f5cfaf46f4)\r\n \r\nHere, it might not be obvious which highlighted line belongs to which debugging sessino",
    "labels": [
      "feature-request",
      "debug"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-10T14:11:49",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-30T00:50:33",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Debug attach support process filter",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209918",
    "author_name": "honeway",
    "question_body": "Type: <b>Feature Request</b>\r\n\r\nCurrent the default value of `pid` in attach request is `${command:pickMyProcess}`.\r\n\r\nWish to support add a filter to pick process.\r\nmay be like `${filter:xxxxx}`\r\n\r\nVS Code version: Code 1.88.0 (5c3e652f63e798a5ac2f31ffd0d863669328dc4c, 2024-04-03T13:26:18.741Z)\r\nOS version: Windows_NT x64 10.0.22631\r\nModes:\r\nRemote OS version: Linux x64 5.15.0-101-generic\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "labels": [
      "feature-request",
      "debug"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-09T06:57:58",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-19T20:49:08",
    "was_closed_after_first_comment": false
  },
  {
    "title": "VSCode Speech Extension: Add IDE Control Feature",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209906",
    "author_name": "WeiZixu-HIT",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\nVSCode Speech Extension:  Add IDE control functions, such as running code by saying \"run code\"\r\n\r\n<!-- Describe the feature you'd like. -->\r\n",
    "labels": [
      "feature-request",
      "accessibility",
      "on-testplan",
      "workbench-voice"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-09T02:38:40",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-09T14:57:53",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Add accessibility help dialog API",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209855",
    "author_name": "meganrogge",
    "question_body": "Extensions, like the GHPR extension, want to contribute accessibility help dialogs. microsoft/vscode-pull-request-github#5933\r\n\r\nWe should add this so that SR users can understand the features of extensions by the same flow that they understand core features.\r\n\r\nChat already has these because the chat actions are in core.",
    "labels": [
      "feature-request",
      "api",
      "accessibility",
      "on-testplan",
      "api-proposal",
      "on-release-notes",
      "insiders-released"
    ],
    "comments": 2,
    "issue_creation_time": "2024-04-08T15:26:49",
    "first_answer_author": "meganrogge",
    "first_answer_body": "```ts\r\n\r\ndeclare module 'vscode' {\r\n\r\n\t// @meganrogge https://github.com/microsoft/vscode/issues/209855\r\n\r\n\texport interface AccessibilityHelpProvider {\r\n\t\t/**\r\n\t\t * The id of the provider.\r\n\t\t */\r\n\t\tid: string;\r\n\r\n\t\t/**\r\n\t\t * This will show the dialog when this context value is true.\r\n\t\t */\r\n\t\tcontextValue: string;\r\n\r\n\t\t/**\r\n\t\t * Provide the content of the dialog as a markdown string.\r\n\t\t*/\r\n\t\tprovideContent(token: CancellationToken): string;\r\n\r\n\t\t/**\r\n\t\t * This will be called when the dialog is closed.\r\n\t\t */\r\n\t\tresolveOnClose(token: CancellationToken): void;\r\n\t}\r\n\r\n\texport namespace window {\r\n\r\n\t\t/**\r\n\t\t * Registers an accessibility help provider.\r\n\t\t *\r\n\t\t * @param provider An accessibility help provider.\r\n\t\t */\r\n\t\texport function registerAccessibilityHelpProvider(provider: AccessibilityHelpProvider): Disposable;\r\n\t}\r\n}\r\n```",
    "first_answer_creation_time": "2024-04-09T15:06:04",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Support Find in editor selection, selected cells, or sections in Notebook Find Widget",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209839",
    "author_name": "Yoyokrazy",
    "question_body": "Users should be able to control the scope of their 'find' query based on the section they are highlighting, which should also allow them to multiselect cells as their in-section parameter.",
    "labels": [
      "feature-request",
      "on-testplan",
      "insiders-released",
      "notebook-find"
    ],
    "comments": 1,
    "issue_creation_time": "2024-04-08T13:52:55",
    "first_answer_author": "starball5",
    "first_answer_body": "Related on Stack Overflow: [Why is find and replace in Notebooks in VS Code different than in text documents? Are there ways to make them more similar?](https://stackoverflow.com/q/77024793/11107541)",
    "first_answer_creation_time": "2024-06-05T01:25:41",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Extension Bisect _for_ extension developers",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209828",
    "author_name": "ADTC",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nI have a problem with an extension, and I want to find out if the problem happens with _only_ that extension, or it happens with that extension when combined with another extension.\r\n\r\nCurrently this style of **Bisect** is not possible, where you'd pin an extension as always enabled, then Bisect all the remaining extensions to find out if the pinned extension has the problem without other extensions, or with another particular extension(s).\r\n\r\nCould be called \"Bisect for Extension Developers\" if it can be implemented.\r\n\r\nPlease react with \ud83d\udc4d below to vote for the issue.",
    "labels": [
      "feature-request",
      "extensions"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-08T12:23:08",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-09T18:16:40",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Support Drag and Drop from Zip/Rar",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209772",
    "author_name": "dickermoshe",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nSupport drag and drop file transfer from zipped archives.\r\n\r\nhttps://github.com/microsoft/vscode/assets/75931499/7b612400-f21f-4857-8cb9-039f4a344c00\r\n\r\n",
    "labels": [
      "feature-request",
      "file-explorer"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-07T16:27:57",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-08T19:12:52",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Add iconPath to WebviewPanelOptions to enable setting icons in registerCustomEditorProvider",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209668",
    "author_name": "antonkc",
    "question_body": "When creating WebviewPanels iconPath has to be set after the fact. An example:\r\n```\r\nconst wvPanel = window.createWebviewPanel(WEBVIEW_NAME_ID, WEBVIEW_NAME, ViewColumn.Active, {\r\n  enableFindWidget: true,\r\n});\r\nwvPanel.iconPath = {\r\n  light: Uri.joinPath(ctx.ext.extensionUri.path, \"assets\", \"icon.svg\")),\r\n  dark: Uri.joinPath(ctx.ext.extensionUri.path, \"assets\", \"icon-dark.svg\")),\r\n};\r\n```\r\nI suggest it being a configurable option like this:\r\n```\r\nconst wvPanel = window.createWebviewPanel(WEBVIEW_NAME_ID, WEBVIEW_NAME, ViewColumn.Active, {\r\n  enableFindWidget: true,\r\n  iconPath: {\r\n    light: Uri.joinPath(ctx.ext.extensionUri.path, \"assets\", \"icon.svg\")),\r\n    dark: Uri.joinPath(ctx.ext.extensionUri.path, \"assets\", \"icon-dark.svg\")),\r\n  }\r\n});\r\n```\r\nI believe this would allow using icons in ```registerCustomEditorProvider``` in the following case:\r\n```\r\nwindow.registerCustomEditorProvider(\r\n  viewType,\r\n  new Provider(ctx),\r\n  {\r\n    webviewOptions: {\r\n      enableFindWidget: true,\r\n      iconPath: {\r\n        light: Uri.joinPath(ctx.ext.extensionUri, \"assets\", \"icon.svg\")),\r\n        dark: Uri.joinPath(ctx.ext.extensionUri.path, \"assets\", \"icon-dark.svg\")),\r\n      }\r\n    },\r\n    supportsMultipleEditorsPerDocument: false,\r\n  }\r\n);\r\n```\r\nRight now, I haven't found any way to change custom editor icons and this seems reasonable enough. If the by-reference/object nature raises a problem a String resolution can still be considered. ",
    "labels": [
      "feature-request",
      "api",
      "custom-editors"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-05T17:13:11",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-08T20:15:58",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Show Custom Labels in Go to file panel (Ctrl+P)",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209662",
    "author_name": "jswillard",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nThe new custom labels in the editor tabs is great but would it also be possible to show these custom labels when searching for files in the Ctrl+P menu? I am frequently searching for files in a codebase that has many duplicated file names and it would help find the specific one I am looking for.\r\n\r\nI'd be happy to look at opening a pr for this if there is interest.\r\n\r\nThanks for your time.",
    "labels": [
      "feature-request",
      "verified",
      "verification-needed",
      "quick-pick",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-04-05T16:36:22",
    "first_answer_author": "benibenj",
    "first_answer_body": "Verification Steps:\r\n1. Create a custom label (`workbench.editor.customLabels.patterns`)\r\n    - For example: item: `**`, value: `/${dirname}`\r\n2. Search for any file in quick open (`ctrl+P`) which matches the pattern created in step 1. \r\n    - With the mentioned example every file matches the template\r\n3. The label of the file being searched for should have been renamed based on the template created in step 1.\r\n    - With the mentioned example all labels should start with a `/` followed by the name of the folder the file is in",
    "first_answer_creation_time": "2024-04-22T09:28:59",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Add Configuration for Hiding Git Submodules",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209507",
    "author_name": "atramirez",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nBackground:\r\nWhen working on a project with a large amount of git submodules the source control management section gets quite cluttered. In some large C projects for example this number can easily reach 50+. There are settings to hide submodules displayed here or a number of them. Some of these large projects may have developers responsible for contributing to many of the submodules, but not all of them.\r\n\r\nThere should be a configuration or option to hide specific submodules that a developer does not need to be aware of that can be edited by a specific workspace.",
    "labels": [
      "feature-request",
      "git"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-04T02:39:06",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-29T14:53:50",
    "was_closed_after_first_comment": false
  },
  {
    "title": "feat(ui): Animate side bars and panels",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209405",
    "author_name": "SFM61319",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nAs the title suggests, please add transition animations for all \"major\" panes (the side bars, the bottom panel, etc.), at least behind a setting.\r\n\r\nThanks.\n```[tasklist]\n### Tasks\n```\n",
    "labels": [
      "feature-request",
      "workbench-views"
    ],
    "comments": 4,
    "issue_creation_time": "2024-04-03T06:03:59",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-03T16:57:30",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Use of local-fonts API from within a CustomTextEditor",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209255",
    "author_name": "jogibear9988",
    "question_body": "I try to use this API is\u00b4nside of a CustomtextEditor, but get this error:\r\n\r\nAccess to the feature \"local-fonts\" is disallowed by Permissions Policy",
    "labels": [
      "feature-request",
      "api",
      "webview"
    ],
    "comments": 3,
    "issue_creation_time": "2024-04-01T10:44:57",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-08T15:24:06",
    "was_closed_after_first_comment": false
  },
  {
    "title": "support references view as option for editor.gotoLocation.alternativeDeclarationCommand",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209219",
    "author_name": "jordanlewis",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\nCurrently, the `editor.gotoLocation.alternativeDeclarationCommand` (and `alternativeDefinitionCommand`, and the other related settings) do not support specifying the `references-view.findReferences` action as the alternative command.\r\n\r\nI prefer always using the references view when finding all references to a symbol, and I prefer to use a single keybinding for jump-to-definition and jump-to-references, so I'd like the flexibility to specify using the references view when jumping to references from a symbol definition.\r\n\r\nPlease add `references-view.findReferences` to the list of allowable options to the `editor.gotoLocation.alternative*` settings.\r\n\r\nThank you!\r\n<!-- Describe the feature you'd like. -->",
    "labels": [
      "feature-request",
      "editor-symbols"
    ],
    "comments": 3,
    "issue_creation_time": "2024-03-31T16:56:07",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-02T07:23:21",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Add option to hide git gutter indicators in Zen mode",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209189",
    "author_name": "AbdullahAmrSobh",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nImo, it would be a good feature to be able to toggle git gutter indicators on and off from the command palette, as they could be distracting sometimes",
    "labels": [
      "feature-request",
      "scm"
    ],
    "comments": 3,
    "issue_creation_time": "2024-03-30T12:56:38",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-04-04T02:27:04",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Improve viewing large text output",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/209158",
    "author_name": "rebornix",
    "question_body": "Type: <b>Feature Request</b>\r\n\r\nWhile experimenting with LLMs in Jupyter notebook, I often need to validate the text output (custom prompt, documents retrivied, etc). I like the fact that it's rendered in a scrollabe output and I can search text in it. However in order to read through them line by line, I found myself repeatedly:\r\n\r\n* Click in the output\r\n* Cmd+A\r\n* Cmd+C\r\n* Cmd+N to open a new text editor\r\n* Cmd+V\r\n\r\nBefore we have the scrollable output support, we render a command \"open in text editor\" in the output which can be really convinient, but I'm not sure I want to sacrifice scrollable output for it though.\r\n\r\nVS Code version: Code - Insiders 1.88.0-insider (aa25485166449aa0f9eb8ebd8d0b70376108633c, 2024-03-28T22:10:25.599Z)\r\nOS version: Windows_NT x64 10.0.22631\r\nModes:\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "labels": [
      "feature-request",
      "verified",
      "verification-needed",
      "insiders-released"
    ],
    "comments": 4,
    "issue_creation_time": "2024-03-29T21:29:08",
    "first_answer_author": "rebornix",
    "first_answer_body": "We can now right click on a large text output and open directly in a text editor \r\n\r\n<img width=\"741\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b9b3359a-0e82-471e-83d5-1278afba5675\">\r\n",
    "first_answer_creation_time": "2024-06-24T21:25:40",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Make inline chat work with chat participants",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208898",
    "author_name": "jrieken",
    "question_body": "For inline chat we have adopted the generic chat widget. That works with the chat model and service which is driven by participants (aka agents). Today there is a bridge that connects both APIs but we should move inline chat onto participants as well. \r\n\r\nDoing this is a win for our upcoming extension story and will also clean up a lot of debt",
    "labels": [
      "feature-request",
      "debt",
      "on-testplan",
      "inline-chat"
    ],
    "comments": 1,
    "issue_creation_time": "2024-03-27T11:28:55",
    "first_answer_author": "GavynWithLayer",
    "first_answer_body": "I see that this issue is marked as completed. Is there a way to have a `chatParticipant` use locations other than `panel` now?\r\n\r\nFrom what I can tell in the `chatParticipantContributions.ts`, `locations` is not an allowable field for the contribution point. How does one add other locations for a participant?",
    "first_answer_creation_time": "2024-05-20T18:34:52",
    "was_closed_after_first_comment": true
  },
  {
    "title": "[Feature] - Toggle size to content with Setting",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208779",
    "author_name": "mamilic",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nAs of now when there is output in terminal **Toggle size to content** with is always set to **true**, it is same for the Debug Output as well, which it makes harder to track logs. I would like to suggest that we can set **Toggle size to content** in settings so it can be rememberd and then applied accordingly.",
    "labels": [
      "feature-request",
      "*out-of-scope",
      "terminal-layout"
    ],
    "comments": 4,
    "issue_creation_time": "2024-03-26T13:32:06",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-03-26T14:27:27",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Add an option to not require a commit message when using git ammend",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208760",
    "author_name": "Kokujou",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\ncurrently, when you want to ammend changes a window opens that wants to set this message, this is quite disrupting and even confusing. i would requrest a config value, or something, to make it like in visual studio, where you have an \"ammend\" checkbox, and if you tick it, it will display the previous message, that you can change or don't change.\r\noptionally a config value that simply always uses the previous commit message would be nice.\r\nof course you can also add a new option in the dropdown being \"git ammend (use previous message)\" that just silently resolves.",
    "labels": [
      "feature-request",
      "git"
    ],
    "comments": 3,
    "issue_creation_time": "2024-03-26T09:57:10",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-27T11:58:07",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Multi-system project",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208642",
    "author_name": "royfrancis",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nVS Code supports multi-root projects which allows adding separate folders into a project. Similarly, it would be nice to have multi-system project. I have a project where I have to work in a local folder, a remote folder and a docker container. I have three different windows open when working on this project. It would be nice to have this in one VS code project. ",
    "labels": [
      "feature-request",
      "workbench-multiroot",
      "remote"
    ],
    "comments": 4,
    "issue_creation_time": "2024-03-25T13:27:48",
    "first_answer_author": "bpasero",
    "first_answer_body": "Yes, I think its really a design limitation we have that in one window you cannot have a mix of local and remote workspace folders.\r\n\r\n//cc @aeschli ",
    "first_answer_creation_time": "2024-03-25T14:13:25",
    "was_closed_after_first_comment": false
  },
  {
    "title": "[Accessibility] Make the jumpt to next/previous codeblock keybinding work within the Copilot Accessible View",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208629",
    "author_name": "jooyoungseo",
    "question_body": "Type: <b>Feature Request</b>\r\n\r\nCC @meganrogge \r\n\r\nAlthough this is possible via the Document Symbol View (ctrl+shift+.), it would be even more convenient for users to be able to use the default keybindings to jump to the next and previous codeblocks within the Copilot Accessible View.\r\n\r\nVS Code version: Code - Insiders 1.88.0-insider (b0d975fc6370f15570c380f41015b1ca2cdcb791, 2024-03-25T05:49:32.344Z)\r\nOS version: Windows_NT x64 10.0.22631\r\nModes:\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "labels": [
      "feature-request",
      "accessibility",
      "*duplicate",
      "panel-chat"
    ],
    "comments": 2,
    "issue_creation_time": "2024-03-25T12:01:59",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-03-25T17:38:38",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Consider changing `Show Changes` position to make it easier to see diffs if needed.",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208586",
    "author_name": "bhavyaus",
    "question_body": "Testing #208409\r\n\r\n<img width=\"692\" alt=\"image\" src=\"https://github.com/microsoft/vscode/assets/25044782/c766c879-f59a-4c4b-9afa-0850c39dcfed\">\r\n\r\n1. I was unsure of where to view the diffs and realized its in the bottom right of the widget. \r\n2. Its weird that the button is clubbed together with the provide feedback button. However, the upvote/downvote buttons appear somewhere the middle of the widget on hover.\r\n3. Suggestions for where the button can be better positioned\r\n- In line with `Made text edits`.  \r\n- Add another button to the row in the bottom with `Accept` `Discard` to `View Changes`",
    "labels": [
      "feature-request",
      "verified",
      "polish",
      "verification-needed",
      "insiders-released",
      "inline-chat"
    ],
    "comments": 1,
    "issue_creation_time": "2024-03-25T10:21:31",
    "first_answer_author": "jrieken",
    "first_answer_body": "Changed two things\r\n\r\n* the toggle diff now shows with Accept and Discard. Note that it only shows for true changes and not for insert-only eidts\r\n* the regenerate response command moved into the response title menu. When also having the rerun without intent detection command this is a dropdown/submenu\r\n\r\n<img width=\"772\" alt=\"Screenshot 2024-03-27 at 16 27 04\" src=\"https://github.com/microsoft/vscode/assets/1794099/91320d33-a838-4d96-94b1-c76c923bbfe3\">\r\n",
    "first_answer_creation_time": "2024-03-27T15:29:23",
    "was_closed_after_first_comment": true
  },
  {
    "title": "[FR] Press `Esc` to clear source control commit message",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208519",
    "author_name": "wenfangdu",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nA reboot of https://github.com/microsoft/vscode/issues/124421, the original issue hasn't been solved in 3 YEARS!.\r\n\r\nSince both _Search_ and _Extensions_ panel support pressing `Esc` to clear text input, I think it makes sense for the _Source Control_ panel to have this feature as well.\r\n\r\nA GIF demonstrates what I mean:\r\n\r\n![Demo](https://user-images.githubusercontent.com/28700378/119224578-9efb6800-bb31-11eb-89b7-e64f3425a116.gif)",
    "labels": [
      "feature-request",
      "verified",
      "verification-needed",
      "scm",
      "insiders-released"
    ],
    "comments": 3,
    "issue_creation_time": "2024-03-24T02:27:26",
    "first_answer_author": "lszomoru",
    "first_answer_body": "@wenfangdu, as far as I can tell `Escape` does not clear the extension/search field out of the box and keybindings have to be configured for that behaviour. Could you please confirm that you have explicitly set up those keybindings? Thank you! ",
    "first_answer_creation_time": "2024-04-17T09:36:18",
    "was_closed_after_first_comment": false
  },
  {
    "title": ".bash_history equivalent (cmd_history, ps_)",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208509",
    "author_name": "ai-bits",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nPlease forgive if I overlook sth major, but I find .bash_history very convenient and VSC's Terminal \"History restored\" every time at startup reminds me how convenient \\<arrow up\\> would be to repeat last session's cmd History.\r\nIn VSC you restore the Terminal output, but not the input, so you actually already have a wrapper around Terminal to repeat History!? (pun intended / otherwise one would need to turn to the Windows Terminal team anyway)\r\n\r\nHow about .cmd_history?\r\nMistaken?\r\nG.",
    "labels": [
      "feature-request",
      "terminal-shell-cmd"
    ],
    "comments": 3,
    "issue_creation_time": "2024-03-23T20:21:16",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-03-25T20:52:45",
    "was_closed_after_first_comment": false
  },
  {
    "title": "VS-Code-Extension \"Voice\": Record Text in one language and instantly translate into another",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208369",
    "author_name": "tobiasgraeber",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n**Feature Request:** Record text in one language and instantly translate into another (preconfigured) one",
    "labels": [
      "feature-request",
      "workbench-voice"
    ],
    "comments": 3,
    "issue_creation_time": "2024-03-22T06:50:53",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-03-22T07:36:10",
    "was_closed_after_first_comment": false
  },
  {
    "title": "memorize the last choice of auto save",
    "repo_name": "microsoft/vscode",
    "url": "https://github.com/microsoft/vscode/issues/208290",
    "author_name": "hans000",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n`File > Auto Save` can switch between off and latest used item instead of `afterDelay`",
    "labels": [
      "feature-request",
      "file-io"
    ],
    "comments": 3,
    "issue_creation_time": "2024-03-21T10:04:55",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- 6d457af9-96bd-47a8-a0e8-ecf120dfffc1 -->\nThis feature request is now a candidate for our backlog. The community has 60 days to [upvote](https://github.com/microsoft/vscode/wiki/Issues-Triaging#up-voting-a-feature-request) the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. To learn more about how we handle feature requests, please see our [documentation](https://aka.ms/vscode-issue-lifecycle).\n\nHappy Coding!",
    "first_answer_creation_time": "2024-03-21T12:09:11",
    "was_closed_after_first_comment": false
  },
  {
    "title": "`pathToFileURL` function in url fails to handle `\\\\?\\UNC\\` Prefix properly",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/54261",
    "author_name": "EarlyRiser42",
    "question_body": "### Version\n\n22.5.1\n\n### Platform\n\n```text\nMicrosoft Windows NT 10.0.22631.0 x64\n```\n\n\n### Subsystem\n\n_No response_\n\n### What steps will reproduce the bug?\n\n```javascript\r\nconst { pathToFileURL } = require('url');\r\n\r\nconsole.log(pathToFileURL('\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\folder\\\\file.txt').href); \r\n// output: 'file:///UNC/server/share/folder/file.txt'\r\n```\n\n### How often does it reproduce? Is there a required condition?\n\nAnytime\n\n### What is the expected behavior? Why is that the expected behavior?\n\nAccording to the [Microsoft documentation on maximum file path limitations](https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=registry), the \\\\?\\UNC\\ prefix are not used as part of the path itself. so it should be ignored when converting to a file URI. The current implementation does not adhere to this guideline, resulting in incorrect URL conversions. Its output should be `file://server/share/folder/file.txt.`\n\n### What do you see instead?\n\n`file:///UNC/server/share/folder/file.txt\r\n`\n\n### Additional information\n\n_No response_",
    "labels": [
      "confirmed-bug",
      "url",
      "windows"
    ],
    "comments": 3,
    "issue_creation_time": "2024-08-08T01:09:32",
    "first_answer_author": "RedYetiDev",
    "first_answer_body": "Reproduction:\r\n```console\r\n$ node\r\nWelcome to Node.js v22.5.1.\r\nType \".help\" for more information.\r\n> require('url').pathToFileURL('\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\folder\\\\file.txt', { windows: false }).href;\r\n'file:///<path>/%5C%5C%3F%5CUNC%5Cserver%5Cshare%5Cfolder%5Cfile.txt'\r\n> require('url').pathToFileURL('\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\folder\\\\file.txt', { windows: true }).href;\r\n'file:///UNC/server/share/folder/file.txt'\r\n```",
    "first_answer_creation_time": "2024-08-08T01:16:16",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Ed25519/Ed448 does not throw when used with invalid digest in crypto.createSign",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/52097",
    "author_name": "xicilion",
    "question_body": "### What is the problem this feature will solve?\n\nThe following example:\r\n```JavaScript\r\nconst crypto = require('crypto');\r\n\r\nconst key = crypto.generateKeyPairSync(\"ed25519\");\r\n\r\nvar signature = crypto.sign(null, \"hello\", key.privateKey);\r\nconsole.log(\"crypto.sign:\", signature.toString('hex'));\r\n\r\nvar signer = crypto.createSign('SHA256');\r\nsigner.update('hello');\r\nvar signature = signer.sign(key.privateKey);\r\nconsole.log(\"signer.sign:\", signature.toString('hex'));\r\n```\r\nwill output the following:\r\n```sh\r\ncrypto.sign: d58fdfa69f9d0bf4fd5358a6ed22031af3585ce9812b2bde5a5045a4e3cefd719a5af771af85e5a0c406fd48852574debe4deb32845785b761c59978b21fa903\r\nsigner.sign: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n```\r\nWhen Signer is used for Ed25519 signing, Signer does not report any errors, but returns an all-zero Buffer as the signature result.\r\nThis can be confusing for programmers who think they have signed successfully, but in fact the returned signature is not available.\n\n### What is the feature you are proposing to solve the problem?\n\nI think in this case Signer.sign should throw an error so that the programmer can deal with the problem early on.\n\n### What alternatives have you considered?\n\n_No response_",
    "labels": [
      "confirmed-bug",
      "crypto"
    ],
    "comments": 4,
    "issue_creation_time": "2024-03-15T12:39:36",
    "first_answer_author": "panva",
    "first_answer_body": "This seems like a bug. Ed25519 and Ed448 should only be available via the oneshot apis in the first place. ",
    "first_answer_creation_time": "2024-03-17T19:28:17",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Snapshotting is persisting the cwd",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/49675",
    "author_name": "arcanis",
    "question_body": "### Version\n\nv20.6.1\n\n### Platform\n\nDarwin\n\n### Subsystem\n\nsnapshots\n\n### What steps will reproduce the bug?\n\nGenerate a snapshot of the given script, then run it from a different directory. The `process.cwd()` function will keep returning the cwd you had while building the snapshot.\r\n\r\n```ts\r\nconst v8 = require(`v8`);\r\n\r\nif (v8.startupSnapshot.isBuildingSnapshot()) {\r\n    v8.startupSnapshot.setDeserializeMainFunction(() => {\r\n        console.log(process.cwd());\r\n    });\r\n}\r\n```\n\n### How often does it reproduce? Is there a required condition?\n\n_No response_\n\n### What is the expected behavior? Why is that the expected behavior?\n\nIt should return the actual cwd.\n\n### What do you see instead?\n\nIt returns the cwd at the time of `--build-snapshot`.\n\n### Additional information\n\n_No response_",
    "labels": [
      "confirmed-bug",
      "snapshot"
    ],
    "comments": 1,
    "issue_creation_time": "2023-09-16T22:13:39",
    "first_answer_author": "bnoordhuis",
    "first_answer_body": "It's because the current working directory is cached (introduced in https://github.com/nodejs/node/pull/27224 FWIW, before snapshots were a thing.)\r\n\r\nShould be easy to fix by clearing `cachedCwd` in lib/internal/bootstrap/switches/does_own_process_state.js. PR welcome.",
    "first_answer_creation_time": "2023-09-17T09:14:47",
    "was_closed_after_first_comment": true
  },
  {
    "title": "test_runner: test object is incorrectly passed to setup()",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/48809",
    "author_name": "Semigradsky",
    "question_body": "### Affected URL(s)\n\nhttps://nodejs.org/docs/latest-v20.x/api/test.html#runoptions\n\n### Description of the problem\n\nBy doc:\r\n> `options.setup` - A function that accepts the `TestsStream` instance\r\n\r\nbut in fact that is not `TestStream`\r\n[nodejs/node@v20.4.0/lib/internal/test_runner/harness.js#L29-L31](https://github.com/nodejs/node/blob/v20.4.0/lib/internal/test_runner/harness.js?rgh-link-date=2023-07-15T13%3A03%3A30Z#L29-L31)\r\n[nodejs/node@v20.4.0/lib/internal/test_runner/test.js#L165-L192](https://github.com/nodejs/node/blob/v20.4.0/lib/internal/test_runner/test.js?rgh-link-date=2023-07-15T13%3A03%3A30Z#L165-L192)\r\n[nodejs/node@v20.4.0/lib/internal/test_runner/tests_stream.js#L10](https://github.com/nodejs/node/blob/v20.4.0/lib/internal/test_runner/tests_stream.js?rgh-link-date=2023-07-15T13%3A03%3A30Z#L10)\r\n\r\n```js\r\nconst stream = run({\r\n  files: files,\r\n  concurrency: true,\r\n  setup: function (root) {\r\n    console.log('setup', root)\r\n  }\r\n})\r\n```\r\n```\r\nsetup <ref *1> Test {\r\n  concurrency: 9,\r\n  nesting: 0,\r\n  only: false,\r\n  reporter: TestsStream {\r\n    _readableState: ReadableState {\r\n      objectMode: true,\r\n      highWaterMark: 16,\r\n      buffer: BufferList { head: null, tail: null, length: 0 },\r\n      length: 0,\r\n      pipes: [],\r\n      flowing: null,\r\n      ended: false,\r\n      endEmitted: false,\r\n      reading: false,\r\n ```\r\n \r\n Found in https://github.com/DefinitelyTyped/DefinitelyTyped/pull/66064",
    "labels": [
      "confirmed-bug",
      "test_runner"
    ],
    "comments": 1,
    "issue_creation_time": "2023-07-17T08:40:39",
    "first_answer_author": "cjihrig",
    "first_answer_body": "Thanks for reporting. I changed this in 4e3bc06e6547c1d640111b73e80e198ba03f7e45, but this is a bug.  I have removed the doc label because this should be fixed in the code. We should not expose any test objects to userland code.",
    "first_answer_creation_time": "2023-08-02T22:10:50",
    "was_closed_after_first_comment": true
  },
  {
    "title": "node 20.1.0 --loader seems trigger beforeExit when use await import",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/47929",
    "author_name": "wacdev",
    "question_body": "### Version\r\n\r\n20.1.0\r\n\r\n### Platform\r\n\r\nmacos\r\n\r\n\r\n### What do you see instead?\r\n\r\nMy module will close the redis connection at the time of beforeExit, and the await import module (19.9.0) will not trigger beforeExit before.\r\n\r\nIn addition, the exit event is not triggered when use await import module\r\n\r\n",
    "labels": [
      "confirmed-bug",
      "loaders",
      "v20.x"
    ],
    "comments": 3,
    "issue_creation_time": "2023-05-09T03:09:15",
    "first_answer_author": "MoLow",
    "first_answer_body": "also reported [here](https://github.com/nodejs/node/issues/47614#issuecomment-1526523755) - with a minimal repro\r\n\r\n```js\r\n// file.js\r\nprocess.on('beforeExit', () => {\r\n  console.log('beforeExit')\r\n})\r\nimport('./anyfile.js')\r\nconsole.log('THIS CONSOLE LOG IS PREINTED')\r\n```\r\n\r\n```shell\r\n./node  file.js                                                                                             \ue0b2 \u2714\r\nTHIS CONSOLE LOG IS PREINTED\r\nbeforeExit\r\n```\r\n\r\n```shell\r\n./node --experimental-loader=\"data:text/javascript,export default true\"  file.js                            \ue0b2 \u2714\r\n(node:62415) ExperimentalWarning: Custom ESM Loaders is an experimental feature and might change at any time\r\n(Use `node --trace-warnings ...` to show where the warning was created)\r\nTHIS CONSOLE LOG IS PREINTED\r\nbeforeExit\r\nbeforeExit\r\nbeforeExit\r\n```\r\n",
    "first_answer_creation_time": "2023-05-09T09:02:17",
    "was_closed_after_first_comment": false
  },
  {
    "title": "fs.rm cannot delete a symlink which is part of a loop",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/45404",
    "author_name": "nathanael-ruf",
    "question_body": "### Version\r\n\r\n18.12.1\r\n\r\n### Platform\r\n\r\nDarwin Nathanaels-MBP.fritz.box 22.1.0 Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:30 PDT 2022; root:xnu-8792.41.9~2/RELEASE_ARM64_T8103 arm64\r\n\r\n### Subsystem\r\n\r\nfs\r\n\r\n### What steps will reproduce the bug?\r\n\r\n```sh\r\nmkdir repro\r\ncd repro\r\nln -s a b && ln -s b a\r\nnode -e 'fs.rmSync(\"a\")'\r\ncd ..\r\nrm -r repro\r\n```\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\nAlways. No.\r\n\r\n### What is the expected behavior?\r\n\r\nCan delete symlinks that form a loop.\r\n\r\n### What do you see instead?\r\n\r\nThis error\r\n```\r\nUncaught Error: ELOOP: too many symbolic links encountered, stat 'a'\r\n    at Object.statSync (node:fs:1596:3)\r\n    at __node_internal_ (node:internal/fs/utils:804:8)\r\n    at Object.rmSync (node:fs:1272:13) {\r\n  errno: -62,\r\n  syscall: 'stat',\r\n  code: 'ELOOP',\r\n  path: 'a'\r\n}\r\n```\r\n\r\n### Additional information\r\n\r\nThis `stat` call should probably be a `lstat`call.\r\nhttps://github.com/nodejs/node/blob/1b971883e0c86f37468e421ffe5f39b585782ad6/lib/internal/fs/utils.js#L772",
    "labels": [
      "confirmed-bug",
      "fs"
    ],
    "comments": 2,
    "issue_creation_time": "2022-11-10T10:04:42",
    "first_answer_author": "nathanael-ruf",
    "first_answer_body": "Workaround:\r\n\r\n```ts\r\ntry {\r\n    await rm(path, {...});\r\n} catch (e) {\r\n    if ('code' in e && e.code === 'ELOOP') {\r\n         await unlink(p);\r\n     }\r\n}\r\n```",
    "first_answer_creation_time": "2022-11-10T10:20:22",
    "was_closed_after_first_comment": false
  },
  {
    "title": "`Object.freeze(NODEJS_BUILTIN_GLOBAL_AND_ITS_PROTOTYPE)` may lead to crash",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/45336",
    "author_name": "loynoir",
    "question_body": "### Version\r\n\r\nv18.12.0\r\n\r\n### Platform\r\n\r\n_No response_\r\n\r\n### Subsystem\r\n\r\n_No response_\r\n\r\n### What steps will reproduce the bug?\r\nProtect from prototype pollution inspired by https://github.com/snyk-labs/nopp/blob/main/index.js\r\n\r\nreproduce.mjs\r\n```js\r\nimport globals from \"globals\";\r\n\r\nfor (const k of [...new Set(Object.values(globals).map(x => Object.keys(x)).flat())]) {\r\n  if (k in globalThis) {\r\n    const v = globalThis[k]\r\n    try { Object.freeze(v) } catch { }\r\n    try { Object.freeze(v.prototype) } catch { }\r\n  }\r\n}\r\n```\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\n_No response_\r\n\r\n### What is the expected behavior?\r\n\r\nNo error.\r\n\r\n### What do you see instead?\r\n\r\n```\r\n$ node\r\nWelcome to Node.js v18.12.0.\r\n> void await import('./reproduce.mjs')\r\nUncaught TypeError: Cannot delete property 'crypto' of #<Object>\r\n> crypto\r\nUncaught TypeError: Cannot delete property 'crypto' of #<Object>\r\n    at get (node:internal/modules/cjs/helpers:181:23)\r\n> globalThis.crypto\r\nUncaught TypeError: Cannot delete property 'crypto' of #<Object>\r\n    at get (node:internal/modules/cjs/helpers:181:23)\r\n```\r\n\r\n### Additional information\r\n\r\n_No response_",
    "labels": [
      "confirmed-bug"
    ],
    "comments": 3,
    "issue_creation_time": "2022-11-06T11:39:39",
    "first_answer_author": "aduh95",
    "first_answer_body": "I don't understand you are asking, are you:\r\n\r\n- reporting an instance where prototype pollution makes Node.js crash, in which case, can you share the content of `reproduce.mjs`? \r\n- Asking for Node.js to freeze the built-in objects, in which case, have you heard of [`--frozen-intrinsics`](https://nodejs.org/api/cli.html#--frozen-intrinsics)?",
    "first_answer_creation_time": "2022-11-06T16:32:20",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Heap snapshot crash on v14.x",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/42558",
    "author_name": "legendecas",
    "question_body": "### Version\r\n\r\nv14.19.1\r\n\r\n### Platform\r\n\r\nall\r\n\r\n### Subsystem\r\n\r\nv8 engine\r\n\r\n### What steps will reproduce the bug?\r\n\r\nRun the following script:\r\n\r\n```js\r\nfunction that() {\r\n  const p = new Promise(resolve => {\r\n    setTimeout(resolve, 1);\r\n  });\r\n  Promise.all([p]); // <= The key problem here, it created a PromiseAllResolveElementContext which crashes the HeapSnapshotGenerator\r\n}\r\nthat();\r\n\r\nconst v8 = require('v8');\r\nconst fs = require('fs');\r\nconst stream = fs.createWriteStream('./node.heapsnapshot');\r\nv8.getHeapSnapshot().pipe(stream);\r\n```\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\nAlways\r\n\r\n### What is the expected behavior?\r\n\r\nNo crashes.\r\n\r\n### What do you see instead?\r\n\r\nThe program crashed with SIGSEGV.\r\n\r\n![image](https://user-images.githubusercontent.com/8500303/161229903-7b716ae2-0533-44e0-adb4-c2fd577916fc.png)\r\n\r\n\r\n\r\n### Additional information\r\n\r\nNode.js v16.x doesn't have this problem. So I'd think we may need to find the v8 commit that fixed the problem and backport it to v14.x.",
    "labels": [
      "confirmed-bug",
      "v8 engine"
    ],
    "comments": 4,
    "issue_creation_time": "2022-04-01T08:56:05",
    "first_answer_author": "legendecas",
    "first_answer_body": "It seems we already have a series of heap snapshot crashes on v14.x. And their crash backtrace is similar to the one in the OP:\r\n\r\n- https://github.com/nodejs/node/issues/38961\r\n- https://github.com/nodejs/node/issues/39258\r\n- https://github.com/nodejs/node/issues/37878\r\n- ~~https://github.com/nodejs/node/issues/37069~~\r\n",
    "first_answer_creation_time": "2022-04-01T09:02:13",
    "was_closed_after_first_comment": false
  },
  {
    "title": "performance.timerify doesn't return wrapped function's return value",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/40623",
    "author_name": "acchou",
    "question_body": "### Version\n\nv16.13.0\n\n### Platform\n\nDarwin AC-MacBook-Pro.hsd1.ca.comcast.net 20.6.0 Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64 x86_64 i386 MacBookPro16,1 Darwin\n\n### Subsystem\n\nperformance\n\n### What steps will reproduce the bug?\n\n```\r\nconst perf = performance.timerify(function foo() {\r\n    let sum = 0;\r\n    for (let i = 0; i < 1000000; i++) {\r\n        sum += i;\r\n    }\r\n    return sum;\r\n});\r\n\r\nconst result = perf();\r\nconsole.log(result);\r\n```\n\n### How often does it reproduce? Is there a required condition?\n\nThis reproduces deterministically.\n\n### What is the expected behavior?\n\nA number should be printed\n\n### What do you see instead?\n\n`foo {}`\n\n### Additional information\n\n_No response_",
    "labels": [
      "confirmed-bug",
      "perf_hooks"
    ],
    "comments": 4,
    "issue_creation_time": "2021-10-27T05:05:33",
    "first_answer_author": "targos",
    "first_answer_body": "Seems like a bug to me indeed. The function is called as a constructor and it returns an instance of it instead of the true return value.",
    "first_answer_creation_time": "2021-10-27T07:06:53",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Invalid HTTP/2 origin set when servername is empty",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/39919",
    "author_name": "szmarczak",
    "question_body": "### Version\r\n\r\nv16.8.0\r\n\r\n### Platform\r\n\r\nLinux solus 5.13.12-193.current #1 SMP PREEMPT Fri Aug 20 14:21:44 UTC 2021 x86_64 GNU/Linux\r\n\r\n### Subsystem\r\n\r\nhttp2\r\n\r\n### What steps will reproduce the bug?\r\n\r\n```js\r\nconst http2 = require('http2');\r\n\r\nconst session = http2.connect('https://1.1.1.1', {servername: ''});\r\nsession.once('remoteSettings', () => {\r\n  console.log(session.originSet);\r\n\r\n  session.close();\r\n});\r\n```\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\nAlways.\r\n\r\n### What is the expected behavior?\r\n\r\n```\r\n[ 'https://1.1.1.1' ]\r\n```\r\n\r\n### What do you see instead?\r\n\r\n```\r\n[ 'https://false' ]\r\n```\r\n\r\n### Additional information\r\n\r\n```js\r\nconst http2 = require('http2');\r\n\r\nconst session = http2.connect('https://1.1.1.1');\r\nsession.once('remoteSettings', () => {\r\n  console.log(session.originSet);\r\n\r\n  session.close();\r\n});\r\n```\r\n\r\ngives a warning\r\n\r\n```\r\n(node:36333) [DEP0123] DeprecationWarning: Setting the TLS ServerName to an IP address is not permitted by RFC 6066. This will be ignored in a future version.\r\n(Use `node --trace-deprecation ...` to show where the warning was created)\r\n[ 'https://1.1.1.1' ]\r\n```\r\n\r\n/cc @ronag",
    "labels": [
      "confirmed-bug",
      "http2"
    ],
    "comments": 2,
    "issue_creation_time": "2021-08-27T22:29:47",
    "first_answer_author": "Narasimha1997",
    "first_answer_body": "@szmarczak \r\nAccording to the additional information you have provided, this is the intended behaviour, the server name is supposed to be a valid domain name in the SSL certificate. Using IP addresses in the SSL certificate is not encouraged.\r\n\r\nHowever, this is just an additional information. The original bug remains a bug. Maybe somewhere the empty `servername` property is being substituted without checking its value, which is resulting in `https://false`. Weird haha.",
    "first_answer_creation_time": "2021-08-29T13:10:44",
    "was_closed_after_first_comment": false
  },
  {
    "title": "segmentation fault with rsa-pss when pss params don't match the operation",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/39822",
    "author_name": "panva",
    "question_body": "### Version\r\n\r\nv16.7.0\r\n\r\n### Platform\r\n\r\nDarwin C02CX0K5MD6V 20.6.0 Darwin Kernel Version 20.6.0: Wed Jun 23 00:26:31 PDT 2021; root:xnu-7195.141.2~5/RELEASE_X86_64 x86_64\r\n\r\n### Subsystem\r\n\r\ncrypto\r\n\r\n### What steps will reproduce the bug?\r\n\r\n```js\r\nconst crypto = require('node:crypto')\r\n\r\nconst pk = `-----BEGIN PRIVATE KEY-----\r\nMIIE7wIBADA9BgkqhkiG9w0BAQowMKANMAsGCWCGSAFlAwQCAaEaMBgGCSqGSIb3\r\nDQEBCDALBglghkgBZQMEAgGiAwIBEASCBKkwggSlAgEAAoIBAQDfqNM4C+QtD73i\r\nILqOkqfV8ha3O19jpX8UujIk1Z72bbbuwEzh0+sBw0dD0N8CgkXnePOEEd6q7HNm\r\nbyCNqRpDK6NDvaCMDWgEaD/PlHkRntvKh81IXSMC5imjRfOcZIE/Gnw7h8tanab0\r\nn75+ODvLJrmEWUG2q79Im1mWMx7Spod+Np6XEY+7I7nAUUWivr35Yx5DeyxY8rxF\r\nGpsLtGsi7JNQO4aHyeBpj8tz0Fhv23uPywE2nGmPHfnkXWbrTcHGbzYBgEbeSH9K\r\nUkRwczqDXNOPhtfaEHEFTm0MoeKCnJe1VOjSywev77dV1KZfpVh3Kh0ZRQIe9YOV\r\nJhj4lMx3AgMBAAECggEBAIc+IgK5Bg/NfgeXvNdrjPuM+PlxeHvb3h1dfebSGd5v\r\nd3elZpgDug6F07kJO2Db/4M5mx7YY2m9swZU2j1u7MeDQqU6rDMkBCruEu/lmtPx\r\n2Hv+ZD6Gux4MqU7mhKmkCJds34Rr16aCwCsZ0WmnfViZoQKLqnXYIsG31pNBdDjx\r\ngke0HhX1LkA9yTVwlk8xOaHPqI4KfsFAyoiiHzyttGDexzb1PzmM0pybAPDMhpN/\r\nwXp2kLjyzmUmPe2Y2yva69WVWo7qS6joKjY75MQ1t20HYgEL69IApvCPu4CANfi9\r\nj3FAaV/+WrnhKCi6QyUi5PCI/+AJLsjNQmqTXIdBEoECgYEA+XsgFbeZ6+ZzEHa7\r\nHyFH6kiyBLd0q7w+ZLPsoOmEApDaP3yXSC7eJU7M/tPUPj8VQMMSK2D6fgmUDwhb\r\n3mEXFZxf67UlPFsFjweYcBihwy4r8QKBwury6dEbHPSUq4mXFJF5XRQdGqRGkr/F\r\n8OLZ0MwmHLUzczA67PxP/wF8TsECgYEA5YD4RxxJJYfAk1rFbqHRhNB8UeYVL+Wo\r\nwsRET1JeFg+S5grLGUga+KBB8Jn7Ahaip7MVE0Iud1cgaDi4WBEJsbJ6oJTlHJEg\r\nJq7QAaBafwjeSCSnaEsVBVNvriy2WF7uAomLSKmW6uSUOBBFFt4+G+akG56EfOPc\r\n7YKBfsf5ITcCgYBvjVZzX307tfeNTQmuibsWTxsKcN2CTNG5RZpw+PlGDG8KJDOg\r\n2xQJqoqPBzjH/H0MUC03qE1ZPf8uGZa6gL9JsnpRctYLfselhMfsl5b9JxAO3AgZ\r\nl+S2GAH/mH1BlmwvjjyuGehJmVrVE1r2sviiHCaOf5dZ0h8HCGrco1VqAQKBgQCf\r\nfYkMofOTSUvjG2mpAHuCOQCsSaDfsFIfSBXQqgUIf7ouc8HAyAM2VOh+NAPj56cR\r\ns7opsAxqkvnKc+BoEy8Rdl8RyWeO+qvFNicHelBph9gxeod8SvFIyjsKZ7gwoYf1\r\n63AIBxMCGeeHLodU5Q10hkv1hau8vv2BcPhdCstu8QKBgQDgO4Rr36Pa5rjbNbGN\r\nPsJqALjthTeU0yaU8hdC7Hc7B/T6npEIhw3s1eNq7e0eeDltqz7tDnY8qysazbQZ\r\np1cV5TJ8+gtwGmDoADBnU1NXqX4Squfml6OhNEucpTdjux7JdLVmmQFraOT2Eu5f\r\n9uuNtA+d8uhBEXhskuvEC552ug==\r\n-----END PRIVATE KEY-----`\r\n\r\ncrypto.sign('sha256', Buffer.from('hello'), pk) // works\r\ncrypto.sign('sha384', Buffer.from('hello'), pk) // segmentation fault\r\n```\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\nalways\r\n\r\n### What is the expected behavior?\r\n\r\n`crypto.sign` and `crypto.verify` would throw an appropriate error\r\n\r\n### What do you see instead?\r\n\r\nsegmentation fault\r\n\r\n### Additional information\r\n\r\nThe private key is taken directly from `/test/fixtures/keys/rsa_pss_private_2048_sha256_sha256_16.pem`",
    "labels": [
      "confirmed-bug",
      "crypto",
      "webcrypto"
    ],
    "comments": 4,
    "issue_creation_time": "2021-08-20T16:20:26",
    "first_answer_author": "panva",
    "first_answer_body": "SubtleCrypto.sign has the same issue\r\n\r\n```js\r\nconst crypto = require('node:crypto')\r\nconst { webcrypto: { subtle } } = crypto\r\n\r\nconst pk = Buffer.from(`MIIE7wIBADA9BgkqhkiG9w0BAQowMKANMAsGCWCGSAFlAwQCAaEaMBgGCSqGSIb3DQEBCDALBglghkgBZQMEAgGiAwIBEASCBKkwggSlAgEAAoIBAQDfqNM4C+QtD73iILqOkqfV8ha3O19jpX8UujIk1Z72bbbuwEzh0+sBw0dD0N8CgkXnePOEEd6q7HNmbyCNqRpDK6NDvaCMDWgEaD/PlHkRntvKh81IXSMC5imjRfOcZIE/Gnw7h8tanab0n75+ODvLJrmEWUG2q79Im1mWMx7Spod+Np6XEY+7I7nAUUWivr35Yx5DeyxY8rxFGpsLtGsi7JNQO4aHyeBpj8tz0Fhv23uPywE2nGmPHfnkXWbrTcHGbzYBgEbeSH9KUkRwczqDXNOPhtfaEHEFTm0MoeKCnJe1VOjSywev77dV1KZfpVh3Kh0ZRQIe9YOVJhj4lMx3AgMBAAECggEBAIc+IgK5Bg/NfgeXvNdrjPuM+PlxeHvb3h1dfebSGd5vd3elZpgDug6F07kJO2Db/4M5mx7YY2m9swZU2j1u7MeDQqU6rDMkBCruEu/lmtPx2Hv+ZD6Gux4MqU7mhKmkCJds34Rr16aCwCsZ0WmnfViZoQKLqnXYIsG31pNBdDjxgke0HhX1LkA9yTVwlk8xOaHPqI4KfsFAyoiiHzyttGDexzb1PzmM0pybAPDMhpN/wXp2kLjyzmUmPe2Y2yva69WVWo7qS6joKjY75MQ1t20HYgEL69IApvCPu4CANfi9j3FAaV/+WrnhKCi6QyUi5PCI/+AJLsjNQmqTXIdBEoECgYEA+XsgFbeZ6+ZzEHa7HyFH6kiyBLd0q7w+ZLPsoOmEApDaP3yXSC7eJU7M/tPUPj8VQMMSK2D6fgmUDwhb3mEXFZxf67UlPFsFjweYcBihwy4r8QKBwury6dEbHPSUq4mXFJF5XRQdGqRGkr/F8OLZ0MwmHLUzczA67PxP/wF8TsECgYEA5YD4RxxJJYfAk1rFbqHRhNB8UeYVL+WowsRET1JeFg+S5grLGUga+KBB8Jn7Ahaip7MVE0Iud1cgaDi4WBEJsbJ6oJTlHJEgJq7QAaBafwjeSCSnaEsVBVNvriy2WF7uAomLSKmW6uSUOBBFFt4+G+akG56EfOPc7YKBfsf5ITcCgYBvjVZzX307tfeNTQmuibsWTxsKcN2CTNG5RZpw+PlGDG8KJDOg2xQJqoqPBzjH/H0MUC03qE1ZPf8uGZa6gL9JsnpRctYLfselhMfsl5b9JxAO3AgZl+S2GAH/mH1BlmwvjjyuGehJmVrVE1r2sviiHCaOf5dZ0h8HCGrco1VqAQKBgQCffYkMofOTSUvjG2mpAHuCOQCsSaDfsFIfSBXQqgUIf7ouc8HAyAM2VOh+NAPj56cRs7opsAxqkvnKc+BoEy8Rdl8RyWeO+qvFNicHelBph9gxeod8SvFIyjsKZ7gwoYf163AIBxMCGeeHLodU5Q10hkv1hau8vv2BcPhdCstu8QKBgQDgO4Rr36Pa5rjbNbGNPsJqALjthTeU0yaU8hdC7Hc7B/T6npEIhw3s1eNq7e0eeDltqz7tDnY8qysazbQZp1cV5TJ8+gtwGmDoADBnU1NXqX4Squfml6OhNEucpTdjux7JdLVmmQFraOT2Eu5f9uuNtA+d8uhBEXhskuvEC552ug==`, 'base64')\r\n\r\nsubtle.importKey('pkcs8', Buffer.from(pk), { name: 'RSA-PSS', hash: { name: `SHA-384` } }, true, ['sign']).then((pk) => {\r\n  const alg = {\r\n    hash: { name: 'SHA-384' },\r\n    name: 'RSA-PSS',\r\n    saltLength: 384 >> 3,\r\n  }\r\n  subtle.sign(alg, pk, Buffer.from('foo')).then(console.log)\r\n})\r\n```",
    "first_answer_creation_time": "2021-08-20T16:27:06",
    "was_closed_after_first_comment": false
  },
  {
    "title": "gunzipSync DOA in Node 14.15.2",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/36615",
    "author_name": "ledbit",
    "question_body": "* **Version**: 14.15.2\r\n* **Platform**: Linux lbvm 5.4.0-56-generic #62~18.04.1-Ubuntu SMP Tue Nov 24 10:07:50 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n* **Subsystem**:\r\n\r\n### What steps will reproduce the bug?\r\nAny code using `gunzipSync` will crash\r\n\r\n```\r\n$ cat gunzip.js \r\nconst { gunzipSync } = require('zlib');\r\nconsole.log(gunzipSync('fooobar'));\r\n\r\n$ node -v\r\nv14.15.2\r\n\r\n$ node gunzip.js \r\ninternal/streams/readable.js:193\r\n  const isDuplex = this instanceof Stream.Duplex;\r\n                        ^\r\n\r\nTypeError: Right-hand side of 'instanceof' is not an object\r\n    at Gunzip.Readable (internal/streams/readable.js:193:25)\r\n    at Gunzip.Duplex (internal/streams/duplex.js:56:12)\r\n    at Gunzip.Transform (internal/streams/transform.js:117:10)\r\n    at Gunzip.ZlibBase (zlib.js:271:13)\r\n    at Gunzip.Zlib (zlib.js:669:12)\r\n    at new Gunzip (zlib.js:732:8)\r\n    at syncBufferWrapper (zlib.js:765:29)\r\n    at Object.<anonymous> (/home/ledion/workspaces/js2bin/gunzip.js:2:13)\r\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\r\n```\r\n\r\nThe regression seems to have been introduced in 14.15.2 and is present in 14.15.3.\r\n\r\nMaybe related to #35239? cc @mcollina \r\n",
    "labels": [
      "confirmed-bug",
      "zlib"
    ],
    "comments": 2,
    "issue_creation_time": "2020-12-24T05:01:02",
    "first_answer_author": "ledbit",
    "first_answer_body": "Quick update. The following code seems to work - ie it seems like `stream` is not correctly initialized\r\n\r\n```\r\n$ cat gunzip.js \r\nconst stream = require('stream');   // <==== adding this makes things work\r\nconst { gunzipSync } = require('zlib');\r\nconsole.log(gunzipSync('fooobar'))\r\n```",
    "first_answer_creation_time": "2020-12-24T05:14:47",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Console output for class instance __proto__ seems wrong",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/33419",
    "author_name": "hashseed",
    "question_body": "Consider following code\r\n```\r\nclass A {\r\n    getA() { return 0; }\r\n    constructor() {}\r\n}\r\nclass B extends A {\r\n    getB() { return 0; }\r\n    constructor() { super(); }\r\n}\r\nconsole.log((new A()));\r\nconsole.log((new A()).__proto__);\r\nconsole.log((new A()).__proto__ instanceof A);\r\nconsole.log((new A()).__proto__ instanceof Object);\r\nconsole.log((new B()));\r\nconsole.log((new B()).__proto__);\r\nconsole.log((new B()).__proto__ instanceof B);\r\nconsole.log((new B()).__proto__ instanceof A);\r\n```\r\n\r\nNode 14 produces:\r\n\r\n```\r\nA {}\r\nA {}\r\nfalse\r\ntrue\r\nB {}\r\nB {}\r\nfalse\r\ntrue\r\n```\r\n\r\nThis is wrong since `(new B()).__proto__` is an instance of `A`. I guess the confusing part is that `(new B()).__proto__.constructor` is `class B` (which is because of https://tc39.es/ecma262/#sec-makeconstructor)\r\n\r\nFor reference, Chrome DevTools produces:\r\n\r\n```\r\nA\u00a0{}\r\n{constructor: \u0192, getA: \u0192}\r\nfalse\r\ntrue\r\nB\u00a0{}\r\nA\u00a0{constructor: \u0192, getB: \u0192}\r\nfalse\r\ntrue\r\n```",
    "labels": [
      "confirmed-bug",
      "util"
    ],
    "comments": 1,
    "issue_creation_time": "2020-05-15T08:57:56",
    "first_answer_author": "BridgeAR",
    "first_answer_body": "@hashseed do you have a suggestion how to differentiate these easily? We currently check for the constructor and that does not seem to be sufficient. Since you might already know how to improve the check, this could safe me some time digging into this.",
    "first_answer_creation_time": "2020-05-16T12:57:23",
    "was_closed_after_first_comment": true
  },
  {
    "title": "package self-reference works without a flag in node v12.16",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/31754",
    "author_name": "ljharb",
    "question_body": "Repro: clone https://github.com/ljharb/has-package-exports\r\n\r\nIt has a dev dep of `\"has-package-exports\": \"file:.\"`, so that in every node version, i can `require('has-package-exports')` from within the package, and it works.\r\n\r\nIn node v13.6 and v12.15, `node test` passes without issuing `(node:96292) ExperimentalWarning: Package name self resolution is an experimental feature. This feature could change at any time` as a warning.\r\n\r\nIn node v13.7, the warning is correctly issued, and the local dev dep is byassed.\r\n\r\nHowever, in node v12.16, without passing any flags, the warning is issued and the local dev dep is bypassed. v12.16 and v12.15 should behave identically with respect to this feature, regardless of the presence of \"exports\" in package.json.\r\n\r\ncc @nodejs/modules-active-members ",
    "labels": [
      "confirmed-bug",
      "module",
      "esm"
    ],
    "comments": 3,
    "issue_creation_time": "2020-02-12T18:40:01",
    "first_answer_author": "guybedford",
    "first_answer_body": "This is definitely a bug, unfortunately due to the nature of the backporting process between the flagged and unflagged implementations. The fix would be to include an explicit `if (!experimentalModules) return` in the first line of the `trySelf` function in lib/internal/modules/cjs/loader.js for the 12.x branch.",
    "first_answer_creation_time": "2020-02-12T18:53:57",
    "was_closed_after_first_comment": false
  },
  {
    "title": "unhandledRejection fails to occur if `.catch()` is used on the last promise",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/30953",
    "author_name": "coreyfarrell",
    "question_body": "* **Version**: 12.13.1 / 13.3.0\r\n* **Platform**: `Linux lt2.cfware.com 5.3.11-200.fc30.x86_64 #1 SMP Tue Nov 12 19:25:25 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\nTake the following script:\r\n```js\r\n'use strict';\r\n\r\nPromise.reject('rejection 1');\r\nPromise.reject('rejection 2').catch(() => {});\r\n```\r\n\r\nThe expected result is an unhandledRejection for `rejection 1`.  This script produces no warnings on node.js 12 or 13.",
    "labels": [
      "confirmed-bug",
      "promises"
    ],
    "comments": 2,
    "issue_creation_time": "2019-12-13T22:35:17",
    "first_answer_author": "addaleax",
    "first_answer_body": "Something like this might help?\r\n\r\n```diff\r\ndiff --git a/lib/internal/process/promises.js b/lib/internal/process/promises.js\r\nindex 35ebb39115f3..7cd40f96cc98 100644\r\n--- a/lib/internal/process/promises.js\r\n+++ b/lib/internal/process/promises.js\r\n@@ -125,7 +125,8 @@ function handledRejection(promise) {\r\n       return;\r\n     }\r\n   }\r\n-  setHasRejectionToWarn(false);\r\n+  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\r\n+    setHasRejectionToWarn(false);\r\n }\r\n \r\n const unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\r\n```\r\n\r\n@nodejs/promises-debugging @joyeecheung (I think this might have come from bf566718b29a6fae8cef8d0fecd7e77948726d5a)",
    "first_answer_creation_time": "2019-12-13T22:48:43",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Assertion failed in napi_get_last_error_info for experimental N-API",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/30487",
    "author_name": "dmitryash",
    "question_body": "* **Version**: v10.16.3\r\n* **Platform**: Linux\r\n\r\nIf NODE_EXPERIMENTAL is defined then `napi_get_last_error_info()` asserts due to the fact that it ignores experimental error codes (e.g. `napi_bigint_expected`):\r\n\r\n```\r\n../src/node_api.cc:1412:napi_status napi_get_last_error_info(napi_env, const napi_extended_error_info**):\r\nAssertion `(env->last_error.error_code) <= (napi_callback_scope_mismatch)' failed.\r\n```\r\n\r\nDocumentation does not say clearly whether nodejs should be recompiled with NODE_EXPERIMENTAL or not.",
    "labels": [
      "confirmed-bug",
      "node-api"
    ],
    "comments": 2,
    "issue_creation_time": "2019-11-14T13:09:22",
    "first_answer_author": "legendecas",
    "first_answer_body": "https://github.com/nodejs/node/pull/28702 should fix this issue. It should be backported to v10.x and v8.x.\r\n\r\n> Documentation does not say clearly whether nodejs should be recompiled with NODE_EXPERIMENTAL or not.\r\n\r\nNODE_EXPERIMENTAL doesn't affect how Node.js N-API behaves, it's just a switch turning experimental APIs ON so that we could use these experimental API in our addons.",
    "first_answer_creation_time": "2019-11-18T14:35:35",
    "was_closed_after_first_comment": false
  },
  {
    "title": "12.9.0 is it a bug?",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/29243",
    "author_name": "phantom9999",
    "question_body": "version: 12.9.0\r\ngcc: 8.2\r\n\r\nmessage:\r\n```\r\n#\r\n# Fatal error in , line 0\r\n# Check failed: (isolate_->embedded_blob()) != nullptr.\r\n#\r\n#\r\n#\r\n#FailureMessage Object: 0x7fff837402c0  (core dumped)\r\n```\r\n\r\n",
    "labels": [
      "confirmed-bug",
      "build",
      "v8 engine"
    ],
    "comments": 4,
    "issue_creation_time": "2019-08-21T12:22:59",
    "first_answer_author": "addaleax",
    "first_answer_body": "What flags, if any, did you pass to `./configure`? Does this happen when running Node.js, while building it, or only with specific scripts?",
    "first_answer_creation_time": "2019-08-21T12:30:41",
    "was_closed_after_first_comment": false
  },
  {
    "title": "\"pure virtual method called\" when creating a heap snapshot",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/28786",
    "author_name": "laino",
    "question_body": "* **Version**: v11.15.0\r\n* **Platform**: Linux\r\n\r\nRun the following script with ``node --inspect script.js``, connect a debugger with Google Chrome and instruct it to do a heap snapshot.\r\n\r\n**Edit:** See my comment below for a better snippet.\r\n\r\n```js\r\nfunction memoryLeak() {\r\n    return new Promise(() => {});\r\n}\r\n\r\nfunction loop() {\r\n    for (let i = 0; i < 10000; i++) {\r\n        memoryLeak();\r\n    }\r\n\r\n    setTimeout(loop, 0);\r\n}\r\n\r\nloop();\r\n```\r\n\r\nRoughly half of the time node will crash with \"pure virtual method called\".\r\n\r\nThat code actually causes a [memory leak](https://github.com/nodejs/node/issues/28787), but it will likely be annoying to debug if this isn't fixed first.",
    "labels": [
      "confirmed-bug",
      "async_hooks"
    ],
    "comments": 2,
    "issue_creation_time": "2019-07-20T19:38:12",
    "first_answer_author": "laino",
    "first_answer_body": "This code crashes 100% of the time instead of 50% of the time:\r\n\r\n```js\r\nfunction memoryLeak() {\r\n    return new Promise(() => {});\r\n}\r\n\r\nasync function loop() {\r\n    for (let i = 0; i < 10000; i++) {\r\n        memoryLeak();\r\n    }\r\n}\r\n\r\nasync function run() {\r\n    while (true) {\r\n        await loop();\r\n    }\r\n}\r\n\r\nrun();\r\n```",
    "first_answer_creation_time": "2019-07-20T19:59:11",
    "was_closed_after_first_comment": false
  },
  {
    "title": "REPL complete function swallows errors",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/28546",
    "author_name": "BridgeAR",
    "question_body": "@estrada9166 recently brought up that `test/parallel/test-repl-save-load.js` is not working as it should. It should fail as is it but the errors are swallowed due to calling `complete`.\r\n\r\nIt seems like the domain does not propagate the error properly and it's silently swallowed. Adding an error listener to the active domain in the complete function that throws the error fixes the problem but it causes some side effects in other cases. We should only add the listener to the domains that do not handle the error properly at the moment.\r\n\r\nPing @Trott since you fixed some of these cases before.",
    "labels": [
      "confirmed-bug",
      "repl"
    ],
    "comments": 1,
    "issue_creation_time": "2019-07-05T01:41:40",
    "first_answer_author": "BridgeAR",
    "first_answer_body": "It turned out that the test file swallowed the errors, not the complete function. There where multiple bugs in the test itself and also two small issues in the REPL's `.save` and `.load` function that are fixed by #28608.",
    "first_answer_creation_time": "2019-07-10T11:03:27",
    "was_closed_after_first_comment": true
  },
  {
    "title": "`cat <(node -v)` never exits after >= 12.5.0",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/28530",
    "author_name": "JounQin",
    "question_body": "<!--\r\nThank you for reporting a possible bug in Node.js.\r\n\r\nPlease fill in as much of the template below as you can.\r\n\r\nVersion: output of `node -v`\r\nPlatform: output of `uname -a` (UNIX), or version and 32 or 64-bit (Windows)\r\nSubsystem: if known, please specify the affected core module name\r\n\r\nIf possible, please provide code that demonstrates the problem, keeping it as\r\nsimple and free of external dependencies as you can.\r\n-->\r\n\r\n* **Version**: v12.5.0 and greater\r\n* **Platform**: Darwin MacBook-Pro.local 18.6.0 Darwin Kernel Version 18.6.0: Thu Apr 25 23:16:27 PDT 2019; root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64\r\n* **Subsystem**:\r\n\r\n<!-- Please provide more details below this comment. -->\r\nSimply run `cat <(node -v)`\r\nrelated: https://github.com/robbyrussell/oh-my-zsh/issues/7972",
    "labels": [
      "confirmed-bug"
    ],
    "comments": 4,
    "issue_creation_time": "2019-07-04T05:37:29",
    "first_answer_author": "bnoordhuis",
    "first_answer_body": "I can reproduce. It's caused by #24260 except not really - the `tcsetattr()` call (which libc turns into an `ioctl()`) simply hangs when node tries to restore the state for fd 0, stdin.\r\n\r\nI can't reproduce on Linux so this is with 99% certainty a bug in macOS's implementation of `tcsetattr()`. TBD if and how to work around that.\r\n\r\nedit: libc turns `tcsetattr(TCSANOW)` into `ioctl(TIOCSETA)` so this is most likely a kernel bug, not a libc bug.",
    "first_answer_creation_time": "2019-07-04T07:36:08",
    "was_closed_after_first_comment": false
  },
  {
    "title": "REPL: `{} instanceof Object === false` with nodejs 11 and nodejs 12 ",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/27859",
    "author_name": "iam4x",
    "question_body": "With the given file:\r\n\r\nconsole.js\r\n```js\r\nconst repl = require('repl');\r\nrepl.start('> ');\r\n```\r\n\r\nThen running in nodejs 11 & 12:\r\n\r\n```shell\r\n$ node console.js\r\n\r\n> console.log({} instanceof Object)\r\nfalse\r\n```\r\n\r\nBut running with nodejs 10:\r\n\r\n```shell\r\n$ node console.js\r\n\r\n> console.log({} instanceof Object)\r\ntrue\r\n```\r\n\r\nI am expecting to be `true` in all cases, did I miss something?",
    "labels": [
      "confirmed-bug",
      "repl"
    ],
    "comments": 4,
    "issue_creation_time": "2019-05-24T16:54:35",
    "first_answer_author": "bnoordhuis",
    "first_answer_body": "It's caused by this code:\r\nhttps://github.com/nodejs/node/blob/5b8df5e956680dc1a38b631e53f5e70a905fd917/lib/repl.js#L877-L880\r\nThat copies the `Object` from the main context to the REPL context.\r\n\r\nI'm not completely sure what commit introduced this but cc @BridgeAR since you were the last one to touch that code. :-)\r\n\r\nWorkaround until it's fixed: `repl.start({ prompt: '> ', useGlobal: true })`",
    "first_answer_creation_time": "2019-05-24T19:22:12",
    "was_closed_after_first_comment": false
  },
  {
    "title": "util-inl.h missing",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/27803",
    "author_name": "marudor",
    "question_body": "* **Version**: v12.3.0\r\n* **Platform**: Darwin Kernel Version 18.6.0: Thu Apr 25 23:16:27 PDT 2019; root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64\r\n* **Subsystem**:\r\n\r\nnode.h:107 now includes util-inl.h. That file is not shipped by node-gyp though.\r\n\r\n12.2 did not include this file.",
    "labels": [
      "confirmed-bug",
      "c++",
      "addons"
    ],
    "comments": 4,
    "issue_creation_time": "2019-05-21T19:30:41",
    "first_answer_author": "sam-github",
    "first_answer_body": "I thought it had previously been indirectly included into our API, so added it in https://github.com/nodejs/node/pull/27631 when it was removed from other core headers. I was mistaken, sorry.",
    "first_answer_creation_time": "2019-05-21T19:57:00",
    "was_closed_after_first_comment": false
  },
  {
    "title": "REPL: Node 12.0.0 unable to parse class properties ",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/27391",
    "author_name": "AlvaroBernalG",
    "question_body": "<!--\r\nThank you for reporting a possible bug in Node.js.\r\n\r\nPlease fill in as much of the template below as you can.\r\n\r\nVersion: output of `node -v`\r\nPlatform: output of `uname -a` (UNIX), or version and 32 or 64-bit (Windows)\r\nSubsystem: if known, please specify the affected core module name\r\n\r\nIf possible, please provide code that demonstrates the problem, keeping it as\r\nsimple and free of external dependencies as you can.\r\n-->\r\n\r\n* **Version**: v12.0.0\r\n* **Platform**: Darwin XX.z 18.5.0 Darwin Kernel Version 18.5.0: Mon Mar 11 20:40:32 PDT 2019; root:xnu-4903.251.3~3/RELEASE_X86_64 x86_64\r\n\r\n\r\n<!-- Please provide more details below this comment. -->\r\n\r\n<img width=\"363\" alt=\"Screenshot 2019-04-24 at 19 50 35\" src=\"https://user-images.githubusercontent.com/12004383/56685604-3e876b80-66ca-11e9-9963-287f522cd788.png\">\r\n<img width=\"325\" alt=\"Screenshot 2019-04-24 at 19 52 05\" src=\"https://user-images.githubusercontent.com/12004383/56685726-80b0ad00-66ca-11e9-802a-4fbb1472703a.png\">\r\n",
    "labels": [
      "confirmed-bug",
      "repl"
    ],
    "comments": 4,
    "issue_creation_time": "2019-04-24T18:53:36",
    "first_answer_author": "devsnek",
    "first_answer_body": "unfortunately we parse the repl input with acorn before actually running it, so its not a 1:1 match to what node actually supports.\r\n\r\nI'm not entirely sure what to do about this.",
    "first_answer_creation_time": "2019-04-24T19:07:34",
    "was_closed_after_first_comment": false
  },
  {
    "title": "[8.x] assert.rejects fails with confusing error message",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/27185",
    "author_name": "gcampax",
    "question_body": "* **Version**: latest 8.* series\r\n* **Platform**: not relevant\r\n* **Subsystem**: assert\r\n\r\nThe API of `assert.rejects` is different between the 10.* series and the 8.* series, because the backported 8.* version does not accept a `Promise` as first argument, it requires a `Function` that returns a rejected promise.\r\nIf you misuse the API, though, you get a confusing error message:\r\n> TypeError: errors.ERR_INVALID_ARG_TYPE is not a constructor\r\n>    at waitForActual (assert.js:723:11)\r\n>    at Function.rejects (assert.js:799:31)\r\n>\r\n\r\nThis is because at https://github.com/nodejs/node/blob/045868db973a1dac3c2eb55cdcb7134a42b124cc/lib/assert.js#L723 the throw line is incorrect.\r\n",
    "labels": [
      "confirmed-bug",
      "assert"
    ],
    "comments": 2,
    "issue_creation_time": "2019-04-11T02:40:28",
    "first_answer_author": "BridgeAR",
    "first_answer_body": "Hm, yes. In Node.js v8 we do not have the new Error system and we did not see that while backporting.\r\n\r\nI'll try to get a fix into v8.16.0 (https://github.com/nodejs/node/pull/26933).",
    "first_answer_creation_time": "2019-04-11T02:57:54",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Buffer.alloc(): `A TypeError will be thrown if size is not a number.`",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/26151",
    "author_name": "jorangreef",
    "question_body": "`Buffer.alloc(size)` and friends (`allocUnsafe()`, `allocUnsafeSlow()`) promise that:\r\n\r\n```\r\nA TypeError will be thrown if size is not a number.\r\n```\r\n\r\nHowever, this contract is broken when `size` is `NaN`:\r\n\r\n```javascript\r\n> Buffer.alloc(123+undefined)\r\n<Buffer >\r\n```\r\n\r\nThe reason is that `assertSize()`, which validates the `size` argument, does the check using `typeof size !== 'number'`, however:\r\n\r\n```javascript\r\n> typeof (123+undefined)\r\n'number'\r\n```\r\n\r\n`Number.isInteger()` would be better:\r\n\r\n```javascript\r\n> Number.isInteger(123+undefined)\r\nfalse\r\n```\r\n\r\nAlternatively, a faster test for `NaN` would be swapping the range check around to throw for anything not in range (as opposed to throw for anything before 0 or after `kMaxLength` which is what it currently does):\r\n\r\n```javascript\r\nif (!(size >= 0 && size <= kMaxLength)) {\r\n  err = new ERR_INVALID_OPT_VALUE.RangeError('size', size);\r\n}\r\n```\r\n\r\nThe above snippet catches `NaN`.",
    "labels": [
      "confirmed-bug",
      "buffer"
    ],
    "comments": 4,
    "issue_creation_time": "2019-02-16T15:41:37",
    "first_answer_author": "jorangreef",
    "first_answer_body": "The reason the `NaN` check is important, is that a user might do this:\r\n\r\n```javascript\r\nThirdPartyModule = { HEADERSIZE: 64 };\r\n\r\nlet size = 1000; // Pretend the user has validated this already.\r\nBuffer.alloc(ThirdPartyModule.HEADER_SIZE + size);\r\n```\r\n\r\nAnd then pass this buffer to a native addon, assuming `size` has been validated and that `HEADER_SIZE` does not need to be validated since it's a third-party module constant.\r\n\r\nSince the user miss-typed `ThirdPartyModule.HEADERSIZE`, it's `undefined` which when added to `size` gives `NaN`.\r\n\r\nIf the native addon then fails to check the `buffer.length` correctly, it's a buffer overflow waiting to happen.\r\n\r\nGranted, this is alot of \"ifs\", but `NaN` is not an integer and the broken contract of `Buffer.alloc()` is dangerous.",
    "first_answer_creation_time": "2019-02-16T16:03:10",
    "was_closed_after_first_comment": false
  },
  {
    "title": "TypeError: clazz is not a constructor on \u2265 v11.6.0",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/25451",
    "author_name": "nakhodkin",
    "question_body": "I'm experiencing an issue with a following piece of code\r\n\r\n<img width=\"1147\" alt=\"screen shot 2019-01-11 at 10 27 41 pm\" src=\"https://user-images.githubusercontent.com/14351638/51058947-27c57900-15f3-11e9-839d-33dd8fc4d49d.png\">\r\n\r\n```javascript\r\n'use strict';\r\n\r\nconst people = [\r\n  ['John', 19, 'm'],\r\n  ['Valentine', 28, 'f'],\r\n  ['Christina', 25, 'f']\r\n];\r\n\r\nclass Person {\r\n  get name() {\r\n    return this[0];\r\n  }\r\n  \r\n  get age() {\r\n    return this[1];\r\n  }\r\n  \r\n  get sex() {\r\n    return this[2];\r\n  }\r\n}\r\n\r\npeople.forEach(person => Object.setPrototypeOf(person, Person.prototype));\r\n\r\nconst query = person => person.age > 25;\r\n\r\npeople.filter(query);\r\n```\r\nYou can see a more detailed information about the stacktrace right below\r\n<img width=\"822\" alt=\"screen shot 2019-01-11 at 10 49 55 pm\" src=\"https://user-images.githubusercontent.com/14351638/51058973-40ce2a00-15f3-11e9-90d0-04b38c5012c5.png\">\r\n\r\n* **Node: v11.6.0**:\r\n* **Platform: macOS Mojave Version 10.14.2**:\r\n",
    "labels": [
      "confirmed-bug",
      "util"
    ],
    "comments": 4,
    "issue_creation_time": "2019-01-11T20:55:03",
    "first_answer_author": "mscdex",
    "first_answer_body": "There probably is a bug here with `util.inspect()`, but the issue here is that you overwriting each array's prototype (`Array.prototype`) with `Person.prototype`, so when you try to access the getter, the indexed properties no longer work because those are implemented by `Array.prototype`.",
    "first_answer_creation_time": "2019-01-11T21:17:12",
    "was_closed_after_first_comment": false
  },
  {
    "title": "generateKeyPairSync doesn't return KeyObject",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/25322",
    "author_name": "panva",
    "question_body": "* **Version**: v11.6.0\r\n* **Platform**: macOS Mojave (10.14.2) Darwin C02TT3JQHTD6 18.2.0 Darwin Kernel Version 18.2.0: Mon Nov 12 20:24:46 PST 2018; root:xnu-4903.231.4~2/RELEASE_X86_64 x86_64\r\n\r\nFrom `crypto.generateKeyPair` documentation\r\n> If a `publicKeyEncoding` or `privateKeyEncoding` was specified, this function behaves as if `keyObject.export()` had been called on its result. **Otherwise, the respective part of the key is returned as a `KeyObject`.**\r\n\r\nThis documentation part is missing from `crypto.generateKeyPairSync` but you can still omit the encoding objects, then a simple empty object `{}` is returned instead of an expected `KeyObject`.\r\n\r\n/cc @tniessen\r\n\r\nExamples:\r\n```js\r\nconst { generateKeyPairSync } = require('crypto')\r\n\r\nconsole.log('generateKeyPairSync result', generateKeyPairSync('rsa', { modulusLength: 2048 }))\r\n// => generateKeyPairSync result { publicKey: {}, privateKey: {} }\r\n```",
    "labels": [
      "confirmed-bug",
      "crypto"
    ],
    "comments": 4,
    "issue_creation_time": "2019-01-03T11:13:28",
    "first_answer_author": "tniessen",
    "first_answer_body": "Thanks for reporting this! The problem is that the native (C++) key object is being returned, not the JavaScript key object, that's why the object appears to be empty.\r\n\r\n```js\r\n> const { publicKey, privateKey } = crypto.generateKeyPairSync('rsa', { modulusLength: 2048 })\r\nundefined\r\n> publicKey.getAsymmetricKeyType()\r\n'rsa'\r\n> publicKey.getSymmetricKeySize()\r\nC:\\WINDOWS\\system32\\cmd.exe - node[6416]: src\\node_crypto.cc:3350: Assertion `(key_type_) == (kKeyTypeSecret)' failed.\r\n 1: 00007FF7F0EC3FDA v8::internal::GCIdleTimeHandler::GCIdleTimeHandler+4714\r\n 2: 00007FF7F0E68AD6 uv_loop_fork+80918\r\n 3: 00007FF7F0E68B8F uv_loop_fork+81103\r\n 4: 00007FF7F0D8682F std::vector<v8::CpuProfileDeoptFrame,std::allocator<v8::CpuProfileDeoptFrame> >::vector<v8::CpuProfileDeoptFrame,std::allocator<v8::CpuProfileDeoptFrame> >+102815\r\n 5: 00007FF7F12D20BE v8::internal::ZoneVector<v8::internal::compiler::MoveOperands * __ptr64>::ZoneVector<v8::internal::compiler::MoveOperands * __ptr64>+59870\r\n 6: 00007FF7F12D3620 v8::internal::ZoneVector<v8::internal::compiler::MoveOperands * __ptr64>::ZoneVector<v8::internal::compiler::MoveOperands * __ptr64>+65344\r\n 7: 00007FF7F12D25B9 v8::internal::ZoneVector<v8::internal::compiler::MoveOperands * __ptr64>::ZoneVector<v8::internal::compiler::MoveOperands * __ptr64>+61145\r\n 8: 00007FF7F12D249B v8::internal::ZoneVector<v8::internal::compiler::MoveOperands * __ptr64>::ZoneVector<v8::internal::compiler::MoveOperands * __ptr64>+60859\r\n 9: 00000038CF650361\r\n```",
    "first_answer_creation_time": "2019-01-03T14:04:33",
    "was_closed_after_first_comment": false
  },
  {
    "title": "fs.promises.readFile cannot read /proc/stat, produces empty result",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/21331",
    "author_name": "constb",
    "question_body": "* **Version**: 10.4.1\r\n* **Platform**: Amazon Linux 2, kernel 4.14 x64\r\n* **Subsystem**: fs, experimental promises api\r\n\r\n```js\r\nconst fs = require('fs')\r\nfs.promises.readFile('/proc/stat', { encoding: 'utf8' }).then(r => console.log(r.length)) // => 0\r\nfs.readFile('/proc/stat', { encoding: 'utf8' }, (e, r) => console.log(r.length)) // => 2347\r\nconsole.log(fs.readFileSync('/proc/stat', { encoding: 'utf8' }).length) // => 2347\r\n```\r\n\r\nI'm not sure how promises API differs from classic one, but this behaviour is surprising, and I can't find anything in the docs that would explain what I am doing wrong\u2026",
    "labels": [
      "confirmed-bug",
      "fs"
    ],
    "comments": 2,
    "issue_creation_time": "2018-06-14T17:21:34",
    "first_answer_author": "fanyer",
    "first_answer_body": "same with me, the `fs.promises` interface return 0 when readFile `/proc/stat` .\r\n\r\n- Version: 10.4.1\r\n- Platform: Debian 9.4 linux 4.9.0.6  x64",
    "first_answer_creation_time": "2018-06-21T09:26:23",
    "was_closed_after_first_comment": false
  },
  {
    "title": "http2: assertion failed",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/21008",
    "author_name": "ronag",
    "question_body": "Node 10.2.1, OSX\r\n\r\n```\r\n/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node[47055]: ../src/node_http2.cc:1819:void node::http2::Http2Stream::OnTrailers(): Assertion `!this->IsDestroyed()' failed.\r\n 1: node::Abort() [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n 2: node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*, node::async_context) [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n 3: node::http2::Http2Stream::OnTrailers() [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n 4: node::http2::Http2Stream::Provider::Stream::OnRead(nghttp2_session*, int, unsigned char*, unsigned long, unsigned int*, nghttp2_data_source*, void*) [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n 5: nghttp2_session_pack_data [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n 6: nghttp2_session_mem_send_internal [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n 7: nghttp2_session_mem_send [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n 8: node::http2::Http2Session::SendPendingData() [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n 9: node::http2::Http2Session::ClearOutgoing(int) [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n10: node::http2::Http2Session::OnStreamAfterWrite(node::WriteWrap*, int) [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n11: node::WriteWrap::OnDone(int) [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n12: node::Environment::RunAndClearNativeImmediates() [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n13: node::Environment::CheckImmediate(uv_check_s*) [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n14: uv__run_check [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n15: uv_run [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n16: node::Start(v8::Isolate*, node::IsolateData*, int, char const* const*, int, char const* const*) [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n17: node::Start(uv_loop_s*, int, char const* const*, int, char const* const*) [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n18: node::Start(int, char**) [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n19: start [/Users/ronagy/.nvm/versions/node/v10.2.1/bin/node]\r\n```",
    "labels": [
      "confirmed-bug",
      "http2"
    ],
    "comments": 2,
    "issue_creation_time": "2018-05-28T21:41:20",
    "first_answer_author": "apapirovski",
    "first_answer_body": "Thanks for reporting @ronag. I think the CHECK that is failing here is actually incorrect as things are. I think we need to avoid calling `OnTrailers` if the stream is already destroyed because it's possible for OnRead to trigger after that's already the case.",
    "first_answer_creation_time": "2018-05-29T16:06:59",
    "was_closed_after_first_comment": false
  },
  {
    "title": "http2: Edge and IE broken response",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/20850",
    "author_name": "webcarrot",
    "question_body": "* **Version**: v10.1.0\r\n* **Platform**: Linux develop 4.9.0-6-amd64 #1 SMP Debian 4.9.88-1+deb9u1 (2018-05-07) x86_64 GNU/Linux\r\n* **Subsystem**: http2\r\n\r\nAfter upgrade nodejs from v9.11.1 to v10.1.0 Edge and IE not handle properly response from server or response is somehow broken.\r\n\r\nSimple server:\r\n\r\n```js\r\nconst http2 = require('http2');\r\n\r\nconst server = http2.createSecureServer({\r\n        allowHTTP1: true,\r\n        cert: \"some cert\",\r\n        key: \"some key\"\r\n}, (req, res) => {\r\n   console.log(\"message\");\r\n   res.writeHead(200);\r\n   res.end(\"ok\");\r\n   // or \"hack\" setTimeout(()=>res.end(\"ok\"), 100); // to make Edge get valid response more offen\r\n}).listen(443);\r\n\r\nserver.on(\"session\", () => {\r\n  console.log(\"session\");\r\n})\r\n```\r\n\r\n* session is created\r\n* request come\r\n* browser not handle response\r\n\r\nEdge sometimes display response, IE never.\r\nOn Edge bigger responses are truncated randomly.\r\nI see same behavior in plain mode - via haproxy.\r\n\r\nIE and Edge version:\r\n![sample](https://media.cyclosport.pl/f/7629dfa1e7c2e00c09424b4d11cb0aff/Screenshot_20180520_171523.png)",
    "labels": [
      "confirmed-bug",
      "http2"
    ],
    "comments": 3,
    "issue_creation_time": "2018-05-20T15:18:06",
    "first_answer_author": "apapirovski",
    "first_answer_body": "Hi @webcarrot. Thanks for reporting this. I wonder if https://github.com/nodejs/node/pull/20772 might fix this issue. There are some issues currently around closing streams and sessions properly.",
    "first_answer_creation_time": "2018-05-20T18:04:05",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Missing useful debug information for Dynamic Import errors",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/19763",
    "author_name": "m-a-r-c-e-l-i-n-o",
    "question_body": "Hello there, \r\n\r\nNode: v9.10.1\r\nPlatform: Darwin MACLTUS44977 15.6.0 Darwin Kernel Version 15.6.0\r\n\r\n```\r\n// problem.mjs\r\nconst foo = () => {\r\n  await bar()\r\n}\r\n```\r\nSo \"problem.mjs\" has an issue, which is that it is using the \"await\" keyword inside a non \"async\" function.\r\n\r\nIf you try to run this file as an entry in node or regular import, a very helpful error is thrown as expected:\r\n```\r\n// \"node --experimental-modules problem.mjs\" or \"import problem from './problem.mjs'\"\r\nfile:///Users/ctsuser1/Desktop/projects/problem.mjs:2\r\n  await bar()\r\n  ^^^^^\r\nSyntaxError: Unexpected reserved word\r\n    at translators.set (internal/loader/Translators.js:27:13)\r\n    at <anonymous>\r\n```\r\n\r\nBut... if you try to \"dynamically\" import \"problem.mjs\", it throws a completely useless error:\r\n```\r\nSyntaxError: Unexpected reserved word\r\n    at translators.set (internal/loader/Translators.js:27:13)\r\n    at <anonymous>\r\n```\r\n\r\nIs this a bug? How can this be resolved? It's impossible to debug this way. Thanks in advance!\r\n",
    "labels": [
      "confirmed-bug",
      "esm"
    ],
    "comments": 2,
    "issue_creation_time": "2018-04-03T00:08:57",
    "first_answer_author": "devsnek",
    "first_answer_body": "i think once we standardise our use of module errors in ModuleJob we can streamline decorating the error stack but i'll have to look into it more",
    "first_answer_creation_time": "2018-04-03T04:09:22",
    "was_closed_after_first_comment": false
  },
  {
    "title": "tcp socket localPort option does not work",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/15084",
    "author_name": "beingmohit",
    "question_body": "Version: v6.11.2\r\nPlatform: Linux workstation 4.4.0-92-generic #115-Ubuntu SMP Thu Aug 10 09:04:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\nSubsystem: net\r\n\r\n```\r\nconst net = require('net');\r\n\r\nfunction createServer(port) {\r\n    var server = net.createServer();\r\n\r\n    server.on('connection', (socket) => {\r\n        console.log('Server '+port+': socket connected',  socket.remotePort);\r\n    });\r\n\r\n    server.listen(port);\r\n}\r\n\r\ncreateServer(6001);\r\ncreateServer(6002);\r\n\r\nvar client =  new net.Socket();\r\n\r\nclient.connect({\r\n    port: 6001,\r\n    address: '::ffff:127.0.0.1',\r\n    localPort: 6002\r\n});\r\n\r\n```\r\n**Output**: Server 6001: socket connected 35372\r\n**Expected**: Server 6001: socket connected 6002 (or EADDRINUSE error)",
    "labels": [
      "confirmed-bug",
      "net"
    ],
    "comments": 3,
    "issue_creation_time": "2017-08-30T04:27:06",
    "first_answer_author": "joyeecheung",
    "first_answer_body": "I can reproduce this with master. I think this is similar to what https://github.com/nodejs/node/blob/2154a3ce0f2eca1d26e1ad8e7bbeae1039822a5a/lib/net.js#L1383-L1390 tries to address. I will open a PR fixing this shortly (the fix is causing other tests to fail because they are depending on this bug...).",
    "first_answer_creation_time": "2017-08-30T10:09:06",
    "was_closed_after_first_comment": false
  },
  {
    "title": "AES Key Wrap Segfault",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/15009",
    "author_name": "EternalDeiwos",
    "question_body": "CC @thelunararmy\r\n\r\n* **Version**: 6.11.2\r\n* **Platform**: Linux PCName 4.8.0-56-generic # 61~16.04.1-Ubuntu SMP Wed Jun 14 11:58:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n* **Subsystem**: crypto -> ciphers -> id-aesXXX-wrap\r\n\r\nWe're trying to do aes key wrapping for our [nodejs webcrypto implementation](https://github.com/anvilresearch/webcrypto). We were having some trouble so we made the following test script (using data from [RFC3394](https://tools.ietf.org/html/rfc3394#section-4.6)):\r\n\r\n```js\r\n'use strict'\r\n\r\nconst crypto = require('crypto')\r\n\r\nlet cipherName = 'id-aes128-wrap'\r\n\r\n// Ripped from RFC3394\r\nlet kekHex = '000102030405060708090A0B0C0D0E0F' // for 256: '000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F'\r\nlet keyHex = '00112233445566778899AABBCCDDEEFF' // for 256: '00112233445566778899AABBCCDDEEFF000102030405060708090A0B0C0D0E0F'\r\nlet ivHex = 'A6A6A6A6A6A6A6A6'\r\n\r\nlet iv = Buffer.from(ivHex, 'hex')\r\nlet kek = Buffer.from(kekHex, 'hex')\r\nlet key = Buffer.from(keyHex, 'hex')\r\n\r\ntry {\r\n  let cipher = crypto.createCipheriv(cipherName, kek, iv)\r\n  let result = cipher.update(key)\r\n  let final = cipher.final()\r\n\r\n  // TODO process result\r\n\r\n  console.log('RESULT', result, final)\r\n} catch (error) {\r\n  console.error('ERROR', error)\r\n}\r\n```\r\n\r\nRunning this script causes node to segfault. Any ideas?",
    "labels": [
      "confirmed-bug",
      "crypto",
      "openssl"
    ],
    "comments": 4,
    "issue_creation_time": "2017-08-24T12:12:28",
    "first_answer_author": "joyeecheung",
    "first_answer_body": "I can reproduce this with v8.4.0.\r\n\r\n```\r\nProcess 14998 stopped\r\n* thread #1, name = 'node', stop reason = signal SIGSEGV: invalid address (fault address: 0x24dc000)\r\n    frame #0: 0x0000000000a7cbe0 node`_x86_64_AES_encrypt_compact + 48\r\nnode`_x86_64_AES_encrypt_compact:\r\n->  0xa7cbe0 <+48>: xorl   (%r15), %eax\r\n    0xa7cbe3 <+51>: xorl   0x4(%r15), %ebx\r\n    0xa7cbe7 <+55>: xorl   0x8(%r15), %ecx\r\n    0xa7cbeb <+59>: xorl   0xc(%r15), %edx\r\n(lldb) register read r15\r\n     r15 = 0x00000000024dc000\r\n(lldb) memory read 0x00000000024dc000\r\nerror: memory read failed for 0x24dc000\r\n```",
    "first_answer_creation_time": "2017-08-24T15:47:44",
    "was_closed_after_first_comment": false
  },
  {
    "title": "util.inspect not checking for loops in {,Weak}Map data",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/14758",
    "author_name": "rdeforest",
    "question_body": "* **Version**: v8.2.1\r\n* **Platform**: Darwin a0999b0cf96f.ant.amazon.com 16.6.0 Darwin Kernel Version 16.6.0: Fri Apr 14 16:21:16 PDT 2017; root:xnu-3789.60.24~6/RELEASE_X86_64 x86_64\r\n* **Subsystem**: util\r\n\r\nExpected behavior:\r\n\r\n```\r\ncoffee> m = new Map\r\nMap {}\r\ncoffee> m.set m, m\r\nref1 = Map {\r\n  ref1 => ref1\r\n}\r\ncoffee>\r\n```\r\n\r\nActual behavior:\r\n```\r\ncoffee> m = new Map\r\nMap {}\r\ncoffee> m.set m, m\r\nMap {\r\n  Map {\r\n  Map { [Object] => [Object] } => Map { [Object] => [Object] } } => Map {\r\n  Map { [Object] => [Object] } => Map { [Object] => [Object] } } }\r\ncoffee>\r\n```\r\n\r\nI know this is a non-trivial problem to solve but it seems worth at least documenting if not solving.",
    "labels": [
      "confirmed-bug",
      "util"
    ],
    "comments": 1,
    "issue_creation_time": "2017-08-11T01:56:53",
    "first_answer_author": "TimothyGu",
    "first_answer_body": "Can reproduce on Node.js' REPL:\r\n\r\n```js\r\n> var m = new Map()\r\nundefined\r\n> m.set('m', m)\r\nMap { 'm' => Map { 'm' => Map { 'm' => [Object] } } }\r\n```\r\n\r\nNote, this works fine with a normal object:\r\n\r\n```js\r\n> var o = {}\r\nundefined\r\n> o.o = o\r\n{ o: [Circular] }\r\n> o\r\n{ o: [Circular] }\r\n```",
    "first_answer_creation_time": "2017-08-11T03:22:34",
    "was_closed_after_first_comment": true
  },
  {
    "title": "URL#searchParams#delete removes \"?\"",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/14020",
    "author_name": "stevenvachon",
    "question_body": "```js\r\nconst {URL} = require(\"url\");\r\n\r\nconst url = new URL(\"http://host/?param\");\r\nurl.searchParams.delete(\"param\");\r\nurl.href;\r\n//-> http://host/\r\n```\r\nIt should produce `http://host/?` [according to @TimothyGu](https://github.com/jsdom/whatwg-url/issues/97#issuecomment-312401510).",
    "labels": [
      "confirmed-bug",
      "whatwg-url"
    ],
    "comments": 3,
    "issue_creation_time": "2017-07-01T05:11:48",
    "first_answer_author": "TimothyGu",
    "first_answer_body": "I added this test case to WPT in https://github.com/w3c/web-platform-tests/pull/6445. Let's fix it in Node.js after that PR is merged, since our current behavior seems to be the same as many browsers.",
    "first_answer_creation_time": "2017-07-01T08:30:34",
    "was_closed_after_first_comment": false
  },
  {
    "title": "node crashes if `undefined` passed to an objectMode readable stream",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/13753",
    "author_name": "75lb",
    "question_body": "* **Version**: v8.1.2\r\n* **Platform**: Darwin mbp.local 16.6.0 Darwin Kernel Version 16.6.0: Fri Apr 14 16:21:16 PDT 2017; root:xnu-3789.60.24~6/RELEASE_X86_64 x86_64\r\n* **Subsystem**: Stream\r\n\r\n<!-- Enter your issue details below this comment. -->\r\n\r\nThe following code works on node v7 but crashes on v8: \r\n\r\n```js\r\nconst Transform = require('stream').Transform\r\nconst stream = new Transform({ objectMode: true })\r\n\r\nfunction processChunk (chunk) { return undefined }\r\n\r\nstream._transform = function (chunk, enc, done) {\r\n  if (chunk) {\r\n    this.push(processChunk(chunk))\r\n  }\r\n  done()\r\n}\r\n\r\nstream.end({ something: 'whatever' })\r\n```\r\n\r\nNode crashes if my `processChunk` function returns `undefined` (which it always does for the purpose of this test case), any other value works fine. However, [the docs](https://nodejs.org/dist/latest-v8.x/docs/api/stream.html#stream_readable_push_chunk_encoding) say that \"For object mode streams, chunk may be any JavaScript value.\" If this is true, `undefined` should work fine, no? ",
    "labels": [
      "confirmed-bug",
      "stream"
    ],
    "comments": 2,
    "issue_creation_time": "2017-06-17T23:10:09",
    "first_answer_author": "75lb",
    "first_answer_body": "this is error when running the above script on node v8.1.2:\r\n\r\n```\r\n$ node tmp/issue.js\r\n_stream_readable.js:218\r\n          Object.getPrototypeOf(chunk) !== Buffer.prototype &&\r\n                 ^\r\n\r\nTypeError: Cannot convert undefined or null to object\r\n    at Function.getPrototypeOf (<anonymous>)\r\n    at readableAddChunk (_stream_readable.js:218:18)\r\n    at Transform.Readable.push (_stream_readable.js:197:10)\r\n    at Transform.push (_stream_transform.js:151:32)\r\n    at Transform.stream._transform (/Users/lloydb/Documents/tmp/issue.js:8:10)\r\n    at Transform._read (_stream_transform.js:190:10)\r\n    at Transform._write (_stream_transform.js:178:12)\r\n    at doWrite (_stream_writable.js:371:12)\r\n    at writeOrBuffer (_stream_writable.js:357:5)\r\n    at Transform.Writable.write (_stream_writable.js:274:11)\r\n```",
    "first_answer_creation_time": "2017-06-17T23:22:34",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Buffer.from('base64') decodes some white space as data",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/11987",
    "author_name": "jorangreef",
    "question_body": "I am writing a native addon to decode a buffer containing base64 directly into another buffer, without requiring the allocation of an interim string (see https://github.com/nodejs/node/issues/11866 for why Node cannot decode base64 buffers directly).\r\n\r\nI wrote a fuzz test to test my own decoder, and then decided to try it out on Node's base64 decoder.\r\n\r\nThere are a few cases where Node's decoder treats whitespace as actual data, rather than ignoring it. This happens when the \"=\" is left out:\r\n\r\n```\r\n// Fails:\r\n> Buffer.from(\"3v6YpUFyK0/hitA2tCDIfdYKw0 g \", 'base64').toString('binary')\r\n'\u00de\u00fe\u0098\u00a5Ar+O\u00e1\u008a\u00d06\u00b4 \u00c8}\u00d6\\n\u00c3H>'\r\n> Buffer.from(\"3v6YpUFyK0/hitA2tCDIfdYKw0g \", 'base64').toString('binary')\r\n'\u00de\u00fe\u0098\u00a5Ar+O\u00e1\u008a\u00d06\u00b4 \u00c8}\u00d6\\n\u00c3H>'\r\n> Buffer.from(\"3v6YpUFyK0/hitA2tCDIfdYKw0g\\n\", 'base64').toString('binary')\r\n'\u00de\u00fe\u0098\u00a5Ar+O\u00e1\u008a\u00d06\u00b4 \u00c8}\u00d6\\n\u00c3H>'\r\n\r\n// Passes:\r\n> Buffer.from(\"3v6YpUFyK0/hitA2tCDIfdYKw0g=\", 'base64').toString('binary')\r\n'\u00de\u00fe\u0098\u00a5Ar+O\u00e1\u008a\u00d06\u00b4 \u00c8}\u00d6\\n\u00c3H'\r\n> Buffer.from(\"3v6YpUFyK0/hitA2tCDIfdYKw0g\", 'base64').toString('binary')\r\n'\u00de\u00fe\u0098\u00a5Ar+O\u00e1\u008a\u00d06\u00b4 \u00c8}\u00d6\\n\u00c3H'\r\n```\r\n\r\nIn the failing cases, Node's decoder has interpolated a \">\".",
    "labels": [
      "confirmed-bug",
      "buffer"
    ],
    "comments": 2,
    "issue_creation_time": "2017-03-22T11:20:07",
    "first_answer_author": "seishun",
    "first_answer_body": "I'm assuming Node.js doesn't throw on invalid base64 input for performance reasons. So it's basically \"garbage in - garbage out\".",
    "first_answer_creation_time": "2017-03-22T13:35:56",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Invalid Url when domain contains between 4 and 9 digits",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/10306",
    "author_name": "Janpot",
    "question_body": "* **Version**: v7.2.1\r\n* **Platform**: Darwin Jans-MacBook-Pro-2.local 16.3.0 Darwin Kernel Version 16.3.0: Thu Nov 17 20:23:58 PST 2016; root:xnu-3789.31.2~1/RELEASE_X86_64 x86_64\r\n* **Subsystem**: url\r\n\r\n<!-- Enter your issue details below this comment. -->\r\n\r\nExecuting:\r\n\r\n```js\r\nconst { URL } = require('url');\r\nnew URL('http://1234.com');\r\nnew URL('http://123456789.com');\r\n```\r\n\r\nall throw\r\n\r\n```\r\nTypeError: Invalid URL\r\n    at Object.URL.binding.parse (internal/url.js:85:17)\r\n    at new URL (internal/url.js:81:13)\r\n    at repl:1:1\r\n    at realRunInThisContextScript (vm.js:22:35)\r\n    at sigintHandlersWrap (vm.js:98:12)\r\n    at ContextifyScript.Script.runInThisContext (vm.js:24:12)\r\n    at REPLServer.defaultEval (repl.js:346:29)\r\n    at bound (domain.js:280:14)\r\n    at REPLServer.runBound [as eval] (domain.js:293:12)\r\n    at REPLServer.onLine (repl.js:545:10)\r\n```\r\n\r\nall following work without a problem:\r\n\r\n```js\r\nconst { URL } = require('url');\r\nnew URL('http://123.com');\r\nnew URL('http://1234567890.com');\r\n```\r\n\r\nThe bug doesn't happen in the browser. It looks like it tries to parse an IP address or something?",
    "labels": [
      "confirmed-bug",
      "url",
      "whatwg-url"
    ],
    "comments": 2,
    "issue_creation_time": "2016-12-16T17:21:12",
    "first_answer_author": "toasohcah",
    "first_answer_body": "Note that it affects every integer in the range `[256, 999999999]`:\r\n\r\n```\r\n> new (require(\"url\").URL)('http://255.com/')\r\nURL {\r\n> new (require(\"url\").URL)('http://256.com/')\r\nTypeError: Invalid URL\r\n> new (require(\"url\").URL)('http://999999999.com/')\r\nTypeError: Invalid URL\r\n> new (require(\"url\").URL)('http://1000000000.com/')\r\nURL {\r\n```",
    "first_answer_creation_time": "2016-12-16T17:49:37",
    "was_closed_after_first_comment": false
  },
  {
    "title": "replServer defineCommand",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/7357",
    "author_name": "safarishi",
    "question_body": "- **Version**: v4.4.5\n- **Platform**: Linux lts 4.4.0-24-generic #43-Ubuntu SMP Wed Jun 8 19:27:37 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n- **Subsystem**:\n\n<!-- Enter your issue details below this comment. -->\n\nWhen I try this demo\n\n```\n// repl_test.js\nconst repl = require('repl');\n\nvar replServer = repl.start({});\nreplServer.defineCommand('sayhello', {\n  help: 'Say hello',\n  action: function(name) {\n    this.write(`Hello, ${name}!\\n`);\n    this.displayPrompt();\n  }\n});\n```\n\nthen run this in my command line with node repl_test.js\n// and got the output with\n\n> .sayhello Node.js User\n> Hello, Node.js User!\n> SyntaxError: Unexpected identifier\n>     at Object.exports.createScript (vm.js:24:10)\n>     at REPLServer.defaultEval (repl.js:235:25)\n>     at bound (domain.js:287:14)\n>     at REPLServer.runBound [as eval](domain.js:300:12)\n>     at REPLServer.<anonymous> (repl.js:431:12)\n>     at emitOne (events.js:77:13)\n>     at REPLServer.emit (events.js:169:7)\n>     at REPLServer.Interface._onLine (readline.js:211:10)\n>     at REPLServer.Interface._line (readline.js:550:8)\n>     at REPLServer.Interface._ttyWrite (readline.js:885:20)\n\nIt got the synatax error, and I don't know why?\n",
    "labels": [
      "confirmed-bug",
      "doc",
      "repl"
    ],
    "comments": 2,
    "issue_creation_time": "2016-06-22T02:41:53",
    "first_answer_author": "mscdex",
    "first_answer_body": "The example in the docs looks incorrect/bad. I think it should be something like `console.log()` instead of `this.write()` inside the `action` function. Otherwise two things happen:\n1. Node tries to interpret the argument passed to `this.write()` as code (or command if starting with `.`) to execute.\n2. Node inserts the same argument into the REPL history, which is annoying and would almost always be undesired.\n",
    "first_answer_creation_time": "2016-06-22T02:54:48",
    "was_closed_after_first_comment": false
  },
  {
    "title": "assert.deepEqual is broken?",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/5907",
    "author_name": "mohayonao",
    "question_body": "- Node: v5.9.1\n- Platform: Darwin 15.4.0 Darwin Kernel Version 15.4.0: Fri Feb 26 22:08:05 PST 2016; root:xnu-3248.40.184~3/RELEASE_X86_64 x86_64\n\n**Problem:**\nDoes not throw an exception, when comparing two Float32Array which have the small different values.\n\n``` js\nassert.deepEqual(new Float32Array([ 0 ]), new Float32Array([ 0.1 ]));\n// undefined (This does not throw an AssertionError?)\n```\n\nThis works as expected.\n\n``` js\nassert.deepEqual(new Float32Array([ 0 ]), new Float32Array([ 1 ]));\n// AssertionError: Float32Array { '0': 0 } deepEqual Float32Array { '0': 1 }\n//    at repl:1:8\n//    at REPLServer.defaultEval (repl.js:260:27)\n//    at bound (domain.js:287:14)\n//    at REPLServer.runBound [as eval] (domain.js:300:12)\n//    at REPLServer.<anonymous> (repl.js:429:12)\n//    at emitOne (events.js:95:20)\n//    at REPLServer.emit (events.js:182:7)\n//    at REPLServer.Interface._onLine (readline.js:211:10)\n//    at REPLServer.Interface._line (readline.js:550:8)\n//    at REPLServer.Interface._ttyWrite (readline.js:827:14)\n```\n",
    "labels": [
      "confirmed-bug",
      "assert"
    ],
    "comments": 1,
    "issue_creation_time": "2016-03-26T00:49:01",
    "first_answer_author": "addaleax",
    "first_answer_body": "This happens due to [this line](https://github.com/nodejs/node/blob/85ab4a5f1281c4e1dd06450ac7bd3250326267fa/lib/assert.js#L176), where typed arrays are converted to `Buffer` objects entry-for-entry, i.e. each entry in the source becomes one uint8 in the `Buffer`. This is not specific to floats:\n\n``` js\nassert.deepEqual(new Float32Array([ 0 ]), new Float32Array([ 255 ])) // throws\nassert.deepEqual(new Float32Array([ 0 ]), new Float32Array([ 256 ])) // passes, 256 becomes 0x00\nassert.deepEqual(new Float32Array([ 0 ]), new Float32Array([ 257 ])) // throws\n```\n\nSame with `Uint16Array` etc.\nI\u2019ll see whether I can get a fix together.\n",
    "first_answer_creation_time": "2016-03-26T02:04:15",
    "was_closed_after_first_comment": true
  },
  {
    "title": "SSL sockets may leak when keepalive is enabled",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/5699",
    "author_name": "alexpenev-s",
    "question_body": "issue is in: lib/_http_agent.js\nThe issue is reproducible whenever the `ca` property is set globally in the agent and an https request is made with `https.request(ops)` where `ops` does not have the property `ca`\n\n_http_agent.js @ `Agent.prototype.createSocket`\nthe `options` are extended with the global `options` object which contains `ca`. In `getName` `ca` is used in the name generation of the hash.\n\nhowever _http_agent.js @ `Agent.prototype.addRequest`\nThe `options` (passed from the call `https.request(ops)` which don't have the property `ca`) are used to get a hashtag which is now different. The socket leaks and is closed when the timeout hits. Meanwhile a new socket is created for the request.\n",
    "labels": [
      "confirmed-bug",
      "http",
      "https",
      "net",
      "memory"
    ],
    "comments": 3,
    "issue_creation_time": "2016-03-14T15:40:06",
    "first_answer_author": "benjamingr",
    "first_answer_body": "It's worth mentioning that this happens because `getName` is overridden in prototypical inheritance in `https://github.com/nodejs/node/blob/master/lib/https.js#L114 - _http_agent is not aware of the ca property. \n",
    "first_answer_creation_time": "2016-03-14T21:02:39",
    "was_closed_after_first_comment": false
  },
  {
    "title": "repl cannot handle single quote in regex, when within a function",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/5113",
    "author_name": "phillipwei",
    "question_body": "I'm getting a 'SyntaxError: Unexpected end of input' when I try to enter the following in the repl\n\n```\nvar someFunction = function(s) {\n    s = s.replace(/'/g, '');\n}\n```\n\nHowever, `s = s.replace(/'/g, '')` by itself on a new line is OK. Am I doing something wrong?\n",
    "labels": [
      "confirmed-bug",
      "repl"
    ],
    "comments": 3,
    "issue_creation_time": "2016-02-06T00:26:57",
    "first_answer_author": "Trott",
    "first_answer_body": "This is indeed a bug, and you're not doing anything wrong. For a quick workaround, you can use a backslash to escape the single quote in the regular expression:  `s=s.replace(/\\'/g, '');` \n\nBut yes, you shouldn't have to do that.\n",
    "first_answer_creation_time": "2016-02-06T03:53:36",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Enhanced object literals dont work with accessor keywords (possibly others)",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/4237",
    "author_name": "MauriceButler",
    "question_body": "i.e.\n\n``` javascript\nvar x = 123,\n    get = 456,\n    set = 789;\n\nvar a = {x} // {x: 123}\nvar b = {get} // syntax error\nvar c = {set} // syntax error\n```\n\nThis possibly falls into the v8 version and level of implementation.\n\nTested on node 4.x and 5.x with same results, works fine in chrome (47.0.2526.73) (V8 4.7.80.23)\n",
    "labels": [
      "confirmed-bug",
      "v8 engine"
    ],
    "comments": 4,
    "issue_creation_time": "2015-12-11T03:13:30",
    "first_answer_author": "mscdex",
    "first_answer_body": "This works fine in the node master branch which has v8 4.7. So this fix isn't likely to be seen in node v4 or node v5.\n",
    "first_answer_creation_time": "2015-12-11T05:41:06",
    "was_closed_after_first_comment": false
  },
  {
    "title": "url.format(undefined) fails in io.js, where it works in Node.js (TypeError: Cannot read property 'auth' of undefined)",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/1033",
    "author_name": "hairyhenderson",
    "question_body": "In node.js (tested on v0.12.0 and v0.10.33):\n\n``` sh\n$ node -e \"console.log('%j',require('url').format(undefined))\" \n\"\"\n```\n\nIn io.js (tested on v1.4.2 and v1.0.4):\n\n``` sh\n$ node -e \"console.log('%j',require('url').format(undefined))\"\nurl.js:361\n  var auth = this.auth || '';\n                 ^\nTypeError: Cannot read property 'auth' of undefined\n    at Url.format (url.js:361:18)\n    at Object.urlFormat [as format] (url.js:356:58)\n    at [eval]:1:33\n    at Object.exports.runInThisContext (vm.js:54:17)\n    at Object.<anonymous> ([eval]-wrapper:6:22)\n    at Module._compile (module.js:444:26)\n    at evalScript (node.js:477:25)\n    at startup (node.js:73:7)\n    at node.js:863:3\n```\n\nI've dug into this a little bit, and I'm not really sure why it worked in node.js - probably something to do with different V8 versions? Even though this seems to be an edge case, this is a behaviour difference, and breaks [a unit test](https://travis-ci.org/hairyhenderson/f1foo/builds/50337033) in a project of mine.\n",
    "labels": [
      "confirmed-bug",
      "url"
    ],
    "comments": 2,
    "issue_creation_time": "2015-03-03T01:50:38",
    "first_answer_author": "tellnes",
    "first_answer_body": "In #1036 we have decided to throw when passing invalid values to `url.format`. That means that this is working as intended except you should get another error message.\n",
    "first_answer_creation_time": "2015-03-03T20:23:50",
    "was_closed_after_first_comment": false
  },
  {
    "title": "io.js's performance counters conflict with node.js's on Windows 7 x64",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/524",
    "author_name": "seishun",
    "question_body": "Steps to reproduce:\n1. Install Node.js v0.10.35 with at least \"Performance counters\" checked\n2. Try to install io.js v1.0.3 with at least \"Performance counters\" checked\n\nThe installer fails and rolls back. It works just fine if you run the installer again.\n\nThis doesn't happen if \"Performance counters\" is unchecked in either of the installers. Other options don't seem to make any difference.\n\nI'll try to reproduce this on a 32-bit Windows 7 when I get home.\n",
    "labels": [
      "confirmed-bug",
      "windows"
    ],
    "comments": 2,
    "issue_creation_time": "2015-01-20T11:34:41",
    "first_answer_author": "piscisaureus",
    "first_answer_body": "This is a bug.\nIt can be fixed by changing one of the GUIDs in [this file](https://github.com/iojs/io.js/blob/v1.x/src/res/node_perfctr_provider.man), but I don't know which one has to change.\n",
    "first_answer_creation_time": "2015-01-23T17:19:40",
    "was_closed_after_first_comment": false
  },
  {
    "title": "unable to deal with file names that have invalid encoding",
    "repo_name": "nodejs/node",
    "url": "https://github.com/nodejs/node/issues/128",
    "author_name": "andrewrk",
    "question_body": "There is a file in my user's file system and io.js cannot use any of the fs API on it, because the file name has an invalid encoding. File names are byte arrays; not strings. This is the root of the problem.\n\nhttps://github.com/andrewrk/groovebasin/issues/383\n\nHow to reproduce (use linux):\n\n```\n$ wget https://s3.amazonaws.com/superjoe/temp/encoding-test.tar.gz\n$ tar xvf encoding-test.tar.gz \nencoding-test/\nencoding-test/test.js\nencoding-test/dir/\nencoding-test/dir/\\377\n$ cd encoding-test/\n$ cat test.js\nvar fs = require('fs');\nvar path = require('path');\nvar dir = 'dir/';\nvar list = fs.readdirSync(dir);\nvar filename = path.join(dir, list[0]);\nconsole.log(filename);\nconsole.log(fs.lstatSync(filename));\n$ node test.js \ndir/\ufffd\n\nfs.js:688\n  return binding.lstat(pathModule._makeLong(path));\n                 ^\nError: ENOENT, no such file or directory 'dir/\ufffd'\n    at Object.fs.lstatSync (fs.js:688:18)\n    at Object.<anonymous> (/home/andy/Downloads/encoding-test/test.js:7:16)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:906:3\n```\n",
    "labels": [
      "confirmed-bug",
      "fs"
    ],
    "comments": 4,
    "issue_creation_time": "2014-12-09T17:49:55",
    "first_answer_author": "bnoordhuis",
    "first_answer_body": "It's a known issue, see e.g. joyent/node#2387.  (There is another, older issue but I can't find it just now.)\n\nThere is currently no workaround.  Fixing it probably entails rewriting src/node_file.cc and lib/fs.js to accept both buffers and strings (and, perhaps, typed arrays.)\n\nMost platforms treat file paths as byte arrays but Windows and OS X do not; I'm not sure if that would affect node.js but it's something to keep in mind.  It's possible that the Windows port of libuv already takes care of all the details but the OS X port most assuredly does not.\n\nAt any rate, pull requests are welcome!\n",
    "first_answer_creation_time": "2014-12-09T19:31:28",
    "was_closed_after_first_comment": false
  },
  {
    "title": "ChangeDetectionSchedulerImpl breaks Zoneless apps",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/55116",
    "author_name": "e-oz",
    "question_body": "### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nLine 55 in `zoneless_scheduling_impl.ts` causes `Zone is not defined` exception.\r\n```\r\nif (Zone?.root?.run) {\r\n...\r\n```\r\n\r\nReproduction:\r\nhttps://stackblitz.com/edit/stackblitz-starters-memovq?devToolsHeight=33&file=src%2Fmain.ts\r\n\r\nWas working fine in 18.0.0-next.1:\r\nhttps://stackblitz.com/edit/stackblitz-starters-p1azc6?file=src%2Fmain.ts\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-memovq?devToolsHeight=33&file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\n`Zone is not defined`\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nPackage Manager: yarn 1.22.22\r\nOS: darwin arm64\r\n\r\nAngular: 18.0.0-next.2\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1800.0-next.1\r\n@angular-devkit/build-angular   18.0.0-next.1\r\n@angular-devkit/core            18.0.0-next.1\r\n@angular-devkit/schematics      18.0.0-next.1\r\n@angular/cli                    18.0.0-next.1\r\n@angular/pwa                    18.0.0-next.1\r\n@schematics/angular             18.0.0-next.1\r\nrxjs                            7.8.1\r\ntypescript                      5.5.0-dev.20240329\r\nwebpack                         5.91.0\r\nzone.js                         0.14.4\n```\n\n\n### Anything else?\n\n_No response_",
    "labels": [
      "area: core",
      "area: zones",
      "state: has PR",
      "bug"
    ],
    "comments": 1,
    "issue_creation_time": "2024-03-29T10:51:22",
    "first_answer_author": "angular-automatic-lock-bot[bot]",
    "first_answer_body": "This issue has been automatically locked due to inactivity.\nPlease file a new issue if you are encountering a similar or related problem.\n\nRead more about our [automatic conversation locking policy](https://github.com/angular/angular/blob/8f24bc9443b3872fe095d9f7f77b308a361a13b4/docs/GITHUB_PROCESS.md#conversation-locking).\n\n<sub>_This action has been performed automatically by a bot._</sub>",
    "first_answer_creation_time": "2024-04-29T00:09:35",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Styles are not updated correctly after image loaded by NgOptimizedImage (with OnPush Change Detection)",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/54478",
    "author_name": "daryakalenik",
    "question_body": "### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n\r\n### Description\r\n\r\nNew placeholder attribute of NgOptimizedImage doesn't seem to properly update styles in components with `changeDetection: ChangeDetectionStrategy.OnPush` after image is loaded. After loading the image directive should remove blur and other styles (background-image, background size, etc...) but it's not happening - if I remove `changeDetection: ChangeDetectionStrategy.OnPush` it starts working as intended. If directive is used without blur it doesnt affect the visual part, but placeholder styles are still there until change detection (for example in my original project image has an action on click - and click action leads to styles update)\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-xfrx6r?file=src%2Fimage.component.ts\r\n\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.2.0\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.3\r\nOS: win32 x64\r\n```",
    "labels": [
      "area: common",
      "state: has PR",
      "bug",
      "common: image directive"
    ],
    "comments": 1,
    "issue_creation_time": "2024-02-16T08:31:06",
    "first_answer_author": "angular-automatic-lock-bot[bot]",
    "first_answer_body": "This issue has been automatically locked due to inactivity.\nPlease file a new issue if you are encountering a similar or related problem.\n\nRead more about our [automatic conversation locking policy](https://github.com/angular/angular/blob/8f24bc9443b3872fe095d9f7f77b308a361a13b4/docs/GITHUB_PROCESS.md#conversation-locking).\n\n<sub>_This action has been performed automatically by a bot._</sub>",
    "first_answer_creation_time": "2024-03-22T00:08:45",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Nested for loops reset parent even/odd",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/52917",
    "author_name": "jjw99",
    "question_body": "### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nWith the new control flow syntax, nested inner for loops will overwrite the value of even/odd variables stored in the parent loop.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular-3qegjg?file=src%2Fmain.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nIn the stackblitz example, the value of 'odd' should be retained in the inner loop iterations.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n17.0.2\r\n\r\n### Anything else?\r\n\r\n_No response_",
    "labels": [
      "area: core",
      "state: has PR",
      "bug",
      "core: control flow"
    ],
    "comments": 1,
    "issue_creation_time": "2023-11-14T23:29:52",
    "first_answer_author": "angular-automatic-lock-bot[bot]",
    "first_answer_body": "This issue has been automatically locked due to inactivity.\nPlease file a new issue if you are encountering a similar or related problem.\n\nRead more about our [automatic conversation locking policy](https://github.com/angular/angular/blob/8f24bc9443b3872fe095d9f7f77b308a361a13b4/docs/GITHUB_PROCESS.md#conversation-locking).\n\n<sub>_This action has been performed automatically by a bot._</sub>",
    "first_answer_creation_time": "2023-12-17T00:10:16",
    "was_closed_after_first_comment": true
  },
  {
    "title": "defer viewport doesn't work as expected",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/52113",
    "author_name": "ArielGueta",
    "question_body": "### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI have this code:\r\n\r\n```html\r\n    <section style=\"height: 100px; overflow: auto\">\r\n      @for (item of items; track item) {\r\n        @defer (on viewport) {\r\n          <app-test />\r\n        } @placeholder {\r\n          <div>Placeholder</div> \r\n        }\r\n      }\r\n    </section>\r\n```\r\n\r\nAnd it behaves weird:\r\n\r\n![reproudce](https://github.com/angular/angular/assets/20522870/60aaa110-fac0-4fcc-b1f0-1683ca6c8ad6)\r\n\r\nI'm not sure why some of the elements isn't renders when visible in the view. \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_",
    "labels": [
      "area: core",
      "state: has PR",
      "bug",
      "core: defer"
    ],
    "comments": 1,
    "issue_creation_time": "2023-10-09T14:05:30",
    "first_answer_author": "angular-automatic-lock-bot[bot]",
    "first_answer_body": "This issue has been automatically locked due to inactivity.\nPlease file a new issue if you are encountering a similar or related problem.\n\nRead more about our [automatic conversation locking policy](https://github.com/angular/angular/blob/8f24bc9443b3872fe095d9f7f77b308a361a13b4/docs/GITHUB_PROCESS.md#conversation-locking).\n\n<sub>_This action has been performed automatically by a bot._</sub>",
    "first_answer_creation_time": "2023-11-11T00:08:39",
    "was_closed_after_first_comment": true
  },
  {
    "title": "\"Template reference variables\" topic does not have active state in navigation",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/51242",
    "author_name": "tkolok",
    "question_body": "### Describe the problem that you experienced\n\nWhen you visit the [Template reference variables](https://angular.io/guide/template-reference-variables) topic, its related link is not active in the navigation (The `.selected` class is missing).\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/guide/template-reference-variables\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n![image](https://github.com/angular/angular/assets/12582532/24edcf85-003a-4a8c-8f2c-f8ac40ed0065)\r\n\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_",
    "labels": [
      "P4",
      "bug"
    ],
    "comments": 4,
    "issue_creation_time": "2023-08-01T18:40:23",
    "first_answer_author": "JeanMeche",
    "first_answer_body": "I can't reproduce that issue on a Chrome M115. \r\n\r\nDo you have this issue on navigation or on a fresh loading (F5) ? ",
    "first_answer_creation_time": "2023-08-01T21:04:30",
    "was_closed_after_first_comment": false
  },
  {
    "title": "DevTools: Highlighter gets cutoff if highlighting an element that is partially off screen",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/48479",
    "author_name": "AleksanderBodurri",
    "question_body": "### Is this a bug report or a feature request?\r\n\r\n- Bug Report\r\n\r\n### Please provide the steps to reproduce the issue:\r\n\r\nReproduction: https://angular-ivy-r51ukb.stackblitz.io/\r\n\r\n1. Open reproduction app\r\n2. Lower window width until element is cut off\r\n3. Try to highlight the element with the highlighter\r\n\r\n<img width=\"1401\" alt=\"Screen Shot 2022-12-13 at 2 12 47 PM\" src=\"https://user-images.githubusercontent.com/39253660/207424146-70057ff3-edb2-4cfd-bb2c-d44ef0764c0d.png\">\r\n\r\n### Proposed solution:\r\nClamp the position of the highlighter so that it is always within the visible screen.\r\n",
    "labels": [
      "state: has PR",
      "P3",
      "area: devtools",
      "bug"
    ],
    "comments": 1,
    "issue_creation_time": "2022-12-13T19:16:51",
    "first_answer_author": "angular-automatic-lock-bot[bot]",
    "first_answer_body": "This issue has been automatically locked due to inactivity.\nPlease file a new issue if you are encountering a similar or related problem.\n\nRead more about our [automatic conversation locking policy](https://github.com/angular/angular/blob/8f24bc9443b3872fe095d9f7f77b308a361a13b4/docs/GITHUB_PROCESS.md#conversation-locking).\n\n<sub>_This action has been performed automatically by a bot._</sub>",
    "first_answer_creation_time": "2023-08-26T00:08:11",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Wrong reference link for ExtraOptions's errorHandler type",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/47212",
    "author_name": "yurakis",
    "question_body": "### Description\n\nIn the [documentation](https://angular.io/api/router/ExtraOptions#errorHandler) `errorHandler` described as an [ErrorHandler](https://angular.io/api/core/ErrorHandler).\r\nAccording to the source code, it is a function `declare type ErrorHandler = (error: any) => any;`.\r\nAlso would be great to describe this function more detailed as current version does not represent what it is capable of.\n\n### What is the affected URL?\n\nhttps://angular.io/api/router/ExtraOptions#errorHandler\n\n### Please provide the steps to reproduce the issue\n\n_No response_\n\n### Please provide the expected behavior vs the actual behavior you encountered\n\n_No response_\n\n### Please provide a screenshot if possible\n\n<img width=\"656\" alt=\"image\" src=\"https://user-images.githubusercontent.com/13770788/185879471-9ff4a3f4-9089-42b7-8227-82803f970931.png\">\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version.\n\n_No response_",
    "labels": [
      "state: needs eng input",
      "P3",
      "bug"
    ],
    "comments": 4,
    "issue_creation_time": "2022-08-22T08:47:01",
    "first_answer_author": "pkozlowski-opensource",
    "first_answer_body": "> Also would be great to describe this function more detailed as current version does not represent what it is capable of.\r\n\r\nIs there any specific information that you are lacking in the current docs?",
    "first_answer_creation_time": "2022-08-22T11:54:00",
    "was_closed_after_first_comment": false
  },
  {
    "title": "DevTools: Variables initialized to undefined appearing as [setter] in property inspector",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/45888",
    "author_name": "AleksanderBodurri",
    "question_body": "### Description\r\n\r\nWhen a variable is initialized in a directive or component as `undefined`, it appears in the component inspector as `[setter]`.\r\nThis should be displaying as `undefined`\r\n<img width=\"840\" alt=\"Screen Shot 2022-05-04 at 10 28 12 PM\" src=\"https://user-images.githubusercontent.com/39253660/166855602-faa7ee69-f2b7-422a-8a11-eb8010a61f4c.png\">\r\n\r\n\r\n### Proposed solution\r\n\r\nCorrect the logic in \r\nhttps://github.com/angular/angular/blob/main/devtools/projects/ng-devtools-backend/src/lib/state-serializer/serialized-descriptor-factory.ts\r\nthat determines property descriptors so that this bug does not happen anymore.\r\n",
    "labels": [
      "good first issue",
      "area: devtools",
      "bug"
    ],
    "comments": 3,
    "issue_creation_time": "2022-05-05T02:30:12",
    "first_answer_author": "Ahm3rIjaz",
    "first_answer_body": "Hi,\r\n\r\nI am willing to fix this issue. Just want to ask that the tests also need to change after the fix or the tests remain same?",
    "first_answer_creation_time": "2022-05-06T18:43:59",
    "was_closed_after_first_comment": false
  },
  {
    "title": "*ngComponentOutlet types don't allow null/undefined, even though it supports it",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/45716",
    "author_name": "sod",
    "question_body": "### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nNo (it's like this since forever, the `ngComponentOutlet` directive was created before angular could check for strictNullChecks)\r\n\r\n### Description\r\n\r\n`<ng-container *ngComponentOutlet=\"null\"></ng-container>` throws\r\n\r\n```log\r\n error TS2322: Type 'null' is not assignable to type 'Type<any>'.\r\n```\r\n\r\neven though the directive is capable of handling falsy values: https://github.com/angular/angular/blob/master/packages/common/src/directives/ng_component_outlet.ts#L99\r\n\r\nThis forces you to use `any` if you use ngComponentOutlet & strict null checks to render a component that is optional.\r\n\r\nPlease change \r\n```diff\r\n- @Input() ngComponentOutlet!: Type<any>;\r\n+ @Input() ngComponentOutlet?: Type<any>;\r\n```\r\n\r\nin https://github.com/angular/angular/blob/master/packages/common/src/directives/ng_component_outlet.ts#L73\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nangular 13.3.4\r\n```\r\n",
    "labels": [
      "area: common",
      "state: has PR",
      "cross-cutting: types",
      "P3",
      "bug"
    ],
    "comments": 2,
    "issue_creation_time": "2022-04-21T14:08:37",
    "first_answer_author": "jfcere",
    "first_answer_body": "![image](https://user-images.githubusercontent.com/6987084/166316440-fc7c6d88-dd04-4c34-920e-058839896ed5.png)\r\n> Reference: https://angular.io/api/common/NgComponentOutlet\r\n\r\nTo represent a \"falsy\" value it should allow both `undefined` and `null` values...\r\n\r\n```diff\r\n- @Input() ngComponentOutlet!: Type<any>;\r\n+ @Input() ngComponentOutlet?: Type<any> | null;\r\n```\r\n",
    "first_answer_creation_time": "2022-05-02T19:57:45",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Add better way to get signal value without calling it like method",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/56190",
    "author_name": "Lev09",
    "question_body": "### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nCalling a signal like a method breaks widely used coding/naming conventions and makes it harder to distinguish from a regular method.\n\n### Proposed solution\n\nMy suggestion is to add a `.get()` method to signals, as we already have `.set()` method I think it will be convenient.\n\n### Alternatives considered\n\nAs an alternative we could have `.value` getter and setter.",
    "labels": [
      "feature",
      "area: core",
      "core: reactivity",
      "cross-cutting: signals"
    ],
    "comments": 3,
    "issue_creation_time": "2024-05-30T17:51:13",
    "first_answer_author": "pkozlowski-opensource",
    "first_answer_body": "We had extensive discussion on the API signature in the original RFC (https://github.com/angular/angular/discussions/49683) and argumentation for what we've settled on.",
    "first_answer_creation_time": "2024-05-31T07:29:41",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Support for using input function within component\u2019s provider",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/55744",
    "author_name": "examan",
    "question_body": "### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nAfter Angular introduced the new signal input, like the inject function, its usage should be more flexible. However, the input function is not yet supported for use within the component\u2019s provider. This usage allows descendants to directly access the upper-level input without going through layers of input or service.\r\n\r\n### Proposed solution\r\n\r\n```typescript\r\n@Component({\r\n  ...\r\n  providers: [\r\n    {\r\n      provide: ID,\r\n      useFactory: () => input.required<string>({ alias: 'id' }),\r\n    },\r\n  ],\r\n})\r\n```\r\n\r\n### Alternatives considered\r\n\r\nUsing \u2018name\u2019 instead of \u2018alias\u2019 might be more appropriate for the naming in this context.\r\n\r\n```typescript\r\n@Component({\r\n  ...\r\n  providers: [\r\n    {\r\n      provide: ID,\r\n      useFactory: () => input.required<string>({ name: 'id' }),\r\n    },\r\n  ],\r\n})\r\n```",
    "labels": [
      "feature",
      "area: core",
      "core: inputs / outputs",
      "cross-cutting: signals"
    ],
    "comments": 4,
    "issue_creation_time": "2024-05-09T13:40:35",
    "first_answer_author": "alxhub",
    "first_answer_body": "Would this be a significant improvement over:\r\n```typescript\r\n@Component({\r\n  ...\r\n  providers: [\r\n    {\r\n      provide: ID,\r\n      useFactory: () => inject(Cmp).id,\r\n    },\r\n  ],\r\n})\r\nclass Cmp {\r\n  readonly id = input.required<string>();\r\n}\r\n```\r\nwhich works today?",
    "first_answer_creation_time": "2024-05-09T16:56:03",
    "was_closed_after_first_comment": false
  },
  {
    "title": "FEATURE: import 'types' in templates using new block syntax",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/53553",
    "author_name": "kukjevov",
    "question_body": "### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nNew Angular block syntax is awesome and it is something that runs at compile time.\r\n\r\nWould it be possible to have i dont know lets call it `import` statement. This statement will allow to import 'types' like enums or other static types that would be good to have inside templates. Right now when you want to use Enum inside template you have to assign it to some components property. But something like this would be useful.\r\n\r\n```\r\n@import {AwesomeEnum} from './myRelativePath';\r\nor\r\n@import {AnotherAwesomeEnum} from 'my-lib';\r\n```\n\n### Proposed solution\n\nSince templates are compiled into code that sits next to components code this new block syntax would just add another import into same file and it should not have any problem to work. \n\n### Alternatives considered\n\nDont have alternatives.",
    "labels": [
      "feature",
      "area: core",
      "core: basic template syntax",
      "feature: votes required"
    ],
    "comments": 4,
    "issue_creation_time": "2023-12-13T17:11:11",
    "first_answer_author": "angular-robot[bot]",
    "first_answer_body": "<!-- 6374bc4f-3ca6-4ebb-b416-250033c91ab5 -->\nThis feature request is now candidate for our backlog! In the next phase, the community has 60 days to upvote. If the request receives more than 20 upvotes, we'll move it to our consideration list.\n\nYou can find more details about the feature request process in our [documentation](https://github.com/angular/angular/blob/e29eb8abfbfdfb793e08ac88e14b7ba6d2ff2136/docs/GITHUB_PROCESS.md#feature-request-process).",
    "first_answer_creation_time": "2023-12-14T14:01:46",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Angular language Service not supporting Visual Studio Code for the Web",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/51566",
    "author_name": "sheikalthaf",
    "question_body": "### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nlanguage-service\r\n\r\n### Description\r\n\r\nif I open any Angular projects in GitHub with VS Code Web. And try to install the extension it is showing warning \"The 'Angular Language Service' extension is not available in Visual Studio Code for the Web\".\r\n\r\n![image](https://github.com/angular/angular/assets/22526247/7df16fc3-589f-4a11-97e2-97a0c3f91353)\r\n\r\n\r\n### Proposed solution\r\n\r\nIt is better to support Language Service for Web for better usability.\r\n\r\n### Alternatives considered\r\n\r\nCurrently don't have",
    "labels": [
      "feature",
      "area: language-service",
      "feature: votes required"
    ],
    "comments": 3,
    "issue_creation_time": "2023-08-30T09:28:52",
    "first_answer_author": "angular-robot[bot]",
    "first_answer_body": "<!-- 6374bc4f-3ca6-4ebb-b416-250033c91ab5 -->\nThis feature request is now candidate for our backlog! In the next phase, the community has 60 days to upvote. If the request receives more than 20 upvotes, we'll move it to our consideration list.\n\nYou can find more details about the feature request process in our [documentation](https://github.com/angular/angular/blob/e29eb8abfbfdfb793e08ac88e14b7ba6d2ff2136/docs/GITHUB_PROCESS.md#feature-request-process).",
    "first_answer_creation_time": "2023-08-31T14:01:53",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Provide token to hook into hydration lifecycles",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/50292",
    "author_name": "yharaskrik",
    "question_body": "### Which @angular/* package(s) are relevant/related to the feature request?\n\nplatform-browser\n\n### Description\n\nIt would nice to be able to have hooks that we could provide functions (like: `BEFORE_APP_SERIALIZED`) where we could run logic after an app has been hydrated.\n\n### Proposed solution\n\nProvide an injection token like `BEFORE_APP_SERIALIZED` that allows us to provide functionality for logic that happens after hydration:\r\n\r\n```typescript\r\nconst AFTER_APP_HYDRATED = new InjectionToken<(() => void) | (() => void)[]>('after-app-hydrated');\r\n\r\n{\r\n  provide: AFTER_APP_HYDRATED,\r\n  useValue: () => console.log('Hydrated!'),\r\n  multi: true\r\n}\r\n```\n\n### Alternatives considered\n\n/shrug\r\n\r\nNot sure what other options there would be here.",
    "labels": [
      "feature",
      "area: core",
      "core: lifecycle hooks",
      "feature: under consideration",
      "core: hydration"
    ],
    "comments": 3,
    "issue_creation_time": "2023-05-14T19:04:51",
    "first_answer_author": "AndrewKushnir",
    "first_answer_body": "For additional context: this might be related to #47432, i.e. an extra hook when DOM is fully ready (that's when hydration is completed as well) and it's safe to perform other operations.",
    "first_answer_creation_time": "2023-05-14T19:11:10",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Allow on the fly DatePipe default settings change.",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/50268",
    "author_name": "IanSkylegs",
    "question_body": "### Which @angular/* package(s) are relevant/related to the feature request?\n\ncommon\n\n### Description\n\nI know we can change the defaults by setting the DATE_PIPE_DEFAULT_OPTIONS token. But in my case the date time format and the used timezone depends on the user that's logged in. \r\n\r\nI would like to be able to set the defaults after the app has initialised. \r\n\r\nNow I have to override the default Date Pipe (and use an async pipe to wait for the users' settings).\n\n### Proposed solution\n\nAllow an observable or Promise to be used instead of hardcoded strings.\n\n### Alternatives considered\n\nOr have some sort of service that can change the global settings in realtime..",
    "labels": [
      "feature",
      "area: common"
    ],
    "comments": 2,
    "issue_creation_time": "2023-05-12T15:40:30",
    "first_answer_author": "JoostK",
    "first_answer_body": "You can already do this, if you provide a service for `DATE_PIPE_DEFAULT_OPTIONS ` that implements the `DatePipeConfig` interface. Using getters allows you to provide dynamic values.",
    "first_answer_creation_time": "2023-05-12T15:52:25",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Renderer2 previousSilbing does not exist.",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/48098",
    "author_name": "Shaharamir",
    "question_body": "### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI'm using Renderer2, and unfortunately, there is no option for previousSilbing property despite nextSibling is exist.\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nTry to access renderer previousSilbing, not exist\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_",
    "labels": [
      "feature",
      "area: core",
      "core: DOM rendering",
      "feature: votes required"
    ],
    "comments": 3,
    "issue_creation_time": "2022-11-17T07:13:05",
    "first_answer_author": "angular-robot[bot]",
    "first_answer_body": "<!-- 6374bc4f-3ca6-4ebb-b416-250033c91ab5 -->\nThis feature request is now candidate for our backlog! In the next phase, the community has 60 days to upvote. If the request receives more than 20 upvotes, we'll move it to our consideration list.\n\nYou can find more details about the feature request process in our [documentation](https://github.com/angular/angular/blob/e29eb8abfbfdfb793e08ac88e14b7ba6d2ff2136/docs/GITHUB_PROCESS.md#feature-request-process).",
    "first_answer_creation_time": "2022-11-18T14:01:51",
    "was_closed_after_first_comment": false
  },
  {
    "title": "feat(router): improve typings for RouterLink boolean inputs",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/47100",
    "author_name": "EmmanuelRoux",
    "question_body": "### Which @angular/* package(s) are relevant/related to the feature request?\n\nrouter\n\n### Description\n\nBoolean inputs of `RouterLink` (and `RouterLinkWithHref`) should also accept empty string `''` (and coerce that value to `true`).\r\n\r\nActually, such inputs are already coerced to boolean when they are read. Instead, they should be coerced by a setter to allow simpler template bindings, such as `<a routerLink=\"/\" skipLocationChange>` instead of `<a routerLink=\"/\" [skipLocationChange]=\"true\">`. Currently, a compile-time error is thrown with the former syntax.\r\n\r\nThese inputs are: `preserveFragment`, `skipLocationChange` and `replaceUrl`.\n\n### Proposed solution\n\nAdd getter/setter to `preserveFragment`, `skipLocationChange` and `replaceUrl` fields of `RouterLink` and `RouterLinkWithHref` directives, for example:\r\n\r\n```ts\r\nprivate _skipLocationChange: boolean = false;\r\n\r\nget skipLocationChange(): boolean { return this._skipLocationChange; }\r\n\r\n@Input() set skipLocationChange(skipLocationChange: boolean | '' | null | undefined) {\r\n  this._skipLocationChange = coerceToBoolean(skipLocationChange);\r\n}\r\n```\n\n### Alternatives considered\n\nNo alternative, more verbose template syntax is required.",
    "labels": [
      "feature",
      "help wanted",
      "area: router",
      "feature: votes required"
    ],
    "comments": 2,
    "issue_creation_time": "2022-08-09T20:30:28",
    "first_answer_author": "angular-robot[bot]",
    "first_answer_body": "<!-- 6374bc4f-3ca6-4ebb-b416-250033c91ab5 -->\nThis feature request is now candidate for our backlog! In the next phase, the community has 60 days to upvote. If the request receives more than 20 upvotes, we'll move it to our consideration list.\n\nYou can find more details about the feature request process in our [documentation](https://github.com/angular/angular/blob/e29eb8abfbfdfb793e08ac88e14b7ba6d2ff2136/docs/GITHUB_PROCESS.md#feature-request-process).",
    "first_answer_creation_time": "2022-08-10T14:02:01",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Add an async variant of null validator",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/46362",
    "author_name": "framasev",
    "question_body": "### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nAngular has the null validator (`Validators.nullValidator`) but doesn't have an async variant for async validators. The null async validator would be useful in conditions: \r\n```typescript\r\nthis.control.setAsyncValidators([\r\n  condition1 ? customAsyncValidator1 : Validators.nullAsyncValidator,\r\n  condition2 ? customAsyncValidator2 : Validators.nullAsyncValidator,\r\n  ...\r\n]);\r\n```\n\n### Proposed solution\n\nAdd a new static `nullAsyncValidator` method to `Validators`:\r\n\r\n```typescript\r\nexport class Validators {\r\n  /**\r\n   * @description\r\n   * Async validator that performs no operation.\r\n   */\r\n  static nullAsyncValidator(control: AbstractControl): Observable<ValidationErrors|null> | Promise<ValidationErrors|null> {\r\n    return of(null);\r\n  }\r\n}\r\n```\n\n### Alternatives considered\n\nNo alternatives considered",
    "labels": [
      "feature",
      "area: forms",
      "forms: validators",
      "P4",
      "feature: insufficient votes"
    ],
    "comments": 4,
    "issue_creation_time": "2022-06-14T15:38:30",
    "first_answer_author": "angular-robot[bot]",
    "first_answer_body": "<!-- 6374bc4f-3ca6-4ebb-b416-250033c91ab5 -->\nThis feature request is now candidate for our backlog! In the next phase, the community has 60 days to upvote. If the request receives more than 20 upvotes, we'll move it to our consideration list.\n\nYou can find more details about the feature request process in our [documentation](https://github.com/angular/angular/blob/e29eb8abfbfdfb793e08ac88e14b7ba6d2ff2136/docs/GITHUB_PROCESS.md#feature-request-process).",
    "first_answer_creation_time": "2022-06-15T14:02:08",
    "was_closed_after_first_comment": false
  },
  {
    "title": "Handle push notification when the tab is on focus",
    "repo_name": "angular/angular",
    "url": "https://github.com/angular/angular/issues/44711",
    "author_name": "luiz-telles",
    "question_body": "### Which @angular/* package(s) are relevant/releated to the feature request?\n\nservice-worker\n\n### Description\n\nWhen the target tab is in focus, sometime we don't want get the popup with the notification.\n\n### Proposed solution\n\nMaybe we could set a callback in swPush instance. \r\n\r\nthis.swPush.pushNotificatioCB = function...\r\n\r\n\r\n\n\n### Alternatives considered\n\nmaybe how it's done on android\r\nhttps://firebase.google.com/docs/cloud-messaging/android/receive#sample-receive\r\n",
    "labels": [
      "feature",
      "area: service-worker",
      "feature: insufficient votes"
    ],
    "comments": 4,
    "issue_creation_time": "2022-01-13T17:59:42",
    "first_answer_author": "angular-robot[bot]",
    "first_answer_body": "<!-- 6374bc4f-3ca6-4ebb-b416-250033c91ab5 -->\nThis feature request is now candidate for our backlog! In the next phase, the community has 60 days to upvote. If the request receives more than 20 upvotes, we'll move it to our consideration list.\n\nYou can find more details about the feature request process in our [documentation](https://github.com/angular/angular/blob/e29eb8abfbfdfb793e08ac88e14b7ba6d2ff2136/docs/GITHUB_PROCESS.md#feature-request-process).",
    "first_answer_creation_time": "2022-01-14T14:01:46",
    "was_closed_after_first_comment": false
  }
]

File github_repo_fetcher.py
content
import asyncio
import datetime
import logging
import os
from typing import Optional, List

import aiohttp

from src.github_tickets.myissue import MyIssue, AnswerData

GITHUB_API_URL = "https://api.github.com"
GITHUB_TOKEN = os.getenv("GITHUB_ISSUE_PAT")

HEADERS = {
    "Authorization": f"token {GITHUB_TOKEN}"
}


class GithubRepoFetcher:
    def __init__(self,
                 repo_name: str,
                 positive_labels: Optional[List[str]] = None,
                 negative_labels: Optional[List[str]] = None,
                 max_issues: int = 20,
                 min_age: datetime.timedelta = datetime.timedelta(days=7),
                 max_age: datetime.timedelta = datetime.timedelta(days=365 * 10),
                 min_body_word_count: int = 20,
                 max_body_word_count: int = 150,
                 min_answer_word_count: int = 20,
                 max_answer_word_count: int = 150,
                 max_comments_count: int = 4):
        self.repo_name = repo_name
        self.positive_labels = positive_labels
        self.negative_labels = negative_labels
        self.max_issues = max_issues
        self.min_age = min_age
        self.max_age = max_age
        self.min_body_word_count = min_body_word_count
        self.max_body_word_count = max_body_word_count
        self.min_answer_word_count = min_answer_word_count
        self.max_answer_word_count = max_answer_word_count
        self.max_comments_count = max_comments_count

    def construct_search_query(self) -> str:
        query_parts = [f"repo:{self.repo_name}", "is:issue", "is:closed"]

        if self.positive_labels:
            query_parts += [f"label:{label}" for label in self.positive_labels]

        if self.negative_labels:
            query_parts += [f"-label:{label}" for label in self.negative_labels]

        query_parts.append(f"comments:<={self.max_comments_count}")

        return " ".join(query_parts)

    async def fetch_issue_data(self, session: aiohttp.ClientSession, issue_url: str) -> Optional[MyIssue]:
        async with (session.get(issue_url, headers=HEADERS) as response):
            if response.status == 200:
                issue_data = await response.json()
                if not self._is_valid_issue(issue_data):
                    return None

                first_answer = await self._get_first_answer(session, issue_data['comments_url'])
                if not first_answer:
                    return None

                first_answer_words = first_answer.body.split()
                if not self.min_answer_word_count <= len(first_answer_words) <= self.max_answer_word_count:
                    return None

                was_closed_after_first_comment = issue_data['state'] == 'closed' and issue_data['comments'] == 1

                return MyIssue(
                    title=issue_data['title'],
                    repo_name=self.repo_name,
                    url=issue_data['html_url'],
                    first_answer=first_answer,
                    author_name=issue_data['user']['login'],
                    question_body=issue_data['body'] or "",
                    labels=[label['name'] for label in issue_data['labels']],
                    comments=issue_data['comments'],
                    issue_creation_time=datetime.datetime.strptime(issue_data['created_at'], '%Y-%m-%dT%H:%M:%SZ'),
                    was_closed_after_first_comment=was_closed_after_first_comment
                )
            return None

    async def _get_first_answer(self, session: aiohttp.ClientSession, comments_url: str) -> Optional[AnswerData]:
        async with session.get(comments_url, headers=HEADERS, params={"per_page": 1}) as response:
            if response.status == 200:
                comments_data = await response.json()
                if comments_data:
                    first_answer_body = comments_data[0]['body']
                    first_answer_time = datetime.datetime.strptime(comments_data[0]['created_at'], '%Y-%m-%dT%H:%M:%SZ')
                    first_answer_author = comments_data[0]['user']['login']
                    return AnswerData(body=first_answer_body, creation_time=first_answer_time,
                                      author=first_answer_author)
            return None

    def _is_valid_issue(self, issue_data: dict) -> bool:
        body_words = (issue_data['body'] or "").split()
        return self.min_body_word_count <= len(body_words) <= self.max_body_word_count

    async def search_issues(self) -> List[MyIssue]:
        search_query = self.construct_search_query()
        logging.info(f"Searching for issues in {self.repo_name} with query: {search_query}")
        search_url = f"{GITHUB_API_URL}/search/issues"
        params = {"q": search_query, "per_page": 100}

        issues = []
        async with aiohttp.ClientSession() as session:
            while len(issues) < self.max_issues:
                async with session.get(search_url, headers=HEADERS, params=params) as response:
                    if response.status == 200:
                        search_results = await response.json()
                        issue_urls = [item['url'] for item in search_results['items']]

                        tasks = [self.fetch_issue_data(session, issue_url) for issue_url in issue_urls]
                        new_issues = await asyncio.gather(*tasks)
                        issues.extend([issue for issue in new_issues if issue is not None])

                        if 'next' not in response.links:
                            break

                        search_url = response.links['next']['url']
                    else:
                        logging.error(f"Failed to fetch issues from {self.repo_name}. Status: {response.status}")
                        break

        logging.info(f"Found {len(issues)} issues in {self.repo_name}")
        return issues


File issue_post_processing.py
content
import asyncio
import json

from github_tickets.ai_issue_test import IssueAI
from github_tickets.myissue import MyIssue


class IssuePostProcessing:
    def __init__(self):
        self.ai_issue_tester = IssueAI()

    def read_issues(self) -> list[MyIssue]:
        with open("all_issues.json") as file:
            issue_list = json.load(file)
        return [MyIssue.from_dict(issue) for issue in issue_list]

    async def get_ticket_like_issues(self):
        issues: list[MyIssue] = self.read_issues()

        ticket_like_issues = []

        is_ticket_like_issue = await asyncio.gather(*[self.ai_issue_tester.is_ticket_like(issue) for issue in issues])

        for issue, is_ticket_like in zip(issues, is_ticket_like_issue):
            if is_ticket_like:
                ticket_like_issues.append(issue)
        return ticket_like_issues

    async def save_ticket_like_issues(self):
        ticket_like_issues = await self.get_ticket_like_issues()
        with open("ticket_like_issues.json", "w") as file:
            json.dump([issue.to_dict() for issue in ticket_like_issues], file, indent=4)


File main.py
content
import asyncio
import logging

from github_tickets.github_repo_fetcher import GithubRepoFetcher
from github_tickets.issue_post_processing import IssuePostProcessing
from github_tickets.ticket_data_generator import TicketDataGenerator


def issue_post_processing():
    issue_post_processor = IssuePostProcessing()
    asyncio.run(issue_post_processor.save_ticket_like_issues())


def main():
    logging.basicConfig(level=logging.INFO, format='%(levelname)s - %(message)s')
    REPO_FETCHERS = [
        GithubRepoFetcher("microsoft/vscode",
                          positive_labels=["bug"],
                          negative_labels=["invalid"],
                          max_comments_count=1,
                          max_issues=50),
        GithubRepoFetcher(
            "microsoft/vscode",
            positive_labels=["feature-request"],
            negative_labels=["invalid"],
            max_issues=50),
        GithubRepoFetcher(
            "facebook/react",
            positive_labels=["Type: Bug"],
            negative_labels=["invalid", "duplicate", "wontfix", "spam"],
            max_issues=50
        ),
        GithubRepoFetcher(
            "nodejs/node",
            positive_labels=["confirmed-bug"],
            negative_labels=["invalid", "duplicate", "wontfix"],
            max_issues=50
        ),
        GithubRepoFetcher(
            "angular/angular",
            positive_labels=["bug"],
            negative_labels=["invalid", "duplicate", "wontfix", "obsolete"],
            max_issues=50
        ),
        GithubRepoFetcher(
            "angular/angular",
            positive_labels=["feature"],
            negative_labels=["invalid", "duplicate", "wontfix", "obsolete"],
            max_issues=50
        ),
        GithubRepoFetcher(
            "home-assistant/home-assistant.io",
            positive_labels=["type: bug"],
            negative_labels=["invalid", "duplicate", "wontfix", "stale"],
            max_issues=50
        ),
        GithubRepoFetcher(
            "home-assistant/core",
            positive_labels=["integration: feature request", "type: feature"],
            negative_labels=["invalid", "duplicate", "wontfix", "stale"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "docker/for-win",
            positive_labels=["bug"],
            negative_labels=["invalid", "duplicate", "wontfix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "kubernetes/kubernetes",
            positive_labels=["kind/bug", "kind/support"],
            negative_labels=["triage/duplicate", "triage/not-reproducible", "triage/needs-information"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "electron/electron",
            positive_labels=["bug"],
            negative_labels=["invalid", "duplicate", "wontfix", "obsolete"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "nginx/nginx",
            positive_labels=["bug", "enhancement"],
            negative_labels=["invalid", "duplicate", "wontfix", "notabug"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "twbs/bootstrap",
            positive_labels=["bug", "documentation"],
            negative_labels=["invalid", "duplicate", "wontfix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "twbs/bootstrap",
            positive_labels=["feature", "question"],
            negative_labels=["invalid", "duplicate", "wontfix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "laravel/framework",
            positive_labels=["bug", "help wanted"],
            negative_labels=["invalid", "duplicate", "wontfix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "laravel/framework",
            positive_labels=["enhancement", "question"],
            negative_labels=["invalid", "duplicate", "wontfix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "ansible/ansible",
            positive_labels=["bug", "docs"],
            negative_labels=["invalid", "duplicate", "wontfix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "raspberrypi/linux",
            positive_labels=["bug"],
            negative_labels=["invalid", "duplicate", "wontfix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "arduino/Arduino",
            positive_labels=["Type:Bug"],
            negative_labels=["Invalid", "Duplicate", "Won't Fix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "MarlinFirmware/Marlin",
            positive_labels=["Bug"],
            negative_labels=["Invalid", "Duplicate", "Won't Fix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "KiCad/kicad-source-mirror",
            positive_labels=["Bug", "Enhancement"],
            negative_labels=["Invalid", "Duplicate", "Won't Fix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "openwrt/openwrt",
            positive_labels=["Bug", "Feature"],
            negative_labels=["Invalid", "Duplicate", "Won't Fix"],
            max_issues=10
        ),
        GithubRepoFetcher(
            "openstreetmap/openstreetmap-website",
            positive_labels=["bug"],
            negative_labels=["invalid", "duplicate", "wontfix"],
            max_issues=10
        )
    ]

    asyncio.run(TicketDataGenerator(REPO_FETCHERS).generate_and_save("all_issues.json"))


if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO, format='%(levelname)s - %(message)s')
    # main()
    issue_post_processing()


File myissue.py
content
import datetime
from typing import Optional


class AnswerData:
    def __init__(self, author: str, body: str, creation_time: datetime.datetime):
        self.author = author
        self.body = body
        self.creation_time = creation_time

    def __repr__(self):
        return (f"Author: {self.author}\n"
                f"Body: {self.body[:200]}...\n"
                f"Creation Time: {self.creation_time}\n")


class MyIssue:
    def __init__(self,
                 repo_name: str,
                 title: str, url: str, author_name: str,
                 question_body: str, labels: list[str], comments: int,
                 issue_creation_time: datetime.datetime,
                 first_answer: AnswerData,
                 was_closed_after_first_comment: Optional[bool]):
        self.repo_name = repo_name
        self.title = title
        self.url = url
        self.first_answer = first_answer
        self.author_name = author_name
        self.question_body = question_body
        self.labels = labels
        self.comments = comments
        self.issue_creation_time = issue_creation_time
        self.was_closed_after_first_comment = was_closed_after_first_comment

    def __repr__(self):
        return (f"Issue Title: {self.title}\n"
                f"URL: {self.url}\n"
                f"Author: {self.author_name}\n"
                f"Question Body: {self.question_body[:200]}...\n"
                f"First Answer: {self.first_answer}\n"
                f"Was Closed After First Comment: {self.was_closed_after_first_comment}\n"
                f"Comments: {self.comments}\n"
                f"Labels: {', '.join(self.labels)}\n"
                f"Issue Creation Time: {self.issue_creation_time}\n")

    def to_dict(self):
        return {
            "title": self.title,
            "repo_name": self.repo_name,
            "url": self.url,
            "author_name": self.author_name,
            "question_body": self.question_body,
            "labels": self.labels,
            "comments": self.comments,
            "issue_creation_time": self.issue_creation_time.isoformat(),
            "first_answer_author": self.first_answer.author,
            "first_answer_body": self.first_answer.body,
            "first_answer_creation_time": self.first_answer.creation_time.isoformat(),
            "was_closed_after_first_comment": self.was_closed_after_first_comment
        }

    @classmethod
    def from_dict(cls, data):
        return cls(
            title=data["title"],
            url=data["url"],
            repo_name=data["repo_name"],
            author_name=data["author_name"],
            question_body=data["question_body"],
            labels=data["labels"],
            comments=data["comments"],
            issue_creation_time=datetime.datetime.fromisoformat(data["issue_creation_time"]),
            first_answer=AnswerData(
                author=data["first_answer_author"],
                body=data["first_answer_body"],
                creation_time=datetime.datetime.fromisoformat(data["first_answer_creation_time"])
            ),
            was_closed_after_first_comment=data["was_closed_after_first_comment"]
        )


File ticket_data_generator.py
content
import json
from typing import List

from github_tickets.github_repo_fetcher import GithubRepoFetcher


class TicketDataGenerator:
    def __init__(self, repo_fetchers: List[GithubRepoFetcher]):
        self.repo_fetchers = repo_fetchers

    async def generate_ticket_data(self):
        all_issues = []
        for repo_fetcher in self.repo_fetchers:
            issues = await repo_fetcher.search_issues()
            for issue in issues:
                all_issues.append(issue)
        return all_issues

    async def generate_and_save(self, filename):
        all_issues = await self.generate_ticket_data()
        all_issue_dicts = [issue.to_dict() for issue in all_issues]
        json.dump(all_issue_dicts, open(filename, 'w'))


File ticket_like_issues.json
content
[
    {
        "title": "NVDA reads REPL as 'replace'",
        "url": "https://github.com/microsoft/vscode/issues/223350",
        "author_name": "andreamah",
        "question_body": "Testing #222238\n\nNot sure whether this is something in your control, but I noticed that NVDA reads REPL as replace when it's reading this:\n\n![Image](https://github.com/user-attachments/assets/79efa574-894e-44a8-b15f-e693c2eadde4)\n\nMight be a bit confusing. ",
        "labels": [
            "bug",
            "verified",
            "accessibility",
            "polish",
            "insiders-released"
        ],
        "comments": 1,
        "issue_creation_time": "2024-07-23T16:34:59",
        "first_answer_author": "meganrogge",
        "first_answer_body": "Strange, but yeah, I can work around this by removing the acronym. \n\nNote to self and testers: this appears in both the debug console and debug view's accessibility help dialogs.",
        "first_answer_creation_time": "2024-07-23T20:39:53",
        "was_closed_after_first_comment": true
    },
    {
        "title": "Settings URL handling - \"Open Current File as Release Notes\" command not working",
        "url": "https://github.com/microsoft/vscode/issues/223291",
        "author_name": "lszomoru",
        "question_body": "Testing #223027\n\n* Created a new Markdown file - test.md\n* Added the release notes sample to the file and saved it\n* Invoked the \"Open Current File as Release Notes\" command and it failed\n      ![Image](https://github.com/user-attachments/assets/3daa0820-1363-4dc6-ada8-07fdab1ff87f)\n\nNot seeing anything in the developer tools console nor in the various output channel logs.",
        "labels": [
            "bug",
            "verified",
            "release-notes",
            "insiders-released"
        ],
        "comments": 1,
        "issue_creation_time": "2024-07-23T10:49:12",
        "first_answer_author": "alexr00",
        "first_answer_body": "I think that the document can't start with a header like that. To unblock testing, you can modify one of the existing release notes to include something similar to the example.",
        "first_answer_creation_time": "2024-07-23T11:57:12",
        "was_closed_after_first_comment": true
    },
    {
        "title": "How to close the annoying terminal status window, which show  information about PID, etc.?",
        "url": "https://github.com/microsoft/vscode/issues/221531",
        "author_name": "ZedRover",
        "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nI use Visual Studio Code to edit code on my MacOS. I often utilize VSCode Remote to run some Python code on a server. I usually open multiple terminal windows to conveniently view different code results. However, I frequently encounter the issue of being unable to select a specific terminal from the terminal tabs because that annoying terminal status windows always appears under my cursor when I move my mouse over a terminal, blocking my selection of the corresponding window. This fucking window moves very quickly, and I often find myself in the awkward situation of being unable to select the terminal. I wish I could completely disable this utterly useless prompt window.\r\n\r\n<img width=\"523\" alt=\"image\" src=\"https://github.com/user-attachments/assets/122b5db6-12ab-4167-ba50-c3ff610a7bdd\">\r\n\r\n\r\n",
        "labels": [
            "bug",
            "verified",
            "insiders-released",
            "terminal-tabs"
        ],
        "comments": 1,
        "issue_creation_time": "2024-07-12T05:54:54",
        "first_answer_author": "Tyriar",
        "first_answer_body": "From the thick border it looks like you're holding alt which will [lock its visibility}(https://code.visualstudio.com/docs/editor/accessibility#_hover-accessibility). But regardless, I agree we could position it better.",
        "first_answer_creation_time": "2024-07-12T17:20:38",
        "was_closed_after_first_comment": true
    },
    {
        "title": "VS Code 1.91 does not respect SourceControl.count",
        "url": "https://github.com/microsoft/vscode/issues/221450",
        "author_name": "Viknet",
        "question_body": "\nType: <b>Bug</b>\n\nStarting with version 1.91.0, the count badge on the Source Control icon no longer takes into account the `SourceControl.count` value and instead counts all SourceControlResourceGroup.\n\nSteps to reproduce:\n1. Set `git.countBadge` to \"tracked\"\n2. Create new untracked file in Git repository\n\nVS Code version: Code 1.91.0 (Universal) (ea1445cc7016315d0f5728f8e8b12a45dc0a7286, 2024-07-01T18:54:18.541Z)\nOS version: Darwin arm64 23.5.0\nModes:\n\n<details>\n<summary>System Info</summary>\n\n|Item|Value|\n|---|---|\n|CPUs|Apple M1 Pro (10 x 2400)|\n|GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled|\n|Load (avg)|2, 4, 4|\n|Memory (System)|32.00GB (1.32GB free)|\n|Process Argv|--enable-proposed-api jeanp413.open-remote-ssh --crash-reporter-id 481d6038-57fa-4033-9fd6-30428eae7833|\n|Screen Reader|no|\n|VM|0%|\n</details>Extensions: none\n<!-- generated by issue reporter -->",
        "labels": [
            "bug",
            "verified",
            "git"
        ],
        "comments": 1,
        "issue_creation_time": "2024-07-11T08:13:37",
        "first_answer_author": "Viknet",
        "first_answer_body": "It is not fixed in 1.91.1\r\n\r\nUPD: I see, it is fixed in insiders build 1.92.0.\r\nThank you!\r\n\r\n<img width=\"845\" alt=\"Screenshot 2024-07-22 at 13 56 23\" src=\"https://github.com/user-attachments/assets/7dda35ef-fc10-4a83-b7df-a147d3303bcd\">\r\n\r\n<details>\r\n  <summary>About</summary>\r\nVersion: 1.91.1 (Universal)\r\nCommit: f1e16e1e6214d7c44d078b1f0607b2388f29d729\r\nDate: 2024-07-09T22:07:54.982Z\r\nElectron: 29.4.0\r\nElectronBuildId: 9728852\r\nChromium: 122.0.6261.156\r\nNode.js: 20.9.0\r\nV8: 12.2.281.27-electron.0\r\nOS: Darwin arm64 23.5.0\r\n</details>",
        "first_answer_creation_time": "2024-07-22T11:00:16",
        "was_closed_after_first_comment": true
    },
    {
        "title": "Action button in quick input menu is not aligned ",
        "url": "https://github.com/microsoft/vscode/issues/221335",
        "author_name": "jmg-duarte",
        "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! bug_report_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- \ud83d\udd6e Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions -->\r\n<!-- \ud83d\udd0e Search existing issues to avoid creating duplicates. -->\r\n<!-- \ud83e\uddea Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ -->\r\n<!-- \ud83d\udca1 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. -->\r\n<!-- \ud83d\udd27 Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes/No\r\n\r\n<!-- \ud83e\ude93 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. -->\r\n<!-- \ud83d\udce3 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->\r\n- VS Code Version: 1.91.0\r\n- OS Version: MacOS Sonoma 14.5\r\n\r\nSteps to Reproduce:\r\n\r\n1. `Ctrl+R`\r\n2. Hover the action button\r\n3. See everything disaligned \r\n\r\n<img width=\"46\" alt=\"Screenshot 2024-07-10 at 09 48 44\" src=\"https://github.com/microsoft/vscode/assets/15343819/82f7899b-7545-45cc-9f7d-7471581f3495\">\r\n\r\nBigger and more demonstrative example\r\n<img width=\"86\" alt=\"Screenshot 2024-07-10 at 09 52 00\" src=\"https://github.com/microsoft/vscode/assets/15343819/b1da444e-795f-4bcf-9b8b-faad4d1b789a\">\r\n",
        "labels": [
            "bug",
            "verified",
            "quick-pick",
            "insiders-released"
        ],
        "comments": 1,
        "issue_creation_time": "2024-07-10T08:52:33",
        "first_answer_author": "tomasalagoa",
        "first_answer_body": "I seem to have the same issue on Windows 11, ~though in my case I cannot reproduce the cogwheel problem~.\r\nThe cogwheel icon has the same issue.\r\n\r\nVS Code Version: 1.91.1\r\nOS Version: Windows_NT x64 10.0.22621\r\n\r\n![Misaligned](https://github.com/user-attachments/assets/69935f81-3d78-434a-8b82-87d92aae8dc3)\r\n\r\n![Misaligned2](https://github.com/user-attachments/assets/06024c26-6184-41fb-96f4-1f0079ce8bf2)\r\n\r\n",
        "first_answer_creation_time": "2024-07-12T07:59:21",
        "was_closed_after_first_comment": true
    },
    {
        "title": "Undo triggers strange ghost text suggestion",
        "url": "https://github.com/microsoft/vscode/issues/216434",
        "author_name": "joaomoreno",
        "question_body": "1. Open https://github.com/microsoft/vscode/blob/a8e00a00ddd047fd5346408b434bcc67956754ee/src/vs/base/node/unc.js#L29\r\n2. Select `Set`, replace with `Map`\r\n3. Undo\r\n\r\n\ud83d\udc1b Ghost text suggestion pops up strangely spreading the letters of `Set` within the suggestion.\r\n\r\nhttps://github.com/user-attachments/assets/d95f3d93-b2db-40a2-8159-a1bef0b1829d\r\n\r\n",
        "labels": [
            "bug",
            "verified",
            "insiders-released",
            "inline-completions"
        ],
        "comments": 1,
        "issue_creation_time": "2024-06-18T09:51:40",
        "first_answer_author": "hediet",
        "first_answer_body": "To verify:\r\n* [Open this playground](https://microsoft.github.io/monaco-editor/playground.html?source=v0.50.0-dev-20240620&compareWith=v0.51.0-dev-20240621#XQAAAAKhFQAAAAAAAABBqQkHQ5NjdMjwa-jY7SIQ9S7DNlzs5W-mwj0fe1ZCDRFc9ws9XQE0SJE1jc2VKxhaLFIw9vEWSxW3yscxjlADRgmSaumWUF-TBOsVJ4S4FwfCDQb5-2uUHXTVAefbVSd9IzaZ_vv9VR9KugsKicUBqzt3JtKN8DfDx5R0r3ur2s54RBykaL4piZfz98N2xRf8gz92yhPCtslOlXZhOEcMeAyC_9QkQRuyxDUWy2d9tCOcmfEt3MxdHBoUe53CzTleB4ALPojvlvGzVvX8ODhXjkl4ORiXsyaxzwS8AnxPm8blXyeCOiVYuODdTlQKHw0j01cCDOwMyQYBJucqHoA62MYy1qI3pfW1uxhZrpR2IUVj54lYetQyzSo4tS9nFYQTUitI9f5QBOA3maen1QvbvMdqtla3xtk8zWgBZsOmf-d8T1qGD7kxtzPfeNnndn_1CUQolZm56o1j3kUnM8fQ7Hs6rJRW6QLg7sEUGvNagBidQYCxIOFqRxdNi5mar9E-SHTMxKZBO4oeoJGv4Tue_GY--92_e3FKD4sbGKB8kDWRi9Oz1f1DaapHE_ZZr70rVqcUfv2H1NE5__2Uo6Pbw7dieThDq7BJeSb4JuThS74HmDvzic1PG9v-NJTckAh8fzhkpP-uW9E3vRwURawkj5wZ3hVUNKJNwggeFVTnLOVBWZWqjeCkZ59dBXzrp0uJS56GA0SCR6Hnzc0Bh71Qg5qQ_1jXWYSTX78wntbH3bxdL8jtlzse7YHIv4PYxamNhk9833qHMl0REs5pMGXZq8LTs-iapNTx3UOmK6Y_g-QERG7oWnHbbahQu_ieQuwRt-aQ3I45pkt1uuL60QUyOxR4N1gYMinjwd0T40DqwlQjxVnhHVp3q6WGD5jRNf_1ewGCN9rH8uE3N_sfWQNOLabaIYAvGNBGPeU5G08N0i-M067MCJly4LWMUPoMQ3sGCqv905AXQdpCu_oRbxx_LW5V-MpFxjLABYpktT7AgXtqkxgjIU1OAesR0LdeuZdZcF8knyuHOLorpDFsk0v9pqdGUsphmTi9bXMWROEIAT5YIDn8f3ZcMM-QiHF5TXh_vF585a4FbDpN7mAXy9sJFSeew1F0eO-IWQqEQEn0fpCIHR17cBP_U9d5VefthgZ55DO3UtS4Pj3wfr2KuqpOlrlX4hazhwIfeDLRjw0_eLkte-zIbsR99_ZdxAXMYYUhawZ3ocTIYGqlyafjHhw-a8xjr_TV36UyK0NW7M-X1XIhh8AdUGrPhdF-P-secKCrMQLzfsrLhzTDHAUWLiLP272O9jxe7IWaxh-IIdTFFhT9dbWG01xrJPKytkVsJpGJ_heJ0zPiLKq-W8qVXMNjA40CXRjhKpcmI_aOFXTJ4EysnRALyN7r3LvE7vEcTsOmX_X0qsyox6saZLnfyG7v7V054x3Pq2wAIQuAo8cgOSJkEzI1IqTc_4mWEug2Irh4H2Hd4CI7xVWUtEv8dKMdUYt828S7cEwwoOqVfB0-nhzokmy5xsddiakjHKqkh_i_x_2FzYgIAG0qvwny4g9DSqEZ27bPaiX5OIJHwGsaxTLXBzcocRY8-j8R-QK7iJ4ptvD_jQTIoYCiRq46wRpD8tJ-4RKI7_oHscQffzy7R9rKEhfWDbCKKIi0wKt7vIxumimofQCv55ZpLdfp9QmcUWy_39COj9r0UZqT3N1s7RCByDxwAe2cAEBzlBh0LaKksUFHDdCi59wCEN54k1KSWMgUWqcswb4QD5e8-J-FFr2HbgBIYnJ0Y7rdXZ9efLfM-yo377MnDevrHcW5MhTqS3bUX3Ym9TkQplZLQYIs3TpkJVi5tmD_irNx2czYaOO22kgnFv--TzIWFZTgjk00klpF5KQ-A1eMc5QsrIi_dpwK6HGQC71ZeClYJrHE__ILwrtENVEvhxnhDrf1Keu4gbyj_1L9cypWwA6SUPxsG8L8dpBxSL8FkKUUKqW9sWlCYe6TwwgNQD4mZxfloHtY5sGp_z_zkiwegMI3CmkCOFOClEEKpfXdUprByBS8mPqPADJbWDkmRKTB3-_sEj_URqOehdoEMUq4GN_jHvvj3PKUw-TTl-OyVUBt_iEQOul1Q57r7Mb9o7K7uPLgWEljolSySj164yg3Ux3HyzJU3gUw6oD6XQ4JOgmvd7YFW1QFYFQkb-5AmOMDExgRXe9nfeG2_9s93osQUfpOcewVW54o29EYXV7hgUK_Rn0HOdsNS_3JaS1YYxDlnlNx3k72ygvxPqocvGq9UYKEcPe3Xao80vFum7CdVyK5D3uEkzLEj2u4QywXEruUbcdj__ysyn5p6o1m4NjoHVxewAlsJj0q3ytlL5XTzaKLmFGpDqnJG8QAF6XSwVlXfHJ0yFnXn2HCPzIYI_lm1ZgZBpAnlpfHAYWzyQEb5Hy07oYNi6rbVmFl8UoIKSKcjKF9-HxFKpW_jPq7QlLFJyk2NTnISThZ4XVFnVg8dmFLH4BvP7yNUp-TczpFn__tfKiF)\r\n* Double click on \"Set\" and type \"Map\", then undo.\r\n* Verify this is weird in the top editor and fixed in the bottom editor.",
        "first_answer_creation_time": "2024-06-20T09:39:22",
        "was_closed_after_first_comment": true
    },
    {
        "title": "accessibility signals are broken ",
        "url": "https://github.com/microsoft/vscode/issues/214798",
        "author_name": "meganrogge",
        "question_body": "Also, when `debouncePositionChanges` is `false`, there's still a delay per `accessibility.signalOptions.experimental.delays.*` which there should not be. \r\n\r\nThose should only apply when that is `true`.",
        "labels": [
            "bug",
            "important",
            "verified",
            "accessibility",
            "insiders-released"
        ],
        "comments": 1,
        "issue_creation_time": "2024-06-10T16:12:43",
        "first_answer_author": "amunger",
        "first_answer_body": "tested a few audio queues and they seem to be working. Let me know if there was something more specific to verify.",
        "first_answer_creation_time": "2024-06-26T18:02:25",
        "was_closed_after_first_comment": true
    },
    {
        "title": "not specifying `maxResults` on `findTextInFiles`->`textSearchProvider` will use `MAX_INT` for `maxResults`",
        "url": "https://github.com/microsoft/vscode/issues/214189",
        "author_name": "andreamah",
        "question_body": "repro steps:\r\n1. create an extension that implements `vscode.TextSearchProvider`.\r\n2. Make a call for `findTextInFiles` via a command or something in your extension. DON'T set a value for the `maxResults` option.\r\n3. Run your extension. Set a breakpoint in `provideTextSearchResults`.\r\n5. In the debugger, notice that `maxResults` is `9007199254740991`. Ideally, we have a better default maxResults (probably the default for textSearch- 20 000)",
        "labels": [
            "bug",
            "api",
            "verified",
            "search",
            "insiders-released"
        ],
        "comments": 1,
        "issue_creation_time": "2024-06-04T00:01:34",
        "first_answer_author": "VSCodeTriageBot",
        "first_answer_body": "<!-- AUTHOR_VERIFICATION_REQUEST -->\nThis bug has been fixed in the latest release of [VS Code Insiders](https://code.visualstudio.com/insiders/)!\n\n@andreamah, you can help us out by commenting `/verified` if things are now working as expected.\n\nIf things still don't seem right, please ensure you're on version 0354163c1c66b950b0762364f5b4cd37937b624a of Insiders (today's or later - you can use `Help: About` in the command palette to check), and leave a comment letting us know what isn't working as expected.\n\nHappy Coding!",
        "first_answer_creation_time": "2024-06-26T19:09:17",
        "was_closed_after_first_comment": true
    },
    {
        "title": "\"Build server\" failed: Unable to verify integrity of downloaded node.js binary because no SHA256 checksum was found!",
        "url": "https://github.com/microsoft/vscode/issues/213764",
        "author_name": "roblourens",
        "question_body": "https://dev.azure.com/monacotools/Monaco/_build/results?buildId=275552&view=logs&j=4801dce2-64f3-53d6-b366-d49a1977c639&t=12ed9f3f-1438-5538-b0b2-7a9cf536f94d\r\n\r\n```\r\n[21:33:25] Starting 'vscode-reh-win32-x64-min-ci'...\r\n[21:33:25] Starting node ...\r\n[21:33:25] Downloading node.js 20.11.1 win32 x64 from Microsoft/vscode-node...\r\n[21:33:25] Unable to verify integrity of downloaded node.js binary because no SHA256 checksum was found!\r\n[21:39:05] 'vscode-reh-win32-x64-min-ci' errored after 5.67 min\r\n[21:39:05] AbortError: This operation was aborted\r\n    at new DOMException (node:internal/per_context/domexception:53:5)\r\n    at AbortController.abort (node:internal/abort_controller:392:18)\r\n    at Timeout._onTimeout (D:\\a\\_work\\1\\s\\build\\lib\\fetch.js:44:53)\r\n    at listOnTimeout (node:internal/timers:573:17)\r\n    at process.processTimers (node:internal/timers:514:7)\r\nerror Command failed with exit code 1.\r\n```",
        "labels": [
            "bug",
            "verified",
            "vscode-build",
            "insiders-released"
        ],
        "comments": 1,
        "issue_creation_time": "2024-05-29T03:43:16",
        "first_answer_author": "deepak1556",
        "first_answer_body": "Abort was from a network timeout, re-run should be fine for this case. However, the following is an error which has been present for a while unnoticed\r\n\r\n> Unable to verify integrity of downloaded node.js binary because no SHA256 checksum was found!\r\n\r\nI will use this issue to address it.",
        "first_answer_creation_time": "2024-05-29T04:18:43",
        "was_closed_after_first_comment": true
    },
    {
        "title": "Missing documentation on signalOptions settings UI",
        "url": "https://github.com/microsoft/vscode/issues/213670",
        "author_name": "chrmarti",
        "question_body": "Testing #213344\n\nThere no documentation on signalOptions:\n![Image](https://github.com/microsoft/vscode/assets/9205389/f173c9b1-1bc8-4c33-80e8-70e48b3b7a47)\n\nThere is some documentation on the leaf properties in the JSON, but it is unclear what `\"general\"` refers to.",
        "labels": [
            "bug",
            "verified",
            "accessibility",
            "insiders-released"
        ],
        "comments": 1,
        "issue_creation_time": "2024-05-28T13:47:30",
        "first_answer_author": "connor4312",
        "first_answer_body": "I think the request was to have an overall description for the setting, as right now there's nothing until a user starts to complete properties in the settings.json\r\n\r\n<img width=\"636\" alt=\"image\" src=\"https://github.com/microsoft/vscode/assets/2230985/62bde016-0801-47a1-9f68-d2f60ac616b2\">\r\n",
        "first_answer_creation_time": "2024-05-30T22:16:49",
        "was_closed_after_first_comment": true
    },
    {
        "title": "Cannot use 'in' operator to search for 'command' in undefined",
        "url": "https://github.com/microsoft/vscode/issues/213363",
        "author_name": "VSCodeTriageBot",
        "question_body": "```javascript\nTypeError: Cannot use 'in' operator to search for 'command' in undefined\nat d.value in out/vs/workbench/workbench.desktop.main.js:1876:13267\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.fire in src/vs/base/common/event.ts:1187:9\nat d.value in src/vs/platform/quickinput/browser/quickInput.ts:930:35\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.z in src/vs/base/common/event.ts:1167:9\nat s.fire in src/vs/base/common/event.ts:1191:9\nat <anonymous> in src/vs/base/common/event.ts:127:84\nat d.value in src/vs/base/common/event.ts:178:85\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.z in src/vs/base/common/event.ts:1167:9\nat s.fire in src/vs/base/common/event.ts:1191:9\nat j.filter in src/vs/platform/quickinput/browser/quickInputTree.ts:1522:41\nat r.Mb in src/vs/platform/quickinput/browser/quickInput.ts:562:36\nat d.value in src/vs/platform/quickinput/browser/quickInput.ts:828:11\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.fire in src/vs/base/common/event.ts:1187:9\nat f.Z in src/vs/base/browser/ui/inputbox/inputBox.ts:537:21\nat HTMLInputElement.<anonymous> in src/vs/base/browser/ui/inputbox/inputBox.ts:199:39\n```\n[Go to Errors Site](https://errors.code.visualstudio.com/card?ch=dc96b837cf6bb4af9cd736aa3af08cf8279f7685&bH=143e7881-6564-68d1-f5f9-6626b876f6ee)",
        "labels": [
            "bug",
            "error-telemetry",
            "insiders-released"
        ],
        "comments": 1,
        "issue_creation_time": "2024-05-24T07:49:31",
        "first_answer_author": "TylerLeonhardt",
        "first_answer_body": "Looked through all references of `'command' in ...` this is the only one that is suspicious:\r\n\r\nhttps://github.com/microsoft/vscode/blob/dc96b837cf6bb4af9cd736aa3af08cf8279f7685/src/vs/workbench/contrib/terminal/browser/terminalRunRecentQuickPick.ts#L272\r\n\r\n* it's in a quick pick\r\n* it's not handling `undefined` if `activeItems` is empty (which is possible)\r\n\r\nEDIT: Easy repro steps:\r\n* Open `Run Recent Command`\r\n* `SHIFT+TAB` to have focus leave the list\r\n* Dev tools says the above error",
        "first_answer_creation_time": "2024-06-03T01:08:42",
        "was_closed_after_first_comment": true
    },
    {
        "title": "[Testing] testController.items.delete is not removing the item from the tree UI",
        "url": "https://github.com/microsoft/vscode/issues/213316",
        "author_name": "pavelfeldman",
        "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! bug_report_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- \ud83d\udd6e Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions -->\r\n<!-- \ud83d\udd0e Search existing issues to avoid creating duplicates. -->\r\n<!-- \ud83e\uddea Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ -->\r\n<!-- \ud83d\udca1 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. -->\r\n<!-- \ud83d\udd27 Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: No\r\n\r\n<!-- \ud83e\ude93 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. -->\r\n<!-- \ud83d\udce3 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->\r\n- VS Code Version: 1.90\r\n- OS Version: all\r\n\r\nSteps to Reproduce:\r\n\r\n`testController.items.delete` does not remove the item from the test tree.\r\n\r\nDownstream bug: https://github.com/microsoft/playwright/issues/30965\r\n\r\n// cc @connor4312 ",
        "labels": [
            "bug",
            "verified",
            "insiders-released",
            "testing"
        ],
        "comments": 1,
        "issue_creation_time": "2024-05-23T14:38:40",
        "first_answer_author": "VSCodeTriageBot",
        "first_answer_body": "Thanks for creating this issue! It looks like you may be using an old version of VS Code, the latest stable release is 1.89.1. Please try upgrading to the latest version and checking whether this issue remains.\n\nHappy Coding!",
        "first_answer_creation_time": "2024-05-23T14:38:58",
        "was_closed_after_first_comment": true
    },
    {
        "title": "Creating/Removing cells is broken",
        "url": "https://github.com/microsoft/vscode/issues/212600",
        "author_name": "ulugbekna",
        "question_body": "Cannot create new cells or remove them (I don't have repro steps; it usually stops working after first time creating a new cell)\n\n\n\nhttps://github.com/microsoft/vscode/assets/16353531/f9c08dd1-d64d-45f0-88c9-e6970b1bb604\n\n\n\nVersion: 1.90.0-insider\nCommit: 29aeab1cbb350107a7bd5962b5e7efe745e0a3ec\nDate: 2024-05-13T05:59:57.400Z\nElectron: 29.3.1\nElectronBuildId: 9464424\nChromium: 122.0.6261.156\nNode.js: 20.9.0\nV8: 12.2.281.27-electron.0\nOS: Darwin arm64 23.4.0\n",
        "labels": [
            "bug",
            "verified",
            "insiders-released",
            "notebook-commands"
        ],
        "comments": 1,
        "issue_creation_time": "2024-05-13T12:16:41",
        "first_answer_author": "amunger",
        "first_answer_body": "repro:\r\n\r\n1. create an empty cell in a notebook and execute it\r\n2. create a new code cell, clicking `+ code` or using keybindings a/b\r\n:bug: no new cell is added, existing cell's editor is focused",
        "first_answer_creation_time": "2024-05-13T16:24:38",
        "was_closed_after_first_comment": true
    }
]

File vscode_issues.json
content
[
  {
    "title": "Completing yarn.cmd from \"yarn\" should run the command",
    "url": "https://github.com/microsoft/vscode/issues/224485",
    "author_name": "Tyriar",
    "question_body": "Repro:\r\n\r\n1. Windows/pwsh\r\n2. Enable suggest\r\n3. Type `yarn`, you should see yarn.<somethign> as the top result\r\n4. Press enter, \ud83d\udc1b the completion is entered but it should also be run due to the `runOnEnter` default\r\n\r\n![Recording 2024-08-01 at 08 08 28](https://github.com/user-attachments/assets/08a3b1dd-2e16-449c-ba0a-145b8c313420)\r\n",
    "labels": [
      "bug",
      "unreleased",
      "terminal-suggest"
    ],
    "comments": 1,
    "issue_creation_time": "2024-08-01T15:09:40",
    "first_answer_author": "vs-code-engineering[bot]",
    "first_answer_body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE -->\n\t\t\tIssue marked as unreleased but unable to locate closing commit in issue timeline. You can manually reference a commit by commenting `\\closedWith someCommitSha`, or directly add the `insiders-released` label if you know this has already been releaased",
    "first_answer_creation_time": "2024-08-02T06:56:50",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Terminal suggest: Completions differ for args depending on when they are requested",
    "url": "https://github.com/microsoft/vscode/issues/224419",
    "author_name": "Tyriar",
    "question_body": "Repro:\r\n\r\n- pwsh\r\n- suggest enabled\r\n- type `git cl`, suggestions show including `clean`, `clone` and `citool`\r\n    <img width=\"164\" alt=\"Screenshot 2024-07-31 at 10 56 43\u202fAM\" src=\"https://github.com/user-attachments/assets/97890e89-0101-42b4-8233-cf9dc1e3eb2d\">\r\n- press escape\r\n- press ctrl+space, \ud83d\udc1b suggestions should be the same but now don't include `citool`\r\n    <img width=\"118\" alt=\"Screenshot 2024-07-31 at 10 56 51\u202fAM\" src=\"https://github.com/user-attachments/assets/43202209-f9e8-4124-968f-f4439b177cd2\">\r\n",
    "labels": [
      "bug",
      "terminal-suggest"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-31T17:57:20",
    "first_answer_author": "vs-code-engineering[bot]",
    "first_answer_body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE -->\n\t\t\tIssue marked as unreleased but unable to locate closing commit in issue timeline. You can manually reference a commit by commenting `\\closedWith someCommitSha`, or directly add the `insiders-released` label if you know this has already been releaased",
    "first_answer_creation_time": "2024-07-31T23:27:30",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Terminal suggest: Typing `-` in `cherry-` dismisses matching git suggestions",
    "url": "https://github.com/microsoft/vscode/issues/223883",
    "author_name": "Tyriar",
    "question_body": "- Windows/pwsh\r\n- Suggest enabled\r\n- Type `git cherry`, you should see completions for cherry-pick\r\n- Type `-`, \ud83d\udc1b the suggest widget hides\r\n\r\n![Recording 2024-07-26 at 06 15 31](https://github.com/user-attachments/assets/e9c7b867-d6a8-43c2-8560-e4b9c123556f)\r\n",
    "labels": [
      "bug",
      "terminal-suggest"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-26T13:16:42",
    "first_answer_author": "vs-code-engineering[bot]",
    "first_answer_body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE -->\n\t\t\tIssue marked as unreleased but unable to locate closing commit in issue timeline. You can manually reference a commit by commenting `\\closedWith someCommitSha`, or directly add the `insiders-released` label if you know this has already been releaased",
    "first_answer_creation_time": "2024-07-31T23:28:02",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Unsure about when to expect suggestions to automatically appear",
    "url": "https://github.com/microsoft/vscode/issues/223420",
    "author_name": "andreamah",
    "question_body": "Testing #223130\n\nI notice that sometimes, I need to trigger the suggest widget manually (ctrl+space). For example, I have` git add .\\.vscode\\notebooks\\` typed, and I need to ctrl+space to see the filenames.",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "terminal-suggest"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-23T22:55:02",
    "first_answer_author": "Tyriar",
    "first_answer_body": "Can repro. This isn't meant to be possible as completions should be requested again after the `\\` is typed:\r\n\r\n![image](https://github.com/user-attachments/assets/9d18e808-ce1a-40f6-934c-5547cca7075f)\r\n",
    "first_answer_creation_time": "2024-07-24T13:42:31",
    "was_closed_after_first_comment": true
  },
  {
    "title": "NVDA reads REPL as 'replace'",
    "url": "https://github.com/microsoft/vscode/issues/223350",
    "author_name": "andreamah",
    "question_body": "Testing #222238\n\nNot sure whether this is something in your control, but I noticed that NVDA reads REPL as replace when it's reading this:\n\n![Image](https://github.com/user-attachments/assets/79efa574-894e-44a8-b15f-e693c2eadde4)\n\nMight be a bit confusing. ",
    "labels": [
      "bug",
      "verified",
      "accessibility",
      "polish",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-23T16:34:59",
    "first_answer_author": "meganrogge",
    "first_answer_body": "Strange, but yeah, I can work around this by removing the acronym. \n\nNote to self and testers: this appears in both the debug console and debug view's accessibility help dialogs.",
    "first_answer_creation_time": "2024-07-23T20:39:53",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Handling of cells outside of viewport",
    "url": "https://github.com/microsoft/vscode/issues/223344",
    "author_name": "kieferrm",
    "question_body": "Testing #223152\n\n1) select two cells\n2) scroll the lower cell (cell 2) out of the viewport\n3) cmd+/ \n4) scroll cell 2 partially into the viewport -> only cell 1 has been commented\n5) cmd+/ -> cell 1 has been uncommented, cell 2 has been commented\n\nAfter step 3 I'd expect both cells to be commented and after step 5 both to be uncommented",
    "labels": [
      "bug",
      "notebook-commands"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-23T16:11:51",
    "first_answer_author": "Yoyokrazy",
    "first_answer_body": "Need to move the toggle comments action off of the editor command. Case is simpler overall since we are not operating on cursors or a specific selection. \r\n\r\nRelying on `editor.executeCommands()` is the limitation, as we don't have editors outside of the viewport. We can construct these edits in a similar way to a `LineCommentCommand` and simply apply them to the model, allowing us to apply to cells outside of the viewport",
    "first_answer_creation_time": "2024-07-25T22:34:56",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Settings URL handling - \"Open Current File as Release Notes\" command not working",
    "url": "https://github.com/microsoft/vscode/issues/223291",
    "author_name": "lszomoru",
    "question_body": "Testing #223027\n\n* Created a new Markdown file - test.md\n* Added the release notes sample to the file and saved it\n* Invoked the \"Open Current File as Release Notes\" command and it failed\n      ![Image](https://github.com/user-attachments/assets/3daa0820-1363-4dc6-ada8-07fdab1ff87f)\n\nNot seeing anything in the developer tools console nor in the various output channel logs.",
    "labels": [
      "bug",
      "verified",
      "release-notes",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-23T10:49:12",
    "first_answer_author": "alexr00",
    "first_answer_body": "I think that the document can't start with a header like that. To unblock testing, you can modify one of the existing release notes to include something similar to the example.",
    "first_answer_creation_time": "2024-07-23T11:57:12",
    "was_closed_after_first_comment": true
  },
  {
    "title": "How to close the annoying terminal status window, which show  information about PID, etc.?",
    "url": "https://github.com/microsoft/vscode/issues/221531",
    "author_name": "ZedRover",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! feature_request_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nI use Visual Studio Code to edit code on my MacOS. I often utilize VSCode Remote to run some Python code on a server. I usually open multiple terminal windows to conveniently view different code results. However, I frequently encounter the issue of being unable to select a specific terminal from the terminal tabs because that annoying terminal status windows always appears under my cursor when I move my mouse over a terminal, blocking my selection of the corresponding window. This fucking window moves very quickly, and I often find myself in the awkward situation of being unable to select the terminal. I wish I could completely disable this utterly useless prompt window.\r\n\r\n<img width=\"523\" alt=\"image\" src=\"https://github.com/user-attachments/assets/122b5db6-12ab-4167-ba50-c3ff610a7bdd\">\r\n\r\n\r\n",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "terminal-tabs"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-12T05:54:54",
    "first_answer_author": "Tyriar",
    "first_answer_body": "From the thick border it looks like you're holding alt which will [lock its visibility}(https://code.visualstudio.com/docs/editor/accessibility#_hover-accessibility). But regardless, I agree we could position it better.",
    "first_answer_creation_time": "2024-07-12T17:20:38",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Breakpoints stuck under line numbers",
    "url": "https://github.com/microsoft/vscode/issues/221478",
    "author_name": "lramos15",
    "question_body": "I notice on the latest insiders now when I start and stop debugging the breakpoints are ending up below the line numbers instead of the gutter\n\n\n\n![Image](https://github.com/user-attachments/assets/7d8c4836-b50c-4464-9ba2-9c85bac44861)\n\n",
    "labels": [
      "bug",
      "verified",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-11T15:36:15",
    "first_answer_author": "connor4312",
    "first_answer_body": "@justschen this CSS rule applies to all glyph margin widgets, maybe you want to scope it more specifically for the lightbulb widget?\r\n\r\nhttps://github.com/microsoft/vscode/blob/31f831310c643ae03c4b84124b5a427d0bed0483/src/vs/editor/contrib/codeAction/browser/lightBulbWidget.css#L48-L53\r\n\r\nThis is overriding what was the [default styling](https://github.com/microsoft/vscode/blob/31f831310c643ae03c4b84124b5a427d0bed0483/src/vs/editor/browser/viewParts/glyphMargin/glyphMargin.css#L11-L20) for glyph margin widgets.",
    "first_answer_creation_time": "2024-07-11T15:53:35",
    "was_closed_after_first_comment": true
  },
  {
    "title": "VS Code 1.91 does not respect SourceControl.count",
    "url": "https://github.com/microsoft/vscode/issues/221450",
    "author_name": "Viknet",
    "question_body": "\nType: <b>Bug</b>\n\nStarting with version 1.91.0, the count badge on the Source Control icon no longer takes into account the `SourceControl.count` value and instead counts all SourceControlResourceGroup.\n\nSteps to reproduce:\n1. Set `git.countBadge` to \"tracked\"\n2. Create new untracked file in Git repository\n\nVS Code version: Code 1.91.0 (Universal) (ea1445cc7016315d0f5728f8e8b12a45dc0a7286, 2024-07-01T18:54:18.541Z)\nOS version: Darwin arm64 23.5.0\nModes:\n\n<details>\n<summary>System Info</summary>\n\n|Item|Value|\n|---|---|\n|CPUs|Apple M1 Pro (10 x 2400)|\n|GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled|\n|Load (avg)|2, 4, 4|\n|Memory (System)|32.00GB (1.32GB free)|\n|Process Argv|--enable-proposed-api jeanp413.open-remote-ssh --crash-reporter-id 481d6038-57fa-4033-9fd6-30428eae7833|\n|Screen Reader|no|\n|VM|0%|\n</details>Extensions: none\n<!-- generated by issue reporter -->",
    "labels": [
      "bug",
      "verified",
      "git"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-11T08:13:37",
    "first_answer_author": "Viknet",
    "first_answer_body": "It is not fixed in 1.91.1\r\n\r\nUPD: I see, it is fixed in insiders build 1.92.0.\r\nThank you!\r\n\r\n<img width=\"845\" alt=\"Screenshot 2024-07-22 at 13 56 23\" src=\"https://github.com/user-attachments/assets/7dda35ef-fc10-4a83-b7df-a147d3303bcd\">\r\n\r\n<details>\r\n  <summary>About</summary>\r\nVersion: 1.91.1 (Universal)\r\nCommit: f1e16e1e6214d7c44d078b1f0607b2388f29d729\r\nDate: 2024-07-09T22:07:54.982Z\r\nElectron: 29.4.0\r\nElectronBuildId: 9728852\r\nChromium: 122.0.6261.156\r\nNode.js: 20.9.0\r\nV8: 12.2.281.27-electron.0\r\nOS: Darwin arm64 23.5.0\r\n</details>",
    "first_answer_creation_time": "2024-07-22T11:00:16",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Action button in quick input menu is not aligned ",
    "url": "https://github.com/microsoft/vscode/issues/221335",
    "author_name": "jmg-duarte",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! bug_report_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- \ud83d\udd6e Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions -->\r\n<!-- \ud83d\udd0e Search existing issues to avoid creating duplicates. -->\r\n<!-- \ud83e\uddea Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ -->\r\n<!-- \ud83d\udca1 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. -->\r\n<!-- \ud83d\udd27 Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes/No\r\n\r\n<!-- \ud83e\ude93 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. -->\r\n<!-- \ud83d\udce3 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->\r\n- VS Code Version: 1.91.0\r\n- OS Version: MacOS Sonoma 14.5\r\n\r\nSteps to Reproduce:\r\n\r\n1. `Ctrl+R`\r\n2. Hover the action button\r\n3. See everything disaligned \r\n\r\n<img width=\"46\" alt=\"Screenshot 2024-07-10 at 09 48 44\" src=\"https://github.com/microsoft/vscode/assets/15343819/82f7899b-7545-45cc-9f7d-7471581f3495\">\r\n\r\nBigger and more demonstrative example\r\n<img width=\"86\" alt=\"Screenshot 2024-07-10 at 09 52 00\" src=\"https://github.com/microsoft/vscode/assets/15343819/b1da444e-795f-4bcf-9b8b-faad4d1b789a\">\r\n",
    "labels": [
      "bug",
      "verified",
      "quick-pick",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-07-10T08:52:33",
    "first_answer_author": "tomasalagoa",
    "first_answer_body": "I seem to have the same issue on Windows 11, ~though in my case I cannot reproduce the cogwheel problem~.\r\nThe cogwheel icon has the same issue.\r\n\r\nVS Code Version: 1.91.1\r\nOS Version: Windows_NT x64 10.0.22621\r\n\r\n![Misaligned](https://github.com/user-attachments/assets/69935f81-3d78-434a-8b82-87d92aae8dc3)\r\n\r\n![Misaligned2](https://github.com/user-attachments/assets/06024c26-6184-41fb-96f4-1f0079ce8bf2)\r\n\r\n",
    "first_answer_creation_time": "2024-07-12T07:59:21",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Bold text is streamed with asterisks and changed to bold font later + thinking icon flickers as it is turning",
    "url": "https://github.com/microsoft/vscode/issues/217946",
    "author_name": "aiday-mar",
    "question_body": "Testing #217639\r\n\r\nI created a new notebook with the `/newNotebook` command. As the response is streaming in, you see bold text streamed in with asterisks in front, when the closing asterisks are found, the corresponding text is changed to bold text. I am wondering if this can somehow be changed so that we directly stream in bold text on encountering asterisks?\r\n\r\nAfter the text is streamed in, there is a turning circular icon that appear that has the associated text `thinking`. The icon flickers as it is turning. The icon movement is not smooth.\r\n\r\nhttps://github.com/microsoft/vscode/assets/61460952/832d4bf5-ed42-462f-9cce-16f62f9f9f52\r\n\r\nThe log in the Window output is appended here.\r\n\r\n[testing4.docx](https://github.com/user-attachments/files/15969923/testing4.docx)\r\n",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "chat"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-25T10:55:55",
    "first_answer_author": "roblourens",
    "first_answer_body": "Problem 1: we fix up markdown lists that use `-` and numbers, but not `*` \ud83d\ude20 \n\nProblem 2: the intent is sending duplicate progress events: https://github.com/microsoft/vscode-copilot/issues/6482",
    "first_answer_creation_time": "2024-06-26T18:03:13",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Undo triggers strange ghost text suggestion",
    "url": "https://github.com/microsoft/vscode/issues/216434",
    "author_name": "joaomoreno",
    "question_body": "1. Open https://github.com/microsoft/vscode/blob/a8e00a00ddd047fd5346408b434bcc67956754ee/src/vs/base/node/unc.js#L29\r\n2. Select `Set`, replace with `Map`\r\n3. Undo\r\n\r\n\ud83d\udc1b Ghost text suggestion pops up strangely spreading the letters of `Set` within the suggestion.\r\n\r\nhttps://github.com/user-attachments/assets/d95f3d93-b2db-40a2-8159-a1bef0b1829d\r\n\r\n",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "inline-completions"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-18T09:51:40",
    "first_answer_author": "hediet",
    "first_answer_body": "To verify:\r\n* [Open this playground](https://microsoft.github.io/monaco-editor/playground.html?source=v0.50.0-dev-20240620&compareWith=v0.51.0-dev-20240621#XQAAAAKhFQAAAAAAAABBqQkHQ5NjdMjwa-jY7SIQ9S7DNlzs5W-mwj0fe1ZCDRFc9ws9XQE0SJE1jc2VKxhaLFIw9vEWSxW3yscxjlADRgmSaumWUF-TBOsVJ4S4FwfCDQb5-2uUHXTVAefbVSd9IzaZ_vv9VR9KugsKicUBqzt3JtKN8DfDx5R0r3ur2s54RBykaL4piZfz98N2xRf8gz92yhPCtslOlXZhOEcMeAyC_9QkQRuyxDUWy2d9tCOcmfEt3MxdHBoUe53CzTleB4ALPojvlvGzVvX8ODhXjkl4ORiXsyaxzwS8AnxPm8blXyeCOiVYuODdTlQKHw0j01cCDOwMyQYBJucqHoA62MYy1qI3pfW1uxhZrpR2IUVj54lYetQyzSo4tS9nFYQTUitI9f5QBOA3maen1QvbvMdqtla3xtk8zWgBZsOmf-d8T1qGD7kxtzPfeNnndn_1CUQolZm56o1j3kUnM8fQ7Hs6rJRW6QLg7sEUGvNagBidQYCxIOFqRxdNi5mar9E-SHTMxKZBO4oeoJGv4Tue_GY--92_e3FKD4sbGKB8kDWRi9Oz1f1DaapHE_ZZr70rVqcUfv2H1NE5__2Uo6Pbw7dieThDq7BJeSb4JuThS74HmDvzic1PG9v-NJTckAh8fzhkpP-uW9E3vRwURawkj5wZ3hVUNKJNwggeFVTnLOVBWZWqjeCkZ59dBXzrp0uJS56GA0SCR6Hnzc0Bh71Qg5qQ_1jXWYSTX78wntbH3bxdL8jtlzse7YHIv4PYxamNhk9833qHMl0REs5pMGXZq8LTs-iapNTx3UOmK6Y_g-QERG7oWnHbbahQu_ieQuwRt-aQ3I45pkt1uuL60QUyOxR4N1gYMinjwd0T40DqwlQjxVnhHVp3q6WGD5jRNf_1ewGCN9rH8uE3N_sfWQNOLabaIYAvGNBGPeU5G08N0i-M067MCJly4LWMUPoMQ3sGCqv905AXQdpCu_oRbxx_LW5V-MpFxjLABYpktT7AgXtqkxgjIU1OAesR0LdeuZdZcF8knyuHOLorpDFsk0v9pqdGUsphmTi9bXMWROEIAT5YIDn8f3ZcMM-QiHF5TXh_vF585a4FbDpN7mAXy9sJFSeew1F0eO-IWQqEQEn0fpCIHR17cBP_U9d5VefthgZ55DO3UtS4Pj3wfr2KuqpOlrlX4hazhwIfeDLRjw0_eLkte-zIbsR99_ZdxAXMYYUhawZ3ocTIYGqlyafjHhw-a8xjr_TV36UyK0NW7M-X1XIhh8AdUGrPhdF-P-secKCrMQLzfsrLhzTDHAUWLiLP272O9jxe7IWaxh-IIdTFFhT9dbWG01xrJPKytkVsJpGJ_heJ0zPiLKq-W8qVXMNjA40CXRjhKpcmI_aOFXTJ4EysnRALyN7r3LvE7vEcTsOmX_X0qsyox6saZLnfyG7v7V054x3Pq2wAIQuAo8cgOSJkEzI1IqTc_4mWEug2Irh4H2Hd4CI7xVWUtEv8dKMdUYt828S7cEwwoOqVfB0-nhzokmy5xsddiakjHKqkh_i_x_2FzYgIAG0qvwny4g9DSqEZ27bPaiX5OIJHwGsaxTLXBzcocRY8-j8R-QK7iJ4ptvD_jQTIoYCiRq46wRpD8tJ-4RKI7_oHscQffzy7R9rKEhfWDbCKKIi0wKt7vIxumimofQCv55ZpLdfp9QmcUWy_39COj9r0UZqT3N1s7RCByDxwAe2cAEBzlBh0LaKksUFHDdCi59wCEN54k1KSWMgUWqcswb4QD5e8-J-FFr2HbgBIYnJ0Y7rdXZ9efLfM-yo377MnDevrHcW5MhTqS3bUX3Ym9TkQplZLQYIs3TpkJVi5tmD_irNx2czYaOO22kgnFv--TzIWFZTgjk00klpF5KQ-A1eMc5QsrIi_dpwK6HGQC71ZeClYJrHE__ILwrtENVEvhxnhDrf1Keu4gbyj_1L9cypWwA6SUPxsG8L8dpBxSL8FkKUUKqW9sWlCYe6TwwgNQD4mZxfloHtY5sGp_z_zkiwegMI3CmkCOFOClEEKpfXdUprByBS8mPqPADJbWDkmRKTB3-_sEj_URqOehdoEMUq4GN_jHvvj3PKUw-TTl-OyVUBt_iEQOul1Q57r7Mb9o7K7uPLgWEljolSySj164yg3Ux3HyzJU3gUw6oD6XQ4JOgmvd7YFW1QFYFQkb-5AmOMDExgRXe9nfeG2_9s93osQUfpOcewVW54o29EYXV7hgUK_Rn0HOdsNS_3JaS1YYxDlnlNx3k72ygvxPqocvGq9UYKEcPe3Xao80vFum7CdVyK5D3uEkzLEj2u4QywXEruUbcdj__ysyn5p6o1m4NjoHVxewAlsJj0q3ytlL5XTzaKLmFGpDqnJG8QAF6XSwVlXfHJ0yFnXn2HCPzIYI_lm1ZgZBpAnlpfHAYWzyQEb5Hy07oYNi6rbVmFl8UoIKSKcjKF9-HxFKpW_jPq7QlLFJyk2NTnISThZ4XVFnVg8dmFLH4BvP7yNUp-TczpFn__tfKiF)\r\n* Double click on \"Set\" and type \"Map\", then undo.\r\n* Verify this is weird in the top editor and fixed in the bottom editor.",
    "first_answer_creation_time": "2024-06-20T09:39:22",
    "was_closed_after_first_comment": true
  },
  {
    "title": "accessibility signals are broken ",
    "url": "https://github.com/microsoft/vscode/issues/214798",
    "author_name": "meganrogge",
    "question_body": "Also, when `debouncePositionChanges` is `false`, there's still a delay per `accessibility.signalOptions.experimental.delays.*` which there should not be. \r\n\r\nThose should only apply when that is `true`.",
    "labels": [
      "bug",
      "important",
      "verified",
      "accessibility",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-10T16:12:43",
    "first_answer_author": "amunger",
    "first_answer_body": "tested a few audio queues and they seem to be working. Let me know if there was something more specific to verify.",
    "first_answer_creation_time": "2024-06-26T18:02:25",
    "was_closed_after_first_comment": true
  },
  {
    "title": "not specifying `maxResults` on `findTextInFiles`->`textSearchProvider` will use `MAX_INT` for `maxResults`",
    "url": "https://github.com/microsoft/vscode/issues/214189",
    "author_name": "andreamah",
    "question_body": "repro steps:\r\n1. create an extension that implements `vscode.TextSearchProvider`.\r\n2. Make a call for `findTextInFiles` via a command or something in your extension. DON'T set a value for the `maxResults` option.\r\n3. Run your extension. Set a breakpoint in `provideTextSearchResults`.\r\n5. In the debugger, notice that `maxResults` is `9007199254740991`. Ideally, we have a better default maxResults (probably the default for textSearch- 20 000)",
    "labels": [
      "bug",
      "api",
      "verified",
      "search",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-06-04T00:01:34",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "<!-- AUTHOR_VERIFICATION_REQUEST -->\nThis bug has been fixed in the latest release of [VS Code Insiders](https://code.visualstudio.com/insiders/)!\n\n@andreamah, you can help us out by commenting `/verified` if things are now working as expected.\n\nIf things still don't seem right, please ensure you're on version 0354163c1c66b950b0762364f5b4cd37937b624a of Insiders (today's or later - you can use `Help: About` in the command palette to check), and leave a comment letting us know what isn't working as expected.\n\nHappy Coding!",
    "first_answer_creation_time": "2024-06-26T19:09:17",
    "was_closed_after_first_comment": true
  },
  {
    "title": "\"Build server\" failed: Unable to verify integrity of downloaded node.js binary because no SHA256 checksum was found!",
    "url": "https://github.com/microsoft/vscode/issues/213764",
    "author_name": "roblourens",
    "question_body": "https://dev.azure.com/monacotools/Monaco/_build/results?buildId=275552&view=logs&j=4801dce2-64f3-53d6-b366-d49a1977c639&t=12ed9f3f-1438-5538-b0b2-7a9cf536f94d\r\n\r\n```\r\n[21:33:25] Starting 'vscode-reh-win32-x64-min-ci'...\r\n[21:33:25] Starting node ...\r\n[21:33:25] Downloading node.js 20.11.1 win32 x64 from Microsoft/vscode-node...\r\n[21:33:25] Unable to verify integrity of downloaded node.js binary because no SHA256 checksum was found!\r\n[21:39:05] 'vscode-reh-win32-x64-min-ci' errored after 5.67 min\r\n[21:39:05] AbortError: This operation was aborted\r\n    at new DOMException (node:internal/per_context/domexception:53:5)\r\n    at AbortController.abort (node:internal/abort_controller:392:18)\r\n    at Timeout._onTimeout (D:\\a\\_work\\1\\s\\build\\lib\\fetch.js:44:53)\r\n    at listOnTimeout (node:internal/timers:573:17)\r\n    at process.processTimers (node:internal/timers:514:7)\r\nerror Command failed with exit code 1.\r\n```",
    "labels": [
      "bug",
      "verified",
      "vscode-build",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-29T03:43:16",
    "first_answer_author": "deepak1556",
    "first_answer_body": "Abort was from a network timeout, re-run should be fine for this case. However, the following is an error which has been present for a while unnoticed\r\n\r\n> Unable to verify integrity of downloaded node.js binary because no SHA256 checksum was found!\r\n\r\nI will use this issue to address it.",
    "first_answer_creation_time": "2024-05-29T04:18:43",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Missing documentation on signalOptions settings UI",
    "url": "https://github.com/microsoft/vscode/issues/213670",
    "author_name": "chrmarti",
    "question_body": "Testing #213344\n\nThere no documentation on signalOptions:\n![Image](https://github.com/microsoft/vscode/assets/9205389/f173c9b1-1bc8-4c33-80e8-70e48b3b7a47)\n\nThere is some documentation on the leaf properties in the JSON, but it is unclear what `\"general\"` refers to.",
    "labels": [
      "bug",
      "verified",
      "accessibility",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-28T13:47:30",
    "first_answer_author": "connor4312",
    "first_answer_body": "I think the request was to have an overall description for the setting, as right now there's nothing until a user starts to complete properties in the settings.json\r\n\r\n<img width=\"636\" alt=\"image\" src=\"https://github.com/microsoft/vscode/assets/2230985/62bde016-0801-47a1-9f68-d2f60ac616b2\">\r\n",
    "first_answer_creation_time": "2024-05-30T22:16:49",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Uncaught TypeError: Cannot read properties of undefined (reading 'activeElement')",
    "url": "https://github.com/microsoft/vscode/issues/213649",
    "author_name": "jrieken",
    "question_body": "Testing #213597\r\n\r\n* open issue report on web\r\n* go the extension flow, select a extension\r\n* click into the title input field\r\n* :bug: the console shows the error below \ud83d\udc47 \r\n\r\n```\r\nUncaught TypeError: Cannot read properties of undefined (reading 'activeElement')\r\n    at ot.m (workbench.web.main.js:135:43591)\r\n    at new ot (workbench.web.main.js:135:43760)\r\n    at xe (workbench.web.main.js:135:44211)\r\n    at b.ib (workbench.web.main.js:2406:7508)\r\n    at workbench.web.main.js:2406:5805\r\n```",
    "labels": [
      "bug",
      "verified",
      "issue-reporter"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-28T10:11:54",
    "first_answer_author": "justschen",
    "first_answer_body": "@jrieken can you check this now? I don't see anything anymore and i believe it's fixed with the new DOM checks that just got merged to fix https://github.com/microsoft/vscode/issues/213645 ",
    "first_answer_creation_time": "2024-05-29T23:05:01",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Ending the active session gives undefined activeStackItem even if there is another session",
    "url": "https://github.com/microsoft/vscode/issues/213646",
    "author_name": "sandy081",
    "question_body": "Testing #213603\n\nHere is the extension code listening to activeStackItem\n\n```ts\ncontext.subscriptions.push(\n        vscode.debug.onDidChangeActiveStackItem(session => {\n            console.log('Active debug stack item changed: ', vscode.debug.activeStackItem);\n        })\n    );\n```\n\nSteps\n\n- Open a workspace with two python files\n- Install Python Extension\n- Open file 1 with content `print ('Hello File 1')`. Keep a break point on this line and start debugging this file. As expected break point hits and the debugging extension logs this stackItem.\n- Open file 2 with content `print ('Hello File 2')`. Keep a break point on this line and start debugging this file. As expected break point hits and the debugging extension logs this stackItem.\n- Resume the second session to continue.\n\n\ud83d\udc1b Extension logs `undefined` first for `activeStackItem` and after it logs the stack item of first session\n\n",
    "labels": [
      "bug",
      "debug"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-28T10:01:36",
    "first_answer_author": "connor4312",
    "first_answer_body": "Thanks for the bug. This actually represents the view state accurately at the moment: we focus the session, not a thread, and this is not represented in the API. I'll see if consumers run into a case where they need this info, but unless I hear something from consumers I plan to leave as-is.",
    "first_answer_creation_time": "2024-05-30T20:59:33",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Cannot use 'in' operator to search for 'command' in undefined",
    "url": "https://github.com/microsoft/vscode/issues/213363",
    "author_name": "VSCodeTriageBot",
    "question_body": "```javascript\nTypeError: Cannot use 'in' operator to search for 'command' in undefined\nat d.value in out/vs/workbench/workbench.desktop.main.js:1876:13267\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.fire in src/vs/base/common/event.ts:1187:9\nat d.value in src/vs/platform/quickinput/browser/quickInput.ts:930:35\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.z in src/vs/base/common/event.ts:1167:9\nat s.fire in src/vs/base/common/event.ts:1191:9\nat <anonymous> in src/vs/base/common/event.ts:127:84\nat d.value in src/vs/base/common/event.ts:178:85\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.z in src/vs/base/common/event.ts:1167:9\nat s.fire in src/vs/base/common/event.ts:1191:9\nat j.filter in src/vs/platform/quickinput/browser/quickInputTree.ts:1522:41\nat r.Mb in src/vs/platform/quickinput/browser/quickInput.ts:562:36\nat d.value in src/vs/platform/quickinput/browser/quickInput.ts:828:11\nat s.y in src/vs/base/common/event.ts:1156:13\nat s.fire in src/vs/base/common/event.ts:1187:9\nat f.Z in src/vs/base/browser/ui/inputbox/inputBox.ts:537:21\nat HTMLInputElement.<anonymous> in src/vs/base/browser/ui/inputbox/inputBox.ts:199:39\n```\n[Go to Errors Site](https://errors.code.visualstudio.com/card?ch=dc96b837cf6bb4af9cd736aa3af08cf8279f7685&bH=143e7881-6564-68d1-f5f9-6626b876f6ee)",
    "labels": [
      "bug",
      "error-telemetry",
      "insiders-released"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-24T07:49:31",
    "first_answer_author": "TylerLeonhardt",
    "first_answer_body": "Looked through all references of `'command' in ...` this is the only one that is suspicious:\r\n\r\nhttps://github.com/microsoft/vscode/blob/dc96b837cf6bb4af9cd736aa3af08cf8279f7685/src/vs/workbench/contrib/terminal/browser/terminalRunRecentQuickPick.ts#L272\r\n\r\n* it's in a quick pick\r\n* it's not handling `undefined` if `activeItems` is empty (which is possible)\r\n\r\nEDIT: Easy repro steps:\r\n* Open `Run Recent Command`\r\n* `SHIFT+TAB` to have focus leave the list\r\n* Dev tools says the above error",
    "first_answer_creation_time": "2024-06-03T01:08:42",
    "was_closed_after_first_comment": true
  },
  {
    "title": "[Testing] testController.items.delete is not removing the item from the tree UI",
    "url": "https://github.com/microsoft/vscode/issues/213316",
    "author_name": "pavelfeldman",
    "question_body": "<!-- \u26a0\ufe0f\u26a0\ufe0f Do Not Delete This! bug_report_template \u26a0\ufe0f\u26a0\ufe0f -->\r\n<!-- Please read our Rules of Conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- \ud83d\udd6e Read our guide about submitting issues: https://github.com/microsoft/vscode/wiki/Submitting-Bugs-and-Suggestions -->\r\n<!-- \ud83d\udd0e Search existing issues to avoid creating duplicates. -->\r\n<!-- \ud83e\uddea Test using the latest Insiders build to see if your issue has already been fixed: https://code.visualstudio.com/insiders/ -->\r\n<!-- \ud83d\udca1 Instead of creating your report here, use 'Report Issue' from the 'Help' menu in VS Code to pre-fill useful information. -->\r\n<!-- \ud83d\udd27 Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: No\r\n\r\n<!-- \ud83e\ude93 If you answered No above, use 'Help: Start Extension Bisect' from Command Palette to try to identify the cause. -->\r\n<!-- \ud83d\udce3 Issues caused by an extension need to be reported directly to the extension publisher. The 'Help > Report Issue' dialog can assist with this. -->\r\n- VS Code Version: 1.90\r\n- OS Version: all\r\n\r\nSteps to Reproduce:\r\n\r\n`testController.items.delete` does not remove the item from the test tree.\r\n\r\nDownstream bug: https://github.com/microsoft/playwright/issues/30965\r\n\r\n// cc @connor4312 ",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "testing"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-23T14:38:40",
    "first_answer_author": "VSCodeTriageBot",
    "first_answer_body": "Thanks for creating this issue! It looks like you may be using an old version of VS Code, the latest stable release is 1.89.1. Please try upgrading to the latest version and checking whether this issue remains.\n\nHappy Coding!",
    "first_answer_creation_time": "2024-05-23T14:38:58",
    "was_closed_after_first_comment": true
  },
  {
    "title": "Creating/Removing cells is broken",
    "url": "https://github.com/microsoft/vscode/issues/212600",
    "author_name": "ulugbekna",
    "question_body": "Cannot create new cells or remove them (I don't have repro steps; it usually stops working after first time creating a new cell)\n\n\n\nhttps://github.com/microsoft/vscode/assets/16353531/f9c08dd1-d64d-45f0-88c9-e6970b1bb604\n\n\n\nVersion: 1.90.0-insider\nCommit: 29aeab1cbb350107a7bd5962b5e7efe745e0a3ec\nDate: 2024-05-13T05:59:57.400Z\nElectron: 29.3.1\nElectronBuildId: 9464424\nChromium: 122.0.6261.156\nNode.js: 20.9.0\nV8: 12.2.281.27-electron.0\nOS: Darwin arm64 23.4.0\n",
    "labels": [
      "bug",
      "verified",
      "insiders-released",
      "notebook-commands"
    ],
    "comments": 1,
    "issue_creation_time": "2024-05-13T12:16:41",
    "first_answer_author": "amunger",
    "first_answer_body": "repro:\r\n\r\n1. create an empty cell in a notebook and execute it\r\n2. create a new code cell, clicking `+ code` or using keybindings a/b\r\n:bug: no new cell is added, existing cell's editor is focused",
    "first_answer_creation_time": "2024-05-13T16:24:38",
    "was_closed_after_first_comment": true
  }
]

File vs_code_repo.py
content
POSITIVE_LABELS = [
    "bug",
    "question",
    "verified",
    "good first issue",
    "needs more info",
    "documentation",
    "feature request",
]

NEGATIVE_LABLES = [
    "invalid",
    "duplicate",
    "wontfix",
    "not a bug",
    "works on my machine",
    "resolved",
    "spam",
    "off-topic",
    "enhancement",
]


File __init__.py
content


File conftest.py
content
import logging

import pytest

from github_tickets.github_repo_fetcher import GithubRepoFetcher

POSITIVE_LABELS = [
    "bug",
]
NEGATIVE_LABLES = [
    "invalid",
]


@pytest.fixture
def github_issue_fetcher():
    return GithubRepoFetcher("microsoft/vscode", positive_labels=POSITIVE_LABELS,
                             negative_labels=NEGATIVE_LABLES, max_issues=10)


@pytest.fixture(scope='session', autouse=True)
def setup_logging():
    logging.basicConfig(level=logging.INFO, format='%(levelname)s - %(message)s')


File pytest.ini
content
[pytest]
log_cli = true
log_cli_level = INFO
log_cli_format = [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

File test_repo_fetcher.py
content
import logging

import pytest


@pytest.mark.asyncio
async def test_search_issues(github_issue_fetcher):
    for issue in await github_issue_fetcher.search_issues():
        logging.info(issue)


